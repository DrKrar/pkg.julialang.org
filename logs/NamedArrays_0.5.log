>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (855.078125 MB free)
Uptime: 5305.0 sec
Load Avg:  0.8740234375  0.90478515625  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     315152 s         48 s      34919 s     120083 s          6 s
#2  3500 MHz      72984 s         98 s      15491 s     431740 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.01587990498875813	0.8396457741741412	0.7003671006716601	0.6674152310306434
two	0.5979281227959397	0.2638542362639309	0.407620968763144	0.4807133638439529
a	72
b	28
c	13
d	95
e	83
f	25
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.729233  0.0385948   0.158432
b           │ 0.0287201   0.128702   0.100642 0.729233486377759 0.729233486377759
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.729233  0.0385948   0.158432
b     │ 0.0287201   0.128702   0.100642
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.729233  0.0385948   0.158432
b           │ 0.0287201   0.128702   0.100642
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.729233  0.0385948   0.158432
b     │ 0.0287201   0.128702   0.100642
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.998906  0.914594  0.614795  0.247955
二              │ 0.391598  0.476277   0.17528   0.41561
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139723040704272
0-element Named Array{Any,1}

[0.561094 0.0107697 0.820368 0.481977; 0.848216 0.253587 0.69589 0.84482]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.561094  0.0107697   0.820368   0.481977
two   │  0.848216   0.253587    0.69589    0.844822×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.561094  0.0107697   0.820368   0.481977
two   │  0.848216   0.253587    0.69589    0.844822×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.278931    -0.214153  …    -0.537275    -0.291323
2     │     1.32385     -1.14818  …      1.05231     0.1705791000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    -2.14128     0.159411
2     │    0.459403     0.780036
3     │  -0.0418938  -0.00556591
4     │    -1.50226     0.843051
5     │     1.01058     0.149968
6     │     1.50252     0.915181
7     │    -2.00066    0.0960019
8     │   -0.137235     -0.82902
9     │   -0.643612    -0.439991
⋮                 ⋮            ⋮
992   │    0.540505     0.337593
993   │    0.397004    -0.392518
994   │   -0.363341     0.107965
995   │    -1.03019    -0.444358
996   │     1.41079     0.861456
997   │   -0.551768     -1.38197
998   │     1.38438     -1.29795
999   │    0.386868     -2.32131
1000  │    0.471286     0.4052411000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.399635
2    │ -0.879153
3    │   0.25462
4    │ -0.616391
5    │ -0.673018
6    │ -0.588391
7    │   1.10125
8    │  -1.09254
9    │   -0.1325
⋮              ⋮
992  │ -0.968287
993  │  -1.20732
994  │    0.9208
995  │   1.47607
996  │   2.65074
997  │  -1.14229
998  │   -1.2168
999  │   1.45913
1000 │  0.8954152×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.602721  0.218542
1           │ 0.314422  0.864065

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.413631  0.0585083
1           │  0.695033  0.0219853
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.733502
2  │ 0.995888
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.754624  0.0678064
2     │  0.172003   0.868818
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.989186  0.700625
2     │ 0.304317  0.240046

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.521392  0.965208
2     │ 0.288229   0.12728
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.715156  0.552576
2     │ 0.895663   0.51053

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.777013  0.843496
2     │ 0.666435  0.383389

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.982746  0.188094
2     │ 0.603291  0.862694

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.701009   0.331534
2     │  0.837593  0.0199901
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0499813   0.229559
2     │  0.797192   0.980039

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.437652  0.226004
2     │ 0.841734  0.273117

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.553352  0.143457
2     │ 0.904317  0.811606
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.877583  0.0439569

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.846909  0.705626
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.468467
2     │ 0.526026

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.170566
2     │ 0.960453
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.722123  0.135367
2     │ 0.343356  0.220021
1000×1000 Named sparse matrix with 109 Float64 nonzero entries:
	[13824790180967006716,  5004131969199419793]  =  0.08838848351518247
	[15078133678202242611, 16462243977607957471]  =  0.030094443806767623
	[397394769374478572  ,  6806539949965918083]  =  0.7266048212538205
	[12843503472939723182, 14517667374310463124]  =  0.9294529129404336
	[10338346681654797567, 18443816037252674910]  =  0.09486288754234828
	[7841950699682704949 ,  5062864901616737721]  =  0.9033696684820918
	[14264755834865868473, 17676219393380616284]  =  0.7282205633733425
	[7799201424495593660 ,  7425701996526302553]  =  0.13731180528144482
	                                              ⋮
	[16202651256804923129, 13710539999002292266]  =  0.15298924085579135
	[13148990739816288468,  5567682937376679626]  =  0.9009426372640197
	[8969053341726467224 ,  6332455606016291123]  =  0.7766801320001884
	[1203336841330469213 , 17718833055079784125]  =  0.54724623659016
	[7176931096052980683 , 10370911177498520402]  =  0.9531062197654627
	[17418510937611012500, 17737936919457265947]  =  0.057070529314507734
	[5567682937376679626 , 16031689834122954645]  =  0.34313984047177026
	[1082045492561856594 , 11314283927973801071]  =  0.3605574145505823
	[15408733635197285348, 16202651256804923129]  =  0.7502134793206772Timing named index: 0.00179066, array index: 0.000830157, named key: 0.128186329
Timing sum large sparse array: 0.026149493, named: 0.028727974
done!
INFO: NamedArrays tests passed

>>> End of log
