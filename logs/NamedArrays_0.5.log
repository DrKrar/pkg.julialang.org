>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (862.953125 MB free)
Uptime: 6248.0 sec
Load Avg:  1.0498046875  0.98193359375  1.04345703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     332938 s       4002 s      41810 s     180708 s         12 s
#2  3503 MHz      94097 s       4206 s      19636 s     490580 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.6996299541090798	0.8729796531503247	0.4496258364312413	0.5826542092941833
two	0.9899672702720277	0.17711015175974265	0.29088388789559794	0.6051417414538163
a	28
b	39
c	68
d	87
e	51
f	77
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.195904  0.645505  0.753487
b           │ 0.109862  0.491026  0.121259 0.19590438544120214 0.19590438544120214
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.195904  0.645505  0.753487
b     │ 0.109862  0.491026  0.121259
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.195904  0.645505  0.753487
b           │ 0.109862  0.491026  0.121259
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.195904  0.645505  0.753487
b     │ 0.109862  0.491026  0.121259
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.594296  0.461087  0.273274  0.535605
二              │  0.32958  0.427873  0.995187  0.494399
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140471147315552
0-element Named Array{Any,1}

[0.951497 0.970696 0.944098 0.236191; 0.320911 0.985142 0.0635107 0.969793]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.951497   0.970696   0.944098   0.236191
two   │  0.320911   0.985142  0.0635107   0.9697932×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.951497   0.970696   0.944098   0.236191
two   │  0.320911   0.985142  0.0635107   0.9697932×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.70582     0.428809  …    -0.675588    -0.516598
2     │     1.50169     -2.17548  …     -1.34617      1.067391000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.131585    -1.11274
2     │  -0.752311     0.58974
3     │ -0.0812186   -0.728068
4     │    1.52286    0.114698
5     │  -0.122475   -0.731108
6     │    0.25137     1.88508
7     │   0.936898    0.150542
8     │    1.08279    -1.22222
9     │    1.02864   -0.528326
⋮                ⋮           ⋮
992   │    1.06937    0.676554
993   │   -1.17746    0.356858
994   │   0.719544    0.127326
995   │   -1.17427    -1.30972
996   │  -0.247566   -0.968019
997   │   0.311022    0.877358
998   │    0.53514  -0.0394981
999   │    1.41003   -0.190855
1000  │    2.82543   -0.8279081000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │ -0.0355943
2    │   0.855073
3    │   0.904701
4    │  -0.472671
5    │   0.571767
6    │  -0.176441
7    │    0.57396
8    │  -0.522533
9    │  -0.999714
⋮               ⋮
992  │  -0.832965
993  │   0.526563
994  │  -0.402126
995  │   0.726853
996  │  -0.650132
997  │    1.12825
998  │    1.61087
999  │   0.755439
1000 │    1.991092×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.469776  0.0334035
1           │  0.920002   0.242951

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.58054  0.308842
1           │ 0.531166  0.322594
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.323818
2  │ 0.172239
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │   0.3168  0.983146
2     │ 0.154417  0.382533
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.155954  0.768502
2     │ 0.808799  0.903334

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.29936  0.0568779
2     │  0.527953   0.828303
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.567901  0.714045
2     │ 0.696822  0.678138

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.305184  0.583626
2     │ 0.800049   0.60895

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.513501  0.259597
2     │ 0.449332  0.958659

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.3119  0.607646
2     │ 0.651097  0.513892
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.722224  0.854737
2     │ 0.105674  0.995633

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.894357  0.515238
2     │ 0.327649  0.722133

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.887933  0.233693
2     │ 0.393103  0.252348
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │       1        2
──────┼─────────────────
1     │ 0.95025  0.75764

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.618052  0.659862
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.125479
2     │ 0.908206

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.182836
2     │ 0.679203
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.655244  0.401667
2     │ 0.445066  0.430545
1000×1000 Named sparse matrix with 112 Float64 nonzero entries:
	[493461921061351564  ,   144428425607543167]  =  0.8034107375177428
	[1389137670392774052 ,  6526988131186142725]  =  0.9461081006943322
	[8032225585955793928 ,  4913249781191789579]  =  0.07435709994249118
	[2592170576103515364 ,  5927176887743683346]  =  0.6914333061235114
	[16655780295490676025, 11080872162023102847]  =  0.4479880787038586
	[14679805967366726614,  8069307267129313135]  =  0.6039247804551846
	[6006398908531647410 , 17678211741433686062]  =  0.4168820678238798
	[8699474171918181750 , 18168544338330653462]  =  0.1632890189937657
	                                              ⋮
	[1963270906945462479 , 10647878191897777347]  =  0.7606485358643114
	[917572771341395079  , 10924666096879366607]  =  0.0704287840071045
	[312622336801724658  ,  8471876845144429043]  =  0.43311517376674
	[8225434152398798479 , 17329041886349039120]  =  0.3857024698039091
	[187013141495975231  , 14774945750507892610]  =  0.783087563563956
	[2963278688299848341 ,  6738482027934271349]  =  0.12417573330904741
	[5839463014734961202 , 10024080200852233627]  =  0.5049354064032583
	[4970785464298144445 , 14057278280866812536]  =  0.3822402853772253
	[17211410618634043162,  5122894113285174381]  =  0.5056829811369783Timing named index: 0.000878372, array index: 0.000452402, named key: 0.079282621
Timing sum large sparse array: 0.011502848, named: 0.026696318
done!
INFO: NamedArrays tests passed

>>> End of log
