>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (846.69140625 MB free)
Uptime: 5891.0 sec
Load Avg:  0.90966796875  0.95166015625  1.044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     337844 s        118 s      40914 s     144929 s          9 s
#2  3500 MHz      81140 s       6191 s      17472 s     471387 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.4470273357039858	0.7612839557876458	0.08232680013887261	0.2640129915282363
two	0.045807024076559344	0.7375294530748293	0.3503733619998466	0.9516903636469451
a	70
b	42
c	6
d	69
e	24
f	95
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.564795  0.0372398   0.107447
b           │  0.140503   0.023672   0.251852 0.5647953000486667 0.5647953000486667
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.564795  0.0372398   0.107447
b     │  0.140503   0.023672   0.251852
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.564795  0.0372398   0.107447
b           │  0.140503   0.023672   0.251852
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.564795  0.0372398   0.107447
b     │  0.140503   0.023672   0.251852
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.842635   0.205051   0.718385    0.96948
二              │  0.626723   0.523903    0.51658  0.0633896
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.221869 0.807231 0.395006 0.300099; 0.0450805 0.386282 0.813066 0.733558]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.221869   0.807231   0.395006   0.300099
two   │ 0.0450805   0.386282   0.813066   0.7335582×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.221869   0.807231   0.395006   0.300099
two   │ 0.0450805   0.386282   0.813066   0.7335582×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.789699    -0.666404  …     0.571388      1.68376
2     │     1.36109    -0.191552  …    -0.735062    -0.2241381000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │   -0.470879    -0.219494
2     │   -0.894516     -2.22464
3     │    -1.03708    -0.517195
4     │    -0.26216     0.141803
5     │     1.23352     0.411515
6     │     1.41823     0.658248
7     │    -1.09022     0.566051
8     │    0.355914     -2.42965
9     │   -0.980905  -0.00991157
⋮                 ⋮            ⋮
992   │   -0.164565   -0.0697395
993   │    0.988832     0.382068
994   │   -0.514995    -0.728126
995   │    0.896601     -1.51818
996   │    -1.38405    0.0143205
997   │    0.485097     -1.16046
998   │   -0.349064    -0.432227
999   │    0.729725    -0.295253
1000  │    0.221933  -0.006907051000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.529115
2    │  -0.745963
3    │  -0.226217
4    │    -1.5868
5    │  -0.349142
6    │   0.397895
7    │  -0.566445
8    │  -0.221105
9    │ -0.0402717
⋮               ⋮
992  │   0.414702
993  │  -0.943815
994  │   -1.02928
995  │  -0.576215
996  │  0.0704322
997  │  -0.767899
998  │  -0.827308
999  │  -0.084577
1000 │   0.9685782×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.706713  0.921097
1           │ 0.218864  0.565339

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0519119   0.904542
1           │  0.642338  0.0613046
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.804375
2  │ 0.774577
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.710202   0.206766
2     │ 0.0901816   0.119388
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.572244   0.76817
2     │ 0.614665  0.467953

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.260221   0.79154
2     │  0.48352  0.990763
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.568346  0.957191
2     │ 0.188243  0.384932

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.681527  0.729274
2     │ 0.230314  0.784492

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.65922  0.446207
2     │ 0.826388  0.198095

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.450446  0.989901
2     │ 0.321418  0.567223
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.075663  0.428432
2     │ 0.550682  0.392769

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.958129  0.784372
2     │ 0.968492  0.164006

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.133866  0.334707
2     │ 0.374307  0.384529
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.537417  0.411621

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.58913  0.436334
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.633107
2     │ 0.658668

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.670722
2     │ 0.148583
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │    0.30068    0.722172
2     │   0.690675  0.00692966
1000×1000 Named sparse matrix with 85 Float64 nonzero entries:
	[11421859071148106276, 12809965746239821631]  =  0.6226010397302666
	[9623387968596508826 , 14033074738777421392]  =  0.5676101678125336
	[2117445326293199079 ,  6806539949965918083]  =  0.34821031778270006
	[3253468397832770835 ,  4981387750669837953]  =  0.8237732006586558
	[13317946559797870580,  7242692203416363180]  =  0.9989291483421656
	[15128086289133168420,  2836200141957565154]  =  0.9174378331759367
	[10077246284261493604, 10684064542878956755]  =  0.7694450596012481
	[18238638934550427920, 12532053171191892965]  =  0.9057941080556162
	                                              ⋮
	[10504931430957650557, 15078133678202242611]  =  0.12692221156098893
	[13950575499123628905,  1566360107212290167]  =  0.9535194963566758
	[3501065925215364276 ,  4682100877033407764]  =  0.9198708007091738
	[11033897610157224162, 15436097664388839821]  =  0.5512828246791805
	[1348625733340586    , 11551291857879764225]  =  0.17846516205044294
	[1628675476083889103 ,  5122894113285174381]  =  0.5807717251023286
	[14580339014010232292,  1842419535934980543]  =  0.9699888770039018
	[14995138918287078531,  7957587899775749890]  =  0.18787502940367573
	[9870978712100122380 ,  2588469222286953884]  =  0.775587872070785Timing named index: 0.001397549, array index: 0.000637205, named key: 0.119157421
Timing sum large sparse array: 0.031487399, named: 0.027454333
done!
INFO: NamedArrays tests passed

>>> End of log
