>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (828.31640625 MB free)
Uptime: 6278.0 sec
Load Avg:  1.0615234375  1.01513671875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     292692 s        110 s      41309 s     216022 s          8 s
#2  3500 MHz      80540 s         38 s      18152 s     511448 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0425035    0.61407   0.977724
b           │  0.602588   0.561111   0.721944 0.04250350608607367 0.04250350608607367
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0425035    0.61407   0.977724
b     │  0.602588   0.561111   0.721944
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0425035    0.61407   0.977724
b           │  0.602588   0.561111   0.721944
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0425035    0.61407   0.977724
b     │  0.602588   0.561111   0.721944
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.956052  0.599908   0.66898  0.352726
two   │ 0.754967  0.854365  0.151784  0.588641
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.882234  0.829581
1           │ 0.773622  0.609262

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.794736   0.80829
1           │  0.68583  0.178714
2-element Named Array{Float64,1}
A │ 
──┼──────────
1 │ 0.0362136
2 │  0.945771
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.783904  0.888044
2     │ 0.756953  0.388316
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.117124  0.808106
2     │ 0.423943   0.12868

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.859142  0.325729
2     │ 0.561527  0.784371
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.572668  0.789003
2     │ 0.718667  0.251304

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.322873   0.350841
2     │  0.388483  0.0374592

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │    0.56598     0.91635
2     │   0.571106  0.00192064

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.981644  0.971985
2     │  0.92666  0.262638
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │    0.17736    0.821306
2     │ 0.00361991     0.77064

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.948642   0.994058
2     │   0.24902  0.0895472

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.690082  0.371681
2     │ 0.617383  0.248748

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.330836  0.835221
2     │  0.72357  0.955275

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.874239  0.847231
2     │ 0.738418  0.504677

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0167498     0.9329
2     │  0.498605    0.44616

[:, :, C=1, D=2, E=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.340275  0.00796637
2     │  0.0282298    0.823417

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.688082  0.129087
2     │ 0.113674  0.885853
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.970745  0.419543

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.610995  0.736219
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │   0.1409
2     │ 0.619851

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.875674
2     │ 0.937364
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.227298   0.368457
2     │ 0.0116442   0.789028
done!
Timing named index: 0.001016414, array index: 0.000705098, named key: 0.11872801
Timing sum large sparse array: 0.013640075, named: 0.038364271
INFO: NamedArrays tests passed

>>> End of log
