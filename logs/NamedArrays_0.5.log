>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.1
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (838.5390625 MB free)
Uptime: 7326.0 sec
Load Avg:  1.046875  0.98876953125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     437126 s       4572 s      44148 s     158663 s         19 s
#2  3500 MHz      96049 s       1800 s      19428 s     599733 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.11.0
 - DataStructures                0.5.1
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.6614388279665009	0.6753108926686795	0.06281397895739138	0.2874441891994084
two	0.724674756355904	0.8638569551937918	0.012923462950427789	0.6562992523437956
a	85
b	54
c	55
d	13
e	78
f	28
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.106704   0.528111   0.912271
b           │  0.274315   0.298171  0.0214068 0.10670395537390309 0.10670395537390309
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.106704   0.528111   0.912271
b     │  0.274315   0.298171  0.0214068
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.106704   0.528111   0.912271
b           │  0.274315   0.298171  0.0214068
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.106704   0.528111   0.912271
b     │  0.274315   0.298171  0.0214068
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.872261  0.844268  0.808351  0.285713
二              │ 0.118292   0.75557  0.125932  0.865939
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139924334679792
0-element Named Array{Any,1}

[0.316453 0.786297 0.84122 0.840226; 0.237294 0.709328 0.371155 0.961226]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.316453  0.786297   0.84122  0.840226
two   │ 0.237294  0.709328  0.371155  0.9612262×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.316453  0.786297   0.84122  0.840226
two   │ 0.237294  0.709328  0.371155  0.9612262×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.864092      -2.33296  …     -0.205458     -0.477226
2     │      -1.3139      -1.32578  …       1.09126      -2.355481000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.500254   -0.270063
2     │   0.529843    -0.98645
3     │    1.09495   -0.469147
4     │   0.183591   -0.989104
5     │  -0.261344    -0.20811
6     │  -0.170097    -1.05169
7     │   0.808603    0.419699
8     │  -0.946191  -0.0846333
9     │  0.0781162   -0.488551
⋮                ⋮           ⋮
992   │   0.978928   -0.769648
993   │   0.773079   -0.872308
994   │   -1.58845     1.31214
995   │  -0.769698   -0.125923
996   │  0.0727903     1.19651
997   │   0.258186     2.27887
998   │    1.57184   -0.429632
999   │  -0.485554   0.0708132
1000  │ -0.0757553    0.2059781000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.121917
2    │    1.90483
3    │    1.09249
4    │   0.348742
5    │   0.851875
6    │  -0.600165
7    │  -0.472315
8    │   0.148181
9    │  -0.418914
⋮               ⋮
992  │  -0.491602
993  │   0.761663
994  │ -0.0984508
995  │   0.119143
996  │   -2.11711
997  │   0.761132
998  │  -0.862092
999  │  -0.912579
1000 │    0.162152×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │ 0.00303651    0.129984
1           │   0.275107    0.640114

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.305543  0.577639
1           │ 0.314316  0.685433
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.255953
2  │ 0.106288
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.582188  0.299626
2     │  0.35152  0.538245
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.544959  0.226771
2     │ 0.729946  0.765106

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.470485  0.376761
2     │ 0.928257  0.828831
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.420216   0.251125
2     │ 0.0531664   0.547104

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.132432    0.8502
2     │ 0.800516  0.242282

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.875327   0.59407
2     │ 0.962873  0.615117

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.490344  0.496261
2     │  0.23245  0.225314
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.724208  0.235498
2     │ 0.173986  0.186435

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.680554  0.394316
2     │ 0.587669  0.348414

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.175691  0.722783
2     │ 0.454392  0.785658
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.353445  0.288241

[:, :, C=2] =
A ╲ B │       1        2
──────┼─────────────────
1     │ 0.49966  0.34796
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │   0.8119
2     │ 0.412159

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.706635
2     │ 0.491224
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.614461  0.134576
2     │ 0.179156    0.4152
1000×1000 Named sparse matrix with 111 Float64 nonzero entries:
	[17925559038321074944, 15422846019410515149]  =  0.3460571847234848
	[15362413774630394309, 16544335554558850098]  =  0.8410875155863027
	[7401919267257527897 ,  4247719799217886270]  =  0.29401150593166725
	[17131895616600668418, 17822619313291261357]  =  0.6778602851166768
	[16149616971335246819,  4394159825732135742]  =  0.4087857964954307
	[14995138918287078531,  8265524791738013937]  =  0.22759275940855916
	[3029872332119767940 ,  3039451196773527828]  =  0.5264013349602985
	[6295185824851981085 ,   906960604709401733]  =  0.857539671371107
	                                              ⋮
	[17212324651030760382,  4214085865611670439]  =  0.9869664338824584
	[17467549359930456931,  5597731276780160114]  =  0.6814443462175279
	[11052831234341989908, 12169815624147734794]  =  0.5231169594033096
	[2792481481398066916 , 12169815624147734794]  =  0.3031054718212265
	[8725235013359650451 , 14057278280866812536]  =  0.14212390627774263
	[13093952135199384747, 11527542315164007414]  =  0.0726139398780341
	[4807337909340391805 ,  7957587899775749890]  =  0.5615562159887255
	[18012118909807029393,  3010300210541878305]  =  0.8832051729898047
	[11791379751769019020,  9133170895916704973]  =  0.44359009714125763Timing named index: 0.001679667, array index: 0.000718469, named key: 0.126695834
Timing sum large sparse array: 0.012322522, named: 0.028837767
done!
INFO: NamedArrays tests passed

>>> End of log
