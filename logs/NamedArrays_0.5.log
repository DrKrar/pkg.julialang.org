>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (966.3828125 MB free)
Uptime: 7365.0 sec
Load Avg:  1.04443359375  0.955078125  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     395981 s       3568 s      41376 s     209016 s         27 s
#2  3500 MHz     135110 s       4274 s      21926 s     555398 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.2
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.14.0
 - DataStructures                0.5.2
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.2501673364616426	0.3465539310378425	0.09661060461356441	0.7160673445749843
two	0.843495905916839	0.8667613110946788	0.23765737633504025	0.027550646358462938
a	97
b	51
c	11
d	16
e	89
f	19
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.204953    0.2886  0.365978
b           │ 0.153423  0.830988  0.843125 0.2049529410411266 0.2049529410411266
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.204953    0.2886  0.365978
b     │ 0.153423  0.830988  0.843125
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.204953    0.2886  0.365978
b           │ 0.153423  0.830988  0.843125
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.204953    0.2886  0.365978
b     │ 0.153423  0.830988  0.843125
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │   0.60112  0.0460051   0.188054   0.618611
二              │  0.481605   0.771714   0.790076   0.991317
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140475842620208
0-element Named Array{Any,1}

[0.203281 0.911424 0.894981 0.4795; 0.695604 0.771594 0.652793 0.358906]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.203281  0.911424  0.894981    0.4795
two   │ 0.695604  0.771594  0.652793  0.3589062×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.203281  0.911424  0.894981    0.4795
two   │ 0.695604  0.771594  0.652793  0.3589062×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.400196       1.02681  …       1.56469     -0.455435
2     │      1.93323      -1.12906  …       1.49188      0.9406111000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.314753    0.279575
2     │  -0.126358     1.45286
3     │   -0.20674   -0.652606
4     │  -0.036069     1.03756
5     │   -2.22464       0.398
6     │  -0.203097   -0.642455
7     │  -0.380228     1.26979
8     │   0.538114    -1.11841
9     │   0.139543     1.69179
⋮                ⋮           ⋮
992   │   0.464986    0.588963
993   │ -0.0876777       1.001
994   │   -1.79428    0.243669
995   │     1.2834     2.43987
996   │   0.133151  -0.0212183
997   │   0.076942    0.516178
998   │   0.623957   -0.621499
999   │  -0.959881   -0.354057
1000  │  -0.777274   -0.2562731000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    1.65719
2    │   0.257387
3    │   0.556931
4    │    1.33389
5    │    0.66969
6    │   0.302174
7    │  -0.162042
8    │   0.121044
9    │    1.19332
⋮               ⋮
992  │   0.485162
993  │   0.315713
994  │   0.626842
995  │ -0.0642017
996  │   0.250519
997  │   0.383255
998  │  -0.742811
999  │  -0.595717
1000 │    0.129852×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.387333  0.0610322
1           │  0.262607   0.882613

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.121449  0.146572
1           │ 0.647461  0.738743
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.390028
2  │ 0.880022
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0539234   0.971685
2     │  0.728322   0.198136
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0679676   0.190617
2     │  0.985151   0.455959

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.564289   0.884994
2     │  0.139529  0.0745697
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.637066    0.846185
2     │   0.534737  0.00941221

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.148569  0.694528
2     │ 0.785345  0.176591

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.460753  0.678095
2     │ 0.165996  0.937502

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.342419  0.858467
2     │  0.29592  0.257378
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.915183  0.437899
2     │ 0.347245  0.185509

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.470112  0.876815
2     │ 0.922144  0.985372

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.721946   0.175572
2     │  0.682788  0.0769143
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.253785  0.899401

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.765688   0.17856
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.480064
2     │ 0.104866

[:, :, C=2] =
A ╲ B │          1
──────┼───────────
1     │   0.536653
2     │ 0.00101678
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.947808    0.93664
2     │ 0.0663053   0.541016
1000×1000 Named sparse matrix with 90 Float64 nonzero entries:
	[2758171916068192631 ,   144428425607543167]  =  0.9651013003795086
	[3761119224343897378 ,  6526988131186142725]  =  0.18940889242781123
	[10581043158258790064, 12419957900638875901]  =  0.28675718290060015
	[6345740875604378464 , 12809965746239821631]  =  0.5831011318259165
	[1523061068178304284 , 12809965746239821631]  =  0.7693485488433605
	[9872310664988650577 ,  5927176887743683346]  =  0.6147406212251858
	[532635700462514874  , 11080872162023102847]  =  0.7259533330746946
	[15905894300834924909,  4786699431706339713]  =  0.1747310581544399
	                                              ⋮
	[8507737825562801990 ,  4682100877033407764]  =  0.2554742466342734
	[12901330087571726961, 11641483179283066996]  =  0.5663178476865627
	[12288543705408635880,  6468689935112619700]  =  0.3109694532751939
	[16825537159737453803,  2318046236442875673]  =  0.7912940737115837
	[15607310917841701902,  9526342322394325946]  =  0.3736936890047715
	[3004739544949339451 , 17737936919457265947]  =  0.7620781685802038
	[1602213502834622003 , 10655964431342481635]  =  0.08677247642434627
	[16530907666167163390,  8779884342238752210]  =  0.08642586564904486
	[11394354523540829904,  7957587899775749890]  =  0.9366729725388685Timing named index: 0.001145216, array index: 0.000509894, named key: 0.123060127
Timing sum large sparse array: 0.014823803, named: 0.044905553
done!
INFO: NamedArrays tests passed

>>> End of log
