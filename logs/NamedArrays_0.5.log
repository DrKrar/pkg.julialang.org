>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (832.25390625 MB free)
Uptime: 5626.0 sec
Load Avg:  0.9619140625  0.97265625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     300572 s         51 s      37857 s     146257 s          9 s
#2  3500 MHz      76380 s         94 s      17495 s     451750 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.473351   0.528001   0.342414
b           │ 0.0281131   0.267353  0.0493924 0.4733510967697194 0.4733510967697194
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.473351   0.528001   0.342414
b     │ 0.0281131   0.267353  0.0493924
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.473351   0.528001   0.342414
b           │ 0.0281131   0.267353  0.0493924
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.473351   0.528001   0.342414
b     │ 0.0281131   0.267353  0.0493924
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.140057   0.14735  0.355383  0.956898
two   │ 0.641471   0.12715  0.308537  0.561314
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.803399  0.821013
1           │ 0.295939   0.29552

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.930824  0.259902
1           │ 0.315291  0.780224
2-element Named Array{Float64,1}
A │ 
──┼──────────
1 │ 0.0561253
2 │  0.750635
2×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00385808    0.452305
2     │   0.714489    0.211432
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.890517  0.0718813
2     │  0.725887   0.242087

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.211698  0.911992
2     │  0.86579  0.469789
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.208495  0.173325
2     │ 0.243111  0.575901

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.597187  0.557048
2     │ 0.686278  0.188292

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00951484     0.84824
2     │   0.718607    0.921477

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0917882   0.568874
2     │  0.547827  0.0135944
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.463099   0.127206
2     │ 0.0964692   0.773764

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.315964   0.285127
2     │ 0.0956254   0.963217

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.751766  0.447002
2     │ 0.924334  0.703432

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.400656  0.788117
2     │ 0.566273  0.413115

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.159517  0.610894
2     │  0.28525   0.14915

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.32385  0.0726945
2     │   0.10132   0.156557

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.872867   0.933635
2     │  0.877166  0.0567556

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.508465  0.954748
2     │ 0.237448  0.278024
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.172128  0.862125

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.936758  0.486089
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.312215
2     │ 0.136853

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │    0.5413
2     │ 0.0871094
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.467869   0.612709
2     │  0.635487  0.0136608
done!
Timing named index: 0.000908151, array index: 0.000458099, named key: 0.084453801
Timing sum large sparse array: 0.014260523, named: 0.030900732
INFO: NamedArrays tests passed

>>> End of log
