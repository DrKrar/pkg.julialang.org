>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (730.09375 MB free)
Uptime: 7598.0 sec
Load Avg:  1.42138671875  1.2275390625  1.05419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     422694 s       1260 s      36319 s     202274 s          9 s
#2  3500 MHz      94016 s       5338 s      17528 s     628153 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.9555409084542099	0.3228292298445212	0.6809001418691194	0.9142194754786233
two	0.11709704379890762	0.6053359546375439	0.8024247602776113	0.633479623351056
a	98
b	26
c	2
d	56
e	7
f	41
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.434315   0.836581   0.498127
b           │  0.594686   0.106996  0.0528515 0.43431484529703823 0.43431484529703823
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.434315   0.836581   0.498127
b     │  0.594686   0.106996  0.0528515
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.434315   0.836581   0.498127
b           │  0.594686   0.106996  0.0528515
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.434315   0.836581   0.498127
b     │  0.594686   0.106996  0.0528515
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.728915  0.883153  0.508203  0.415933
二              │ 0.704365   0.73313  0.950363    0.7563
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.865544 0.065565 0.109447 0.72451; 0.707546 0.401558 0.273376 0.805084]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.865544  0.065565  0.109447   0.72451
two   │ 0.707546  0.401558  0.273376  0.8050842×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.865544  0.065565  0.109447   0.72451
two   │ 0.707546  0.401558  0.273376  0.8050842×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    0.0241531      0.112043  …      -1.67706      -1.56905
2     │     -2.12547    0.00809849  …      0.726358      0.1131281000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │ -0.0281863    0.491559
2     │    1.01719    -1.85504
3     │  -0.253768     -1.4589
4     │    1.10534    0.590361
5     │    1.16725   -0.656874
6     │   -0.61113    -1.34666
7     │  -0.736179    -1.69885
8     │   -1.77909     -0.6277
9     │   -1.35376    0.122343
⋮                ⋮           ⋮
992   │   -1.63273    -0.10307
993   │  -0.753507   -0.727271
994   │ -0.0806185    -2.53306
995   │  -0.761382     0.41207
996   │   0.336176    0.126891
997   │  -0.146251    0.974013
998   │   -0.51208    -1.27757
999   │    0.42542     -1.0156
1000  │    1.84304    -1.107051000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.328531
2    │  0.809747
3    │  0.866264
4    │ -0.744252
5    │ -0.329539
6    │  0.623541
7    │ -0.645122
8    │ -0.683008
9    │   1.40896
⋮              ⋮
992  │ -0.302606
993  │   1.92487
994  │ -0.814226
995  │  -1.26182
996  │ -0.604616
997  │ -0.940337
998  │  0.528361
999  │  0.739987
1000 │ -0.8465342×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.604478  0.0680008
1           │  0.594981   0.405964

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.472502  0.254315
1           │ 0.242629  0.678212
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.221431
2  │ 0.442291
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.292223  0.694404
2     │ 0.656001   0.72818
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00790285    0.602132
2     │   0.202642    0.996733

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.616453  0.461114
2     │ 0.372327  0.281439
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.302877  0.160582
2     │  0.49887  0.757776

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.704398  0.163367
2     │  0.48442  0.623277

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.417607  0.446724
2     │ 0.864548  0.864926

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0239717  0.0650149
2     │  0.356724   0.948414
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.919772  0.830967
2     │ 0.346853  0.565306

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.795978   0.782526
2     │  0.802659  0.0938533

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.498147  0.292285
2     │ 0.824562  0.884696
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.608923  0.598609

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.349664  0.586422
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.730639
2     │ 0.526865

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.731552
2     │ 0.390617
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.843596  0.544682
2     │ 0.163065  0.170111
1000×1000 Named sparse matrix with 102 Float64 nonzero entries:
	[4136980692892754005 ,  9690422262975321697]  =  0.661069573573092
	[1443935710653492582 , 12809965746239821631]  =  0.9248213243609451
	[4515533440070525328 ,  6134978669850253296]  =  0.8338340065595893
	[10213422356137903131, 10361072080411987344]  =  0.2098660991959973
	[1348625733340586    ,  8629498292780771804]  =  0.19713074795964936
	[16203939900270689774,  3253468397832770835]  =  0.008299899313946923
	[8580264188801969311 ,  8097707444526576530]  =  0.2506772555576289
	[16149616971335246819, 17609421066205025733]  =  0.6424619751581386
	                                              ⋮
	[8699333159457747740 , 10924666096879366607]  =  0.39488568928564316
	[15260609615288845879, 12459420750016908814]  =  0.9520457104606346
	[16077859356318100249, 14774945750507892610]  =  0.8426365982421928
	[1628675476083889103 ,  4788923618671962983]  =  0.4053519589791865
	[12876006501778729182,  8090338657268802519]  =  0.061176585983548915
	[7871408433937225815 ,  8779884342238752210]  =  0.07821561253622078
	[7010853231609596680 , 12624682912995533025]  =  0.7552776564673334
	[8032225585955793928 ,  9133170895916704973]  =  0.37091814485385477
	[8720304024814141479 ,  2588469222286953884]  =  0.13064221942169096Timing named index: 0.001154982, array index: 0.000466641, named key: 0.076693302
Timing sum large sparse array: 0.0189173, named: 0.019580552
done!
INFO: NamedArrays tests passed

>>> End of log
