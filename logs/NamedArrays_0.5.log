>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (970.90234375 MB free)
Uptime: 8483.0 sec
Load Avg:  1.021484375  0.96044921875  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     450126 s       6256 s      47550 s     242120 s         15 s
#2  3499 MHz     105831 s        697 s      20393 s     705641 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.09273269029597642	0.42776471573838326	0.6984345934953655	0.13483839844164658
two	0.05222472051460447	0.3854833063740646	0.6404474599996268	0.6762771237926772
a	42
b	78
c	86
d	50
e	12
f	38
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.750301  0.561591  0.631272
b           │  0.78589  0.481292  0.346439 0.7503010146845619 0.7503010146845619
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.750301  0.561591  0.631272
b     │  0.78589  0.481292  0.346439
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.750301  0.561591  0.631272
b           │  0.78589  0.481292  0.346439
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.750301  0.561591  0.631272
b     │  0.78589  0.481292  0.346439
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │ 0.0422425   0.763711   0.926423    0.88638
二              │ 0.0619553   0.735989   0.170509   0.441438
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
3
0-element Named Array{Any,1}

[0.0895438 0.671741 0.168 0.598284; 0.077143 0.753284 0.551837 0.14499]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0895438   0.671741      0.168   0.598284
two   │  0.077143   0.753284   0.551837    0.144992×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0895438   0.671741      0.168   0.598284
two   │  0.077143   0.753284   0.551837    0.144992×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.212705     -0.56217  …      -2.0318     0.453841
2     │    0.194028       2.9661  …    -0.552718    -0.2041451000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.350391     1.58792
2     │   0.435766   -0.963382
3     │   -1.76397   -0.414499
4     │   0.863043   -0.388388
5     │    1.35529   0.0506233
6     │   0.278155    0.378291
7     │     1.0869  -0.0613573
8     │   -0.77935     2.15896
9     │   0.738674   0.0649559
⋮                ⋮           ⋮
992   │   0.264862    0.875672
993   │    2.17199  -0.0946214
994   │   -2.24647   -0.623426
995   │    1.08045    0.776135
996   │   -1.58831   -0.225082
997   │  -0.972519    0.436533
998   │   0.773287     1.24756
999   │    0.46665    0.429987
1000  │  -0.110844     1.208381000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.082353
2    │   -1.14378
3    │ -0.0578773
4    │   -2.21902
5    │   0.444621
6    │  -0.220126
7    │   0.258376
8    │  -0.750112
9    │   -1.28884
⋮               ⋮
992  │   0.461293
993  │   -1.03354
994  │   0.567219
995  │   0.515634
996  │   0.755811
997  │    2.67829
998  │  0.0236679
999  │   -2.01472
1000 │ -0.08227712×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.354806   0.107006
1           │  0.230661  0.0182027

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.60372  0.916978
1           │ 0.866514   0.87728
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.193823
2  │ 0.111931
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.954642  0.0624212
2     │  0.888133   0.871086
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.312996  0.324129
2     │ 0.191645  0.999383

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00288059    0.609514
2     │   0.346311    0.849074
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.403936  0.307999
2     │ 0.664112  0.471256

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.656046  0.805848
2     │ 0.186336  0.332511

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.233115  0.908995
2     │ 0.774292  0.243426

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.082573  0.785566
2     │ 0.291488  0.969176
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.895177  0.480874
2     │ 0.243214  0.811024

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.775385  0.625023
2     │ 0.391683  0.163801

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.313184  0.494806
2     │  0.38495  0.762173
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.568503   0.56522

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.404598  0.397937
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.331222
2     │ 0.781189

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.827594
2     │ 0.433643
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.259609  0.478312
2     │ 0.234153  0.682883
1000×1000 Named sparse matrix with 101 Float64 nonzero entries:
	[11104426471044518599, 14304565767364922256]  =  0.11678444013088507
	[975384116789271147  ,  8699333159457747740]  =  0.21649825376982812
	[772560554181343720  , 17822619313291261357]  =  0.015580381258884168
	[10066988524776738469,  2230070772219402886]  =  0.5201163579013386
	[13700233674872906346,  8069307267129313135]  =  0.36569594189279075
	[16836080019131185762, 17211410618634043162]  =  0.9867577363650557
	[2324590769683141360 , 15774366784000975931]  =  0.7738089269976047
	[14475185020288943568, 11907679469289587679]  =  0.08303607828598669
	                                              ⋮
	[9133170895916704973 , 15717097331822026300]  =  0.4890774673637177
	[1692321568384860970 ,  7630593249633640373]  =  0.2751647007098015
	[10195714700097307537,  2318046236442875673]  =  0.4959043538672705
	[11332520718132086690, 12554874066387155728]  =  0.7686811455987925
	[4420061231740490028 , 10024080200852233627]  =  0.1200897046435454
	[5567682937376679626 ,  7989582431359101293]  =  0.9179463572361648
	[15552872266293998212, 11470862121108514714]  =  0.4201412304368515
	[17090183137420717841, 11314283927973801071]  =  0.7209645348221532
	[10260179183825814155,  1842419535934980543]  =  0.5921024359005136Timing named index: 0.000921937, array index: 0.000473068, named key: 0.071900353
Timing sum large sparse array: 0.015185464, named: 0.013892351
done!
INFO: NamedArrays tests passed

>>> End of log
