>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.5
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (850.48828125 MB free)
Uptime: 6867.0 sec
Load Avg:  0.85302734375  0.94384765625  0.96435546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     313967 s        117 s      42690 s     245436 s          8 s
#2  3500 MHz      76730 s         24 s      17588 s     576488 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.8.8
 - DataStructures                0.4.5
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0352839   0.968732    0.13085
b           │  0.515382   0.327174   0.659941 0.03528391839149059 0.03528391839149059
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0352839   0.968732    0.13085
b     │  0.515382   0.327174   0.659941
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0352839   0.968732    0.13085
b           │  0.515382   0.327174   0.659941
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0352839   0.968732    0.13085
b     │  0.515382   0.327174   0.659941
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.390421  0.100104  0.243823  0.311321
two   │ 0.453151  0.303409  0.597619  0.114044
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.508284  0.687524
1           │ 0.469823  0.589703

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.960697  0.394146
1           │ 0.417959  0.333083
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.565004
2 │ 0.072458
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.779433  0.0277379
2     │  0.669701   0.111494
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.276733   0.28703
2     │ 0.791732  0.411051

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0647982   0.507925
2     │  0.395991    0.13456
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.443504   0.192506
2     │ 0.0725691   0.566574

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.352854  0.174926
2     │ 0.234173   0.35112

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.59084  0.422841
2     │ 0.106296  0.574758

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0220825    0.58975
2     │  0.131524   0.713179
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.915682  0.755683
2     │ 0.655996  0.722616

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.789678  0.592423
2     │ 0.368958  0.699951

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.872432  0.505797
2     │ 0.749978  0.491509

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.821745  0.588497
2     │ 0.542772  0.449968

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.695408  0.550762
2     │ 0.621952  0.128642

[:, :, C=2, D=1, E=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.545605  0.00761097
2     │   0.907237    0.400766

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.682102  0.668951
2     │ 0.309542  0.598717

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.92551   0.10179
2     │ 0.911847  0.300523
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.312804  0.101094

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.944909  0.188416
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0132622
2     │  0.297127

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.913805
2     │ 0.244569
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.560595   0.21151
2     │ 0.213727  0.773773
done!
Timing named index: 0.001119828, array index: 0.000772333, named key: 0.098436283
Timing sum large sparse array: 0.00824233, named: 0.0226255
INFO: NamedArrays tests passed

>>> End of log
