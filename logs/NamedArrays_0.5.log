>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (964.30078125 MB free)
Uptime: 8213.0 sec
Load Avg:  1.029296875  0.96875  1.033203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     459862 s         38 s      44112 s     215686 s         12 s
#2  3500 MHz     109871 s        131 s      18911 s     675693 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.609960195505683	0.18258657229653807	0.2832188753411222	0.8903195303884586
two	0.8568816064563329	0.8592626311100218	0.5535060149174766	0.4245471332874593
a	79
b	40
c	60
d	24
e	30
f	97
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.383586   0.342147   0.600925
b           │ 0.0565399   0.476321   0.587634 0.3835856338496122 0.3835856338496122
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.383586   0.342147   0.600925
b     │ 0.0565399   0.476321   0.587634
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.383586   0.342147   0.600925
b           │ 0.0565399   0.476321   0.587634
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.383586   0.342147   0.600925
b     │ 0.0565399   0.476321   0.587634
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │ 0.0558033   0.692328  0.0447137   0.548338
二              │  0.218455   0.357507   0.108058   0.742875
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140046573884304
0-element Named Array{Any,1}

[0.638433 0.535113 0.484278 0.717394; 0.902153 0.318314 0.259832 0.0336025]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.638433   0.535113   0.484278   0.717394
two   │  0.902153   0.318314   0.259832  0.03360252×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.638433   0.535113   0.484278   0.717394
two   │  0.902153   0.318314   0.259832  0.03360252×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.509233      0.910184  …      -1.38903     -0.582749
2     │    -0.947728     -0.791713  …       1.69829       1.196021000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.187534   -0.762572
2     │  -0.343725    0.490601
3     │ -0.0365254     1.57542
4     │   -1.12567    -2.78793
5     │   0.285772     1.89979
6     │  -0.659853    -1.28769
7     │   -1.56536     0.98132
8     │   0.253538    0.883066
9     │    1.72314   -0.621735
⋮                ⋮           ⋮
992   │  -0.222876   -0.506574
993   │   -1.32992    0.272115
994   │   0.382691   -0.227136
995   │    1.20998     1.18433
996   │   0.421912   0.0667048
997   │   0.478941    -1.79058
998   │    1.93709    -1.38142
999   │  -0.692579   -0.867856
1000  │  -0.355288    0.7201331000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.328111
2    │ -0.579718
3    │   1.75865
4    │ -0.352652
5    │  0.597811
6    │ -0.051914
7    │   1.97864
8    │ -0.142892
9    │  0.288744
⋮              ⋮
992  │   2.21895
993  │  0.529472
994  │  -1.14663
995  │ 0.0304103
996  │   1.71217
997  │  0.749419
998  │ -0.228794
999  │  0.603911
1000 │ -0.2668122×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.771661   0.705226
1           │   0.36117  0.0694609

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.17231  0.168401
1           │ 0.115288  0.274035
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.650385
2  │ 0.991288
2×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.171172    0.571502
2     │   0.343973  0.00920994
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.398156  0.327211
2     │  0.24253  0.376871

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.113963  0.794828
2     │ 0.682282  0.697603
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.176699  0.221895
2     │ 0.593212  0.578559

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.162275  0.367446
2     │ 0.746641  0.270432

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.6948  0.210775
2     │ 0.854249  0.328028

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.683472  0.435842
2     │ 0.278038  0.138617
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.529266  0.767273
2     │ 0.707405  0.222762

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.427535  0.915536
2     │ 0.739246  0.952187

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0156269   0.105071
2     │  0.454012   0.924515
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.485155  0.201718

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0161444  0.0846478
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.548678
2     │ 0.795344

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │   0.5424
2     │ 0.420356
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00480533    0.637977
2     │   0.488262    0.318456
1000×1000 Named sparse matrix with 102 Float64 nonzero entries:
	[2773759897603617072 ,  4913249781191789579]  =  0.16397085255894273
	[10504931430957650557, 14066869468942639955]  =  0.7195523086219042
	[3064253281526677720 ,  5062864901616737721]  =  0.35321827184104504
	[5723128691850249417 , 18168544338330653462]  =  0.6588864455562082
	[312622336801724658  ,  5723128691850249417]  =  0.20321960569492514
	[3501065925215364276 ,  8265524791738013937]  =  0.24206064957529194
	[11594286046942303904,  4329451781928897369]  =  0.257798864473022
	[1241495296552961994 ,  4329451781928897369]  =  0.13781862667513312
	                                              ⋮
	[15128086289133168420,  5597731276780160114]  =  0.5670695344838939
	[12459420750016908814,   372001016642560619]  =  0.18743100999433615
	[4174785917342603289 ,  1203336841330469213]  =  0.2627588689084761
	[5777672114274436489 , 16031689834122954645]  =  0.31859684469039284
	[1523061068178304284 , 16031689834122954645]  =  0.11312602175960906
	[1987182164192973075 ,  1842419535934980543]  =  0.5065878146987917
	[14486665179875284614, 15240003619098155971]  =  0.5428533901922663
	[14027562189529080231, 13950575499123628905]  =  0.10315804027794351
	[10603672941428866019,  7519919299137062942]  =  0.4275378777643597Timing named index: 0.000967025, array index: 0.000418309, named key: 0.072230112
Timing sum large sparse array: 0.020960385, named: 0.015119235
done!
INFO: NamedArrays tests passed

>>> End of log
