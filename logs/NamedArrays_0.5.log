>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (836.3828125 MB free)
Uptime: 5477.0 sec
Load Avg:  0.9423828125  0.95361328125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     317006 s         48 s      38140 s     128731 s          6 s
#2  3499 MHz      56360 s         98 s      14989 s     466518 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0303271   0.524928   0.501201
b           │  0.329717   0.605744   0.222367 0.03032705024566207 0.03032705024566207
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0303271   0.524928   0.501201
b     │  0.329717   0.605744   0.222367
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0303271   0.524928   0.501201
b           │  0.329717   0.605744   0.222367
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0303271   0.524928   0.501201
b     │  0.329717   0.605744   0.222367
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.64527  0.0923635   0.292668   0.173905
two   │  0.958188   0.460942    0.33338  0.0285328
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.819069   0.982729
1           │   0.68382  0.0134395

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.576202   0.606544
1           │  0.851143  0.0415153
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.254325
2 │ 0.775236
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.507818   0.33993
2     │ 0.630679   0.49996
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.548922   0.120455
2     │  0.324639  0.0307526

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.47075  0.852202
2     │ 0.391866  0.532993
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.455072   0.986355
2     │ 0.0850671    0.82209

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.954113  0.174191
2     │  0.62531  0.937725

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.280741  0.112981
2     │ 0.261446  0.941521

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.85191  0.983592
2     │ 0.723242  0.189689
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.113644  0.606872
2     │ 0.421659  0.237716

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.940658   0.27698
2     │ 0.318203   0.95996

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.845251  0.853211
2     │  0.26299  0.827104

[:, :, C=2, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.505385    0.651345
2     │   0.462419  0.00196125

[:, :, C=1, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.834749   0.921826
2     │  0.820052  0.0346971

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.166428  0.201308
2     │ 0.310358  0.652071

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.339594  0.0293582
2     │   0.39051  0.0778938

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.958759  0.215585
2     │ 0.275029  0.749703
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.133959  0.705892

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.222164  0.066889
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.942122
2     │  0.27747

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.814558
2     │ 0.900277
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0044235   0.666486
2     │  0.859056   0.124113
done!
Timing named index: 0.000899453, array index: 0.00074217, named key: 0.091870766
Timing sum large sparse array: 0.021457324, named: 0.024878853
INFO: NamedArrays tests passed

>>> End of log
