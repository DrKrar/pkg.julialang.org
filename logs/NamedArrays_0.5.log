>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (852.83984375 MB free)
Uptime: 6192.0 sec
Load Avg:  1.0498046875  1.05078125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3488 MHz     352996 s          4 s      37266 s     155919 s         10 s
#2  3488 MHz      91993 s        199 s      16704 s     496878 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.6372203688339391	0.8274442983770698	0.5042257093837219	0.6911248767069786
two	0.8210671465027799	0.7567071230146787	0.5575620214781565	0.10262102344540502
a	67
b	61
c	60
d	66
e	13
f	75
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.22552   0.427075   0.819755
b           │  0.485913  0.0584494   0.128544 0.22551985293814525 0.22551985293814525
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.22552   0.427075   0.819755
b     │  0.485913  0.0584494   0.128544
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.22552   0.427075   0.819755
b           │  0.485913  0.0584494   0.128544
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.22552   0.427075   0.819755
b     │  0.485913  0.0584494   0.128544
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │  0.34381  0.899621  0.170892  0.948924
二              │ 0.829698  0.801487  0.393486  0.756319
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139778033273136
0-element Named Array{Any,1}

[0.110539 0.117944 0.536375 0.0563814; 0.709069 0.981584 0.967236 0.99718]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.110539   0.117944   0.536375  0.0563814
two   │  0.709069   0.981584   0.967236    0.997182×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.110539   0.117944   0.536375  0.0563814
two   │  0.709069   0.981584   0.967236    0.997182×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.759413      -2.06961  …      0.968562      0.187927
2     │     0.491826     -0.803154  …    -0.0779984      -0.573431000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.876252    0.814491
2     │  -0.402687     1.50545
3     │  -0.647714   -0.720111
4     │    0.56496    -1.68098
5     │   -1.11811    -0.16062
6     │ -0.0650818  0.00922043
7     │   0.385096    0.818119
8     │   0.206453   -0.572699
9     │   -2.03341     0.89565
⋮                ⋮           ⋮
992   │   -1.13279  -0.0797268
993   │   0.606163     1.51792
994   │   0.330702    0.560238
995   │  -0.373997    0.184766
996   │   0.115755     1.97311
997   │    1.66735    0.882494
998   │   -1.00025    -1.03669
999   │  -0.895971    0.122232
1000  │   -1.36353     1.010891000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.576657
2    │    0.74008
3    │  -0.311024
4    │   -1.45866
5    │   -3.03506
6    │     1.4503
7    │   -0.56231
8    │   0.522266
9    │  -0.998169
⋮               ⋮
992  │  -0.857279
993  │  -0.735712
994  │ -0.0183616
995  │   -1.50965
996  │   0.572525
997  │  -0.158336
998  │  -0.490188
999  │  -0.829356
1000 │  -0.1768562×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.917914  0.0966311
1           │  0.293942   0.149575

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.771653  0.278859
1           │ 0.605826  0.670219
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.701264
2  │ 0.0580173
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0738031   0.554522
2     │  0.432713   0.263612
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.374686   0.173821
2     │ 0.0528875   0.465632

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.103788  0.0428178
2     │  0.978879   0.413662
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.627523   0.31605
2     │ 0.640425  0.499237

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.259624   0.433317
2     │  0.868751  0.0506984

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.368356  0.261022
2     │  0.13457  0.553971

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0282674   0.971358
2     │  0.646735   0.607836
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.73591  0.530219
2     │ 0.178772  0.985416

[:, :, C=2, D=1, E=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │ 0.000643248     0.608868
2     │    0.227017     0.819574

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.732202  0.553774
2     │ 0.259832  0.627743
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.653595  0.194146

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.936574  0.186559
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.918003
2     │ 0.509637

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.21526
2     │ 0.401544
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.108225   0.42883
2     │  0.26947  0.535013
1000×1000 Named sparse matrix with 108 Float64 nonzero entries:
	[13873794816269884083,  8699333159457747740]  =  0.506685849544932
	[12261828542413417071, 16462243977607957471]  =  0.7410169643251467
	[17448184880248178237, 11080872162023102847]  =  0.5562637548124061
	[5188033427577448982 ,  4247719799217886270]  =  0.26459463707439057
	[9920432272297441209 , 17822619313291261357]  =  0.6466767788770835
	[3982709381579875351 ,  4786699431706339713]  =  0.5135059023406718
	[1030988749247038162 , 12295598998729798629]  =  0.8951691232120911
	[15530322316573698116,  4981387750669837953]  =  0.10083094224311862
	                                              ⋮
	[17737936919457265947, 16946861163327142185]  =  0.18200785597444247
	[13093952135199384747, 16267926292325351807]  =  0.4680863359572862
	[3648183837903989091 , 14169799449801373117]  =  0.8843971033829854
	[6738482027934271349 , 10647878191897777347]  =  0.6186617597517932
	[4247719799217886270 , 14027562189529080231]  =  0.9832622825889967
	[5887916164234050841 ,  4788923618671962983]  =  0.7441733098556937
	[4722070531727235685 , 10024080200852233627]  =  0.6741641273659476
	[8032225585955793928 , 12624682912995533025]  =  0.5912063019217013
	[2230070772219402886 , 13690505415342562739]  =  0.3877907741272364Timing named index: 0.001330552, array index: 0.000664069, named key: 0.12971006
Timing sum large sparse array: 0.012679264, named: 0.025689295
done!
INFO: NamedArrays tests passed

>>> End of log
