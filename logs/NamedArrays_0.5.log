>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (983.44140625 MB free)
Uptime: 9766.0 sec
Load Avg:  0.935546875  0.9326171875  0.98876953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     449667 s       6410 s      54935 s     367684 s         15 s
#2  3500 MHz     110088 s         44 s      22876 s     825829 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.19.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.515638191075338	0.559213124579262	0.20743025701358775	0.14608304603716138
two	0.7147926230888859	0.6513554431224267	0.3562662799997762	0.060330937098845405
a	28
b	50
c	94
d	36
e	15
f	59
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.19756   0.868199   0.909587
b           │  0.625879  0.0781904   0.771981 0.19756046921746462 0.19756046921746462
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.19756   0.868199   0.909587
b     │  0.625879  0.0781904   0.771981
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.19756   0.868199   0.909587
b           │  0.625879  0.0781904   0.771981
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.19756   0.868199   0.909587
b     │  0.625879  0.0781904   0.771981
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.832252   0.537757   0.112854  0.0602885
二              │  0.116379   0.362723   0.747949   0.492058
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.251059 0.738863 0.881374 0.746541; 0.310944 0.766494 0.976316 0.518084]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.251059  0.738863  0.881374  0.746541
two   │ 0.310944  0.766494  0.976316  0.5180842×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.251059  0.738863  0.881374  0.746541
two   │ 0.310944  0.766494  0.976316  0.5180842×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.211024      0.718855  …      0.141047         1.983
2     │      2.96865     -0.394839  …     -0.129211      -0.394721000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    -1.52973  0.000195388
2     │    -3.00702     0.229932
3     │    -2.14563   0.00778048
4     │   -0.841747      1.25124
5     │   -0.932321     -1.04443
6     │   -0.143192    -0.886399
7     │     1.18138   -0.0868527
8     │    -1.72909     -1.02363
9     │   -0.331714     -1.26096
⋮                 ⋮            ⋮
992   │    -1.29819     -1.74778
993   │    0.727536    -0.200239
994   │     0.44326   -0.0896257
995   │   -0.912895    -0.293069
996   │    -1.58206     0.858434
997   │   -0.484147   -0.0937743
998   │   -0.433449  -0.00553528
999   │     1.70498      1.31848
1000  │     2.52797    -0.5446041000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.175113
2    │  -0.298671
3    │    0.40895
4    │  -0.170142
5    │ -0.0575492
6    │  -0.992269
7    │    0.21554
8    │  -0.162422
9    │    1.96436
⋮               ⋮
992  │   0.443549
993  │   0.883166
994  │  -0.387181
995  │   -1.05868
996  │   0.631217
997  │   0.480954
998  │   -1.09026
999  │  -0.348109
1000 │    0.752592×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.72379   0.17473
1           │ 0.652346   0.58136

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.334455  0.825692
1           │ 0.546976  0.865909
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.867803
2  │ 0.751417
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.671967  0.676548
2     │ 0.114046  0.852461
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0711378   0.646492
2     │  0.156423   0.743448

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.794717  0.634026
2     │ 0.734288  0.806987
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.383654  0.0173332
2     │  0.392646   0.760186

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.488737  0.744456
2     │ 0.915943  0.788391

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.900804  0.772331
2     │ 0.777358  0.190758

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.809623  0.872756
2     │ 0.534396  0.277333
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.924163  0.0896881
2     │  0.942185   0.766976

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.873251  0.0764255
2     │  0.219759   0.625223

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.478604  0.713979
2     │  0.90108  0.990664
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.141973  0.276678

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.408146  0.979573
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.589941
2     │ 0.278543

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.138488
2     │ 0.553909
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.444161  0.428165
2     │ 0.643833  0.511388
1000×1000 Named sparse matrix with 72 Float64 nonzero entries:
	[16149616971335246819,  3929618674436644774]  =  0.9447799866959541
	[13928701608122345940, 12419957900638875901]  =  0.11113933073842319
	[7026046704018437269 , 12809965746239821631]  =  0.6749888573566933
	[3002012468963137344 , 16462243977607957471]  =  0.8100914581725245
	[6753547766291185871 , 16462243977607957471]  =  0.6418733043905827
	[4620553278458169351 , 10601912832305821454]  =  0.5984426545408046
	[11961818409580248909, 18053734596154680288]  =  0.8615572601774208
	[1526691723863411160 ,  9872310664988650577]  =  0.5766734882311546
	                                              ⋮
	[16243515418520287792, 11202982330472117227]  =  0.4151673005504448
	[15220802300650204788, 15673988649286256572]  =  0.7487427817883938
	[6081406087827180005 , 16300844420296039097]  =  0.7541867930538522
	[6295185824851981085 , 11732026533134275955]  =  0.1341897533473495
	[1095814029099585013 , 10361974346531339474]  =  0.18707473953198672
	[4878460211641475699 , 10024080200852233627]  =  0.23051505967792907
	[16784990760345090389, 14057278280866812536]  =  0.4626827240555531
	[15380324202042087980, 10663619072362037589]  =  0.4053325864549733
	[13884235257459061953, 14835807873575694564]  =  0.33379780783208113Timing named index: 0.002039061, array index: 0.000632732, named key: 0.127223818
Timing sum large sparse array: 0.013216655, named: 0.027467235
done!
INFO: NamedArrays tests passed

>>> End of log
