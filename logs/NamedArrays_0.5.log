>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (966.59765625 MB free)
Uptime: 7416.0 sec
Load Avg:  0.98193359375  0.95751953125  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     437585 s         48 s      37633 s     169642 s          7 s
#2  3499 MHz     107994 s         96 s      17766 s     602623 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.4227113299487597	0.444079531451671	0.23820883832448647	0.35308093667234
two	0.010231054447888077	0.8853545177665996	0.05946902767383211	0.2412386206304098
a	27
b	2
c	65
d	73
e	24
f	91
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0202816   0.571748   0.787055
b           │  0.567729   0.163483   0.917919 0.02028163939457639 0.02028163939457639
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0202816   0.571748   0.787055
b     │  0.567729   0.163483   0.917919
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0202816   0.571748   0.787055
b           │  0.567729   0.163483   0.917919
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0202816   0.571748   0.787055
b     │  0.567729   0.163483   0.917919
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.850236  0.851502  0.356942  0.592468
二              │ 0.263053  0.209178  0.451193  0.102763
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140175649636360
0-element Named Array{Any,1}

[0.135592 0.786391 0.229479 0.0642431; 0.570832 0.707326 0.496748 0.626385]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.135592   0.786391   0.229479  0.0642431
two   │  0.570832   0.707326   0.496748   0.6263852×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.135592   0.786391   0.229479  0.0642431
two   │  0.570832   0.707326   0.496748   0.6263852×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     2.21618    -0.154624  …    -0.517297     -1.01747
2     │     1.45844    -0.481432  …     0.189207      0.341931000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0705983   -0.283775
2     │  -0.773589    0.730055
3     │  -0.540653   -0.148312
4     │  0.0865408   -0.924138
5     │   0.486526   -0.590815
6     │    1.85236     1.02925
7     │   0.299617    -1.44286
8     │    1.99532    0.187693
9     │    1.89945   -0.789364
⋮                ⋮           ⋮
992   │  -0.956795      2.2452
993   │      1.515  -0.0440622
994   │  -0.222598     1.09512
995   │    -1.3407   -0.712084
996   │   -1.71224   -0.400553
997   │    1.40515     1.13718
998   │  -0.346239  -0.0386522
999   │   -0.81241   -0.887262
1000  │    1.00324   -0.7140191000-element Named Array{Float64,1}
A    │ 
─────┼─────────────
1    │     0.545516
2    │    -0.613258
3    │    -0.304455
4    │   -0.0846932
5    │     0.350278
6    │      1.08158
7    │     -1.44635
8    │     -1.70777
9    │    -0.835689
⋮                 ⋮
992  │     -1.45128
993  │     -1.52667
994  │     0.483363
995  │     -1.70086
996  │    -0.239776
997  │    -0.707793
998  │ -0.000363691
999  │    -0.816203
1000 │     0.2034722×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.620279  0.453533
1           │  0.64001  0.526541

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0484687   0.894107
1           │  0.469803   0.621541
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.179337
2  │ 0.933834
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.454801  0.657229
2     │ 0.568857  0.246012
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.174148    0.567662
2     │   0.827538  0.00234011

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.817192  0.334878
2     │ 0.954267  0.995873
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.675973   0.253626
2     │ 0.0426398    0.10107

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.296018  0.474096
2     │ 0.731013  0.803953

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.965836   0.648516
2     │  0.947127  0.0569239

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.585697   0.53049
2     │ 0.263262  0.857474
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.746341  0.995871
2     │ 0.467097  0.139356

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.643079  0.0233202
2     │  0.151705   0.118959

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0195169   0.307471
2     │  0.728579   0.223964
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.480123  0.334273

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.403278  0.0541167
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1
──────┼───────────
1     │   0.375107
2     │ 0.00578403

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.476476
2     │  0.63112
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.816217  0.926922
2     │ 0.884144  0.933609
1000×1000 Named sparse matrix with 102 Float64 nonzero entries:
	[202800707278592455  ,  1703847331300677320]  =  0.7897724097037684
	[12554874066387155728, 17095493447719212504]  =  0.7364952562360911
	[2537122889535958280 , 13888991764943741743]  =  0.3438681397311183
	[12664953981709537240,   592365234179887848]  =  0.3071882880646266
	[15530322316573698116,   592365234179887848]  =  0.8421068340517646
	[17853331136360781895,   592365234179887848]  =  0.47558551902700685
	[12900616928123055279, 10106592262940987645]  =  0.03637555292871153
	[5756544042870584356 , 10106592262940987645]  =  0.22002845806305737
	                                              ⋮
	[2666431284826573406 , 13710539999002292266]  =  0.5329774466653041
	[10086110697249909874,  4682100877033407764]  =  0.07893819021673876
	[7135933997555694158 ,  8471876845144429043]  =  0.8503470624031084
	[10698461782340713109,  5983786778458205040]  =  0.16676071607959186
	[14296059709790261690,  5983786778458205040]  =  0.03898233097562165
	[12590458817397224361, 15857670694969494589]  =  0.8274385964975903
	[7946303620992373940 ,  1526691723863411160]  =  0.5206710266283494
	[532635700462514874  ,  9223427034658990711]  =  0.496058233684747
	[4882987618343239453 , 16031689834122954645]  =  0.22723752776060402Timing named index: 0.001637668, array index: 0.000678742, named key: 0.114160101
Timing sum large sparse array: 0.024807041, named: 0.028181271
done!
INFO: NamedArrays tests passed

>>> End of log
