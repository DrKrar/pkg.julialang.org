>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.0
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (846.08984375 MB free)
Uptime: 6157.0 sec
Load Avg:  1.0693359375  1.0146484375  1.0576171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     348930 s       4274 s      37005 s     157588 s         14 s
#2  3499 MHz     100097 s       2552 s      17660 s     480994 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.10.0
 - DataStructures                0.5.0
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.8600709111327216	0.7532485950804138	0.2895799096948024	0.031356605057917486
two	0.8053844658617098	0.09328354909050796	0.32585241354999295	0.007956530899588365
a	48
b	69
c	44
d	98
e	89
f	47
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.405435    0.31974  0.0857348
b           │  0.518594   0.867101    0.13318 0.4054352629922646 0.4054352629922646
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.405435    0.31974  0.0857348
b     │  0.518594   0.867101    0.13318
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.405435    0.31974  0.0857348
b           │  0.518594   0.867101    0.13318
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.405435    0.31974  0.0857348
b     │  0.518594   0.867101    0.13318
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.441821  0.279191  0.304209  0.327026
二              │ 0.321814  0.422672  0.400047  0.806702
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139874411545648
0-element Named Array{Any,1}

[0.210061 0.718738 0.960965 0.180768; 0.699316 0.763453 0.366016 0.797085]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.210061  0.718738  0.960965  0.180768
two   │ 0.699316  0.763453  0.366016  0.7970852×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.210061  0.718738  0.960965  0.180768
two   │ 0.699316  0.763453  0.366016  0.7970852×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.17655      0.578465  …      0.213519     -0.801026
2     │     0.165774    -0.0174581  …      0.345332     -0.9099671000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.74695   0.451186
2     │   0.33216   -1.18015
3     │ -0.952622   0.903361
4     │ -0.723562    3.05486
5     │ -0.275841    0.79746
6     │  0.399439   0.497869
7     │  0.519149  -0.663712
8     │  0.239256  -0.156768
9     │  0.381146  -0.975883
⋮               ⋮          ⋮
992   │ -0.500347    2.12224
993   │ -0.202287    1.17771
994   │  -1.61488  -0.386247
995   │ -0.482194   0.675672
996   │  -1.35293  -0.367974
997   │  0.156333   -2.46661
998   │  -1.01121  -0.885228
999   │  -1.11969    0.59941
1000  │ -0.461185   0.8642851000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │   -0.796866
2    │    0.037484
3    │    0.039693
4    │     1.61052
5    │      1.0467
6    │ 0.000783893
7    │    0.276532
8    │   -0.294971
9    │   -0.743122
⋮                ⋮
992  │     1.30812
993  │    0.672184
994  │   -0.980301
995  │   -0.638179
996  │   -0.390797
997  │     0.17706
998  │    0.698409
999  │  -0.0610817
1000 │   -0.9111842×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.199763  0.870505
1           │ 0.594408  0.254484

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.112664  0.652566
1           │ 0.300941  0.534017
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.776435
2  │ 0.817436
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.871977  0.798681
2     │ 0.120423  0.290229
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.270267  0.717014
2     │ 0.838222  0.533748

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.336712    0.103702
2     │ 0.00914954    0.696051
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.743754  0.00528434
2     │   0.791439    0.683035

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.513076   0.77803
2     │ 0.196069  0.260726

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.419103  0.527812
2     │ 0.930885  0.218363

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.318268  0.351017
2     │ 0.802621  0.888551
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.261137  0.724408
2     │ 0.797899  0.859018

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.841963    0.37373
2     │ 0.0983832  0.0913232

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.821654  0.196714
2     │ 0.165348  0.989907
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.380922  0.674568

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.281407  0.792999
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.473156
2     │ 0.537047

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0892746
2     │  0.451253
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.751006  0.727853
2     │  0.16907  0.584253
1000×1000 Named sparse matrix with 100 Float64 nonzero entries:
	[14324755336029521502,  6526988131186142725]  =  0.5295210229207152
	[13872873498766619962,   113574861176001527]  =  0.2342907389247697
	[15465980046630820984,  6806539949965918083]  =  0.6990980594486957
	[16427568314583164731,  8629498292780771804]  =  0.19957132636846486
	[13975069277216705747, 12295598998729798629]  =  0.904459925826981
	[6468689935112619700 ,  4981387750669837953]  =  0.12007712773089385
	[10610022376412481897, 17211410618634043162]  =  0.24954664423335893
	[1406197640930237395 , 16408863325498676967]  =  0.40335581180859226
	                                              ⋮
	[12532053171191892965, 11993454575275700781]  =  0.410679277816107
	[15220802300650204788, 10370911177498520402]  =  0.2555275106252368
	[3014575823142358933 ,  7989582431359101293]  =  0.9474829171194594
	[10635173353039072981,  8779884342238752210]  =  0.39609923172009665
	[2117445326293199079 ,  1203336841330469213]  =  0.42799824237924544
	[16909640532418341430, 12624682912995533025]  =  0.399795829888844
	[11791379751769019020,  1861743268047760089]  =  0.9486512186408445
	[9440739376838893158 ,  3279378535085980212]  =  0.04202855841108866
	[9872310664988650577 ,  2588469222286953884]  =  0.9482400115286669Timing named index: 0.001534261, array index: 0.000713952, named key: 0.117694307
Timing sum large sparse array: 0.013524928, named: 0.025407639
done!
INFO: NamedArrays tests passed

>>> End of log
