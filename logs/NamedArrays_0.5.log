>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (854.5546875 MB free)
Uptime: 9146.0 sec
Load Avg:  0.98388671875  0.9853515625  1.01806640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     310812 s       5121 s      39103 s     495564 s          4 s
#2  3499 MHz      46777 s        844 s      12373 s     846604 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.08276783575296731	0.14749304746158476	0.399787165119454	0.45183146672237906
two	0.3117660164939762	0.20455940347239765	0.6110319546653329	0.6295324222804004
a	63
b	86
c	65
d	54
e	73
f	55
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.263051   0.196107   0.198254
b           │  0.221688   0.816716  0.0991508 0.2630506049481358 0.2630506049481358
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.263051   0.196107   0.198254
b     │  0.221688   0.816716  0.0991508
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.263051   0.196107   0.198254
b           │  0.221688   0.816716  0.0991508
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.263051   0.196107   0.198254
b     │  0.221688   0.816716  0.0991508
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │         一          二          三          四
────────────────┼───────────────────────────────────────────
一              │   0.343402    0.519415    0.361745    0.869359
二              │   0.782596  0.00337283   0.0235323    0.760083
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140190567893792
0-element Named Array{Any,1}

[0.0610451 0.157725 0.587433 0.722648; 0.157818 0.166557 0.955842 0.525978]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0610451   0.157725   0.587433   0.722648
two   │  0.157818   0.166557   0.955842   0.5259782×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0610451   0.157725   0.587433   0.722648
two   │  0.157818   0.166557   0.955842   0.5259782×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -0.61043     -0.193577  …       1.08729      -0.90859
2     │     -1.83149    -0.0680359  …       1.34549     -0.7113161000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.948986   -0.316508
2     │  -0.569548   -0.632679
3     │   -1.16366   0.0377571
4     │   -1.06446    0.569672
5     │   0.657667  -0.0527374
6     │    1.14282    0.921416
7     │  -0.478431     1.68894
8     │  -0.941277    0.486431
9     │    0.79644    0.908255
⋮                ⋮           ⋮
992   │  -0.516974   -0.436101
993   │   -0.34405   -0.228865
994   │  -0.331781   -0.163963
995   │  -0.240766    0.260391
996   │   0.939029    -1.63544
997   │  -0.302835    0.916905
998   │   0.210976     1.49986
999   │   -1.17876    -1.39092
1000  │  -0.341843    0.7197481000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.296519
2    │ 0.0727805
3    │   1.36144
4    │   -1.4378
5    │ 0.0243151
6    │  -1.23166
7    │   1.22288
8    │    1.5829
9    │ -0.679515
⋮              ⋮
992  │  -2.64272
993  │   1.22477
994  │  -1.15635
995  │  0.406968
996  │  -1.48454
997  │  -0.66761
998  │ 0.0740685
999  │ -0.872455
1000 │   0.328682×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.150912  0.286197
1           │  0.84597  0.855452

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.48961   0.20768
1           │ 0.989768  0.424851
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.527504
2  │ 0.764809
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.235442  0.432876
2     │ 0.925899  0.727656
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.750281  0.803235
2     │  0.19499  0.594486

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.778622  0.0920212
2     │  0.397501   0.866881
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.296185   0.539166
2     │ 0.0771196   0.549417

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.543925  0.497181
2     │ 0.876507   0.28813

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.430051   0.40971
2     │ 0.880238  0.660171

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.376908  0.774643
2     │ 0.814381  0.861651
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.796732  0.774744
2     │ 0.233042  0.375488

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.5215  0.378411
2     │ 0.171604  0.722585

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.808271  0.523629
2     │ 0.707132   0.61625
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.949458  0.616559

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.228205  0.553762
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.415284
2     │ 0.664773

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.323784
2     │ 0.720515
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.902702  0.458643
2     │ 0.220607  0.499728
1000×1000 Named sparse matrix with 92 Float64 nonzero entries:
	[5733908175048446366 ,  4913249781191789579]  =  0.4999580682103546
	[12621324006550133948, 12419957900638875901]  =  0.9198542672469263
	[17436498189161857304, 14517667374310463124]  =  0.6135685010510961
	[8507737825562801990 , 14995138918287078531]  =  0.8131082743566114
	[310341593395597147  ,  7199089960335318010]  =  0.4494768403632745
	[2644894592338031174 , 16246598853062742192]  =  0.639402066581495
	[6133723350622533458 ,  6065204439534692180]  =  0.31113348475290303
	[16836080019131185762, 16112569381171233070]  =  0.703819199550678
	                                              ⋮
	[10626898038408744182, 17401827539426951865]  =  0.7627964950417814
	[10596751188013898940,  2792481481398066916]  =  0.5610655376277183
	[7286441479725315933 , 17853331136360781895]  =  0.4023664185625526
	[1842419535934980543 ,  5983786778458205040]  =  0.03284444115697349
	[10659699155492159423,  5597731276780160114]  =  0.4344134523531715
	[5188033427577448982 , 16069635275006911712]  =  0.4755363769063703
	[16243515418520287792, 11470862121108514714]  =  0.06984170221349362
	[7135933997555694158 ,  2758171916068192631]  =  0.43753158400063885
	[2876475700534992100 , 14599810768241287016]  =  0.07466550567517083Timing named index: 0.000258088, array index: 0.000420093, named key: 0.078434458
Timing sum large sparse array: 0.007802496, named: 0.023568201
done!
INFO: NamedArrays tests passed

>>> End of log
