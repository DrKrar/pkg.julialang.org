>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (846.32421875 MB free)
Uptime: 5739.0 sec
Load Avg:  0.84619140625  0.904296875  0.9697265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     303988 s         66 s      37631 s     158615 s          8 s
#2  3499 MHz      81826 s         85 s      17233 s     464176 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.381716   0.298067   0.022568
b           │  0.337749   0.271081  0.0332041 0.3817155404878412 0.3817155404878412
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.381716   0.298067   0.022568
b     │  0.337749   0.271081  0.0332041
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.381716   0.298067   0.022568
b           │  0.337749   0.271081  0.0332041
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.381716   0.298067   0.022568
b     │  0.337749   0.271081  0.0332041
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.920047    0.318473    0.185618    0.783018
two   │ 0.00282375    0.280155    0.227704    0.839263
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.355435   0.029832
1           │ 0.0232551   0.753727

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.222506  0.953396
1           │ 0.145325  0.830015
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.068262
2 │ 0.921451
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.643613   0.44835
2     │ 0.115625  0.110823
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.45874  0.124516
2     │ 0.475056  0.748396

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.192796  0.781686
2     │ 0.945994  0.168469
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.52129  0.978877
2     │  0.53173   0.91749

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.581717  0.239027
2     │ 0.241476  0.416957

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0318436   0.976562
2     │ 0.0491035   0.316861

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │    0.8237    0.55965
2     │ 0.0690324    0.72771
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.956367  0.0415027
2     │  0.472595   0.622938

[:, :, C=2, D=1, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.491344  0.00139867
2     │   0.482685    0.281356

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.12691  0.667425
2     │  0.43375  0.930732

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.361897  0.371392
2     │ 0.165499  0.586419

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.140115  0.795556
2     │ 0.608006  0.550379

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.696684  0.187891
2     │ 0.741877  0.899185

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0236116   0.575556
2     │   0.30067   0.181713

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.254651  0.678287
2     │ 0.562316  0.151471
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.869425  0.0477826

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.157067  0.273624
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.474702
2     │ 0.174598

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0975149
2     │  0.612598
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.403981  0.230167
2     │ 0.130251  0.778404
done!
Timing named index: 0.001981222, array index: 0.000650983, named key: 0.122030176
Timing sum large sparse array: 0.007923627, named: 0.021819451
INFO: NamedArrays tests passed

>>> End of log
