>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (844.34765625 MB free)
Uptime: 6758.0 sec
Load Avg:  0.98046875  0.9931640625  1.03857421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     380268 s       3015 s      37936 s     179503 s         17 s
#2  3500 MHz      90817 s       3859 s      16998 s     549157 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.4336443051526304	0.2884044284554641	0.2759339211565248	0.7106143101131173
two	0.35185334613689534	0.6587976882814444	0.4288236947092643	0.4658225342776121
a	87
b	5
c	98
d	88
e	1
f	85
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.912484   0.668252  0.0726278
b           │ 0.0903603   0.295898   0.769465 0.912484308590195 0.912484308590195
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.912484   0.668252  0.0726278
b     │ 0.0903603   0.295898   0.769465
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.912484   0.668252  0.0726278
b           │ 0.0903603   0.295898   0.769465
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.912484   0.668252  0.0726278
b     │ 0.0903603   0.295898   0.769465
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.921271  0.0529839   0.380876   0.362029
二              │  0.528933   0.983501   0.447753   0.169171
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139953863828688
0-element Named Array{Any,1}

[0.939127 0.900387 0.347776 0.455019; 0.671876 0.000478521 0.136428 0.247477]
2×4 Named Array{Float64,2}
A ╲ B │           a            b            c            d
──────┼───────────────────────────────────────────────────
one   │    0.939127     0.900387     0.347776     0.455019
two   │    0.671876  0.000478521     0.136428     0.2474772×4 Named Array{Float64,2}
A ╲ B │           a            b            c            d
──────┼───────────────────────────────────────────────────
one   │    0.939127     0.900387     0.347776     0.455019
two   │    0.671876  0.000478521     0.136428     0.2474772×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     1.32097      0.80995  …    0.0892318    0.0364559
2     │     1.87236     0.893665  …     0.510284     0.3095161000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.701478     0.145285
2     │   -0.062131    -0.439994
3     │   -0.369354     0.682078
4     │   -0.876032     0.897053
5     │    0.679632    -0.224344
6     │    -0.37325     -0.83332
7     │    -1.64403     0.618722
8     │   -0.223071     0.914652
9     │     1.90463    -0.577882
⋮                 ⋮            ⋮
992   │ -0.00376824    -0.252683
993   │     1.51461      1.71572
994   │   -0.188144     0.192173
995   │    0.375321    -0.756906
996   │    0.559464    -0.260281
997   │   -0.534874     -1.03422
998   │   -0.715186     0.493543
999   │     1.45598     0.612114
1000  │   -0.404308      1.481941000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.115075
2    │  -0.375794
3    │  -0.561738
4    │   0.734983
5    │   0.247397
6    │  -0.876233
7    │  -0.463592
8    │   -0.34591
9    │   0.325867
⋮               ⋮
992  │   0.130306
993  │   -1.36276
994  │ -0.0490771
995  │  -0.910407
996  │   -1.55644
997  │    1.78527
998  │  -0.185711
999  │ -0.0032091
1000 │   -2.028262×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.248889  0.276798
1           │ 0.802724  0.189645

[:, :, indexing=1] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │ 0.00407699    0.408492
1           │   0.592043    0.177982
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.837782
2  │ 0.799794
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.232248  0.190762
2     │ 0.805574  0.443918
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.8244  0.961922
2     │  0.24243  0.869442

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.946481  0.0151186
2     │  0.444098  0.0456419
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0221745   0.304194
2     │ 0.0955763   0.946925

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.103878  0.361245
2     │ 0.497014   0.18584

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.654089  0.385241
2     │ 0.178157  0.625661

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.293559  0.119475
2     │ 0.260345  0.153013
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.606123  0.731147
2     │ 0.779647  0.288161

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.221487  0.336098
2     │ 0.938691  0.120394

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.44844   0.864705
2     │ 0.0389746   0.145408
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.453488   0.19732

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.875329  0.897884
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.705269
2     │ 0.333585

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.610034
2     │ 0.844306
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.470136  0.680647
2     │ 0.921118  0.719623
1000×1000 Named sparse matrix with 99 Float64 nonzero entries:
	[2836200141957565154 ,  5927176887743683346]  =  0.3595193057544537
	[8058121953372963805 ,  9283096199793891681]  =  0.7857460406699659
	[195441584546642058  ,  4981387750669837953]  =  0.13288960082851542
	[11902824463030858325,  4329451781928897369]  =  0.9778665451535453
	[11024660093340930346,  4976045735032000325]  =  0.41993735095540496
	[8171630255572214773 , 10596751188013898940]  =  0.06255094181318066
	[6738482027934271349 , 12989059827452924244]  =  0.21176627472644993
	[16069635275006911712, 18012118909807029393]  =  0.2859637895351672
	                                              ⋮
	[8848098725795227459 , 10924666096879366607]  =  0.32893213968208945
	[3468941480894322836 , 14774945750507892610]  =  0.12260765154048947
	[9210596506099025992 ,  4788923618671962983]  =  0.20745374166512587
	[584064394420725980  ,  9526342322394325946]  =  0.9717409653236182
	[7199089960335318010 , 11711005111088208244]  =  0.8953499977655064
	[5362270516586366302 , 16840404209865735426]  =  0.402869929452643
	[13317946559797870580,  3010300210541878305]  =  0.2932580170432171
	[7401388003796389189 ,   427459847123490633]  =  0.6498139404962759
	[6345398762637942383 ,   427459847123490633]  =  0.5403572728310977Timing named index: 0.001601491, array index: 0.001082758, named key: 0.117056109
Timing sum large sparse array: 0.014431445, named: 0.190399373
done!
INFO: NamedArrays tests passed

>>> End of log
