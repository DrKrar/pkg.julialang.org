>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (855.078125 MB free)
Uptime: 6879.0 sec
Load Avg:  1.01513671875  0.97509765625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     371565 s       2506 s      42736 s     197482 s         17 s
#2  3500 MHz     131848 s       4299 s      19876 s     513522 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.13275555299572517	0.9988154335455448	0.0610783876298322	0.6225961961475508
two	0.25609489996066315	0.7812408098979013	0.4477681904561548	0.9649543696508178
a	80
b	83
c	79
d	51
e	75
f	84
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.64982  0.669438  0.408066
b           │ 0.129082  0.257621  0.477181 0.6498204746628851 0.6498204746628851
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.64982  0.669438  0.408066
b     │ 0.129082  0.257621  0.477181
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.64982  0.669438  0.408066
b           │ 0.129082  0.257621  0.477181
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.64982  0.669438  0.408066
b     │ 0.129082  0.257621  0.477181
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.425142  0.505566  0.736554  0.844792
二              │ 0.552114  0.615035   0.75238    0.5576
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.48455 0.642428 0.682321 0.924712; 0.657003 0.831106 0.0800959 0.111199]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.48455   0.642428   0.682321   0.924712
two   │  0.657003   0.831106  0.0800959   0.1111992×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.48455   0.642428   0.682321   0.924712
two   │  0.657003   0.831106  0.0800959   0.1111992×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.216648     0.177557  …     0.282935     0.852504
2     │   -0.715082    -0.635629  …     0.461749      -1.48141000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.63803  -0.229867
2     │ 0.0576705    1.30579
3     │  -1.83422    1.14937
4     │  0.919398   0.502371
5     │ -0.188157  -0.798068
6     │  0.602221    0.48294
7     │ -0.492144    1.27335
8     │  -1.22617    1.38668
9     │  0.732532    1.52593
⋮               ⋮          ⋮
992   │  -1.05493   -1.11124
993   │ -0.564772  -0.231807
994   │  0.640669    1.92028
995   │  0.918219    0.20311
996   │   1.54271  -0.519364
997   │  0.444389  -0.418498
998   │  0.198196  -0.679302
999   │  -1.08538    2.80728
1000  │   1.06332  -0.1780771000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.987596
2    │  0.613959
3    │   1.23449
4    │ -0.226516
5    │  -1.80408
6    │  -0.09786
7    │  0.606323
8    │   1.51848
9    │  0.587939
⋮              ⋮
992  │  -1.08107
993  │  0.686265
994  │  -1.62554
995  │ -0.265642
996  │  0.414683
997  │ -0.414699
998  │ 0.0656941
999  │ -0.718114
1000 │  0.3185022×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.369395  0.360238
1           │ 0.716155  0.129997

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.980287  0.0609538
1           │  0.898444   0.459714
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.907036
2  │ 0.169849
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.258046  0.632895
2     │  0.60528  0.203726
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0235619   0.526643
2     │  0.963691   0.596939

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.966486  0.168485
2     │ 0.110836  0.603864
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.10916  0.449814
2     │ 0.377864  0.322429

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.341229  0.0249659
2     │  0.737269   0.260778

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.408787  0.947085
2     │ 0.110588  0.657517

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.461138  0.0170472
2     │  0.108532   0.226373
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.363661  0.0301424
2     │  0.512261   0.711891

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.456336  0.162547
2     │ 0.647384  0.472361

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.236768  0.154558
2     │ 0.578592  0.467823
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.192803  0.313673

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.145328  0.354973
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.234738
2     │ 0.246633

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.847141
2     │ 0.914247
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.982354  0.645817
2     │ 0.278892  0.250636
1000×1000 Named sparse matrix with 98 Float64 nonzero entries:
	[4782469333680129318 ,   397394769374478572]  =  0.7662782823150505
	[1082045492561856594 ,  8699333159457747740]  =  0.6135619798025735
	[13998600730537104788,  4913249781191789579]  =  0.8110252324765772
	[532635700462514874  , 17095493447719212504]  =  0.9844397734934671
	[2713027948549010671 , 14033074738777421392]  =  0.5199018345563553
	[16243515418520287792, 10106592262940987645]  =  0.5274001798250283
	[6381716284466338912 , 10601912832305821454]  =  0.2634587895517144
	[2072770496586688023 ,  5062864901616737721]  =  0.8729641478062191
	                                              ⋮
	[10186301591602193943, 15717097331822026300]  =  0.7173155909062625
	[8809575672816075910 ,  7608520278977511969]  =  0.4841608462952549
	[6332455606016291123 ,  4788923618671962983]  =  0.9015437865930389
	[12072215667938940660,  1526691723863411160]  =  0.3504740929105499
	[8340722336334766600 , 10370911177498520402]  =  0.2671454213094546
	[6134978669850253296 , 10655964431342481635]  =  0.14443016246399454
	[8161571390594682873 , 16365943061271568709]  =  0.6201313459615985
	[11074546888629967684,  6565262192402102057]  =  0.7807444483335138
	[2537122889535958280 ,  6565262192402102057]  =  0.35380080157751403Timing named index: 0.000956123, array index: 0.000427609, named key: 0.070679168
Timing sum large sparse array: 0.022353356, named: 0.029938967
done!
INFO: NamedArrays tests passed

>>> End of log
