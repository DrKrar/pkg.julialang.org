>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (847.921875 MB free)
Uptime: 6371.0 sec
Load Avg:  0.94091796875  0.935546875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     370562 s       1173 s      39869 s     148702 s         24 s
#2  3500 MHz      83321 s       5477 s      17431 s     515255 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.3807264022751875	0.48373140776006074	0.05004287834803778	0.6020430122310143
two	0.4371770878863186	0.9089419968850241	0.20442794276172194	0.2775870689610036
a	57
b	45
c	35
d	100
e	66
f	85
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.706415  0.217313  0.633264
b           │ 0.757212  0.937424  0.215208 0.7064153293435242 0.7064153293435242
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.706415  0.217313  0.633264
b     │ 0.757212  0.937424  0.215208
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.706415  0.217313  0.633264
b           │ 0.757212  0.937424  0.215208
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.706415  0.217313  0.633264
b     │ 0.757212  0.937424  0.215208
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.199379  0.663166   0.70825  0.287396
二              │ 0.295432  0.685297  0.279011  0.493625
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.599167 0.778723 0.877121 0.0132361; 0.717513 0.107374 0.571843 0.470041]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.599167   0.778723   0.877121  0.0132361
two   │  0.717513   0.107374   0.571843   0.4700412×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.599167   0.778723   0.877121  0.0132361
two   │  0.717513   0.107374   0.571843   0.4700412×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.498999      0.650309  …      0.545039      -2.45692
2     │     0.175232       1.22541  …     -0.336065      -1.750031000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    0.63659     1.32635
2     │   -2.67639     0.79757
3     │   0.451618    -1.73564
4     │   -1.03475     -1.8183
5     │   -0.69492    -1.01457
6     │  -0.216729    0.778157
7     │   -1.23751  -0.0111253
8     │   0.620563    0.368447
9     │  -0.217533    -1.25074
⋮                ⋮           ⋮
992   │   0.620553     0.86497
993   │  -0.422106   -0.218284
994   │   0.763114   -0.603779
995   │  -0.924064    0.348811
996   │   -1.69049     2.57972
997   │  -0.214499    0.667468
998   │  -0.150642    0.176322
999   │ -0.0620745     0.51849
1000  │    2.31248   -0.8708781000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │     1.7001
2    │  -0.426287
3    │   -2.11512
4    │  -0.767371
5    │  -0.482791
6    │  -0.667088
7    │   -0.94192
8    │  -0.049649
9    │  0.0694712
⋮               ⋮
992  │    0.31444
993  │    1.05826
994  │  -0.355008
995  │    2.05569
996  │    2.07818
997  │ -0.0414154
998  │   0.322155
999  │   -2.91345
1000 │  -0.2890082×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.244848  0.165386
1           │ 0.441501  0.942891

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.945299  0.0778732
1           │ 0.0558651   0.621976
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.839939
2  │ 0.772355
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.306007  0.180752
2     │ 0.813575  0.271545
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0499551   0.592526
2     │  0.570126  0.0439803

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.139347    0.67471
2     │  0.874928  0.0358908
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.903236  0.532167
2     │ 0.132787  0.781493

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.935767    0.83876
2     │  0.553471  0.0963205

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.227719  0.177909
2     │ 0.700603  0.192588

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.630045  0.959941
2     │ 0.789413  0.953206
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.71217  0.464919
2     │ 0.632261  0.903934

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.980161  0.0980029
2     │  0.834926   0.382474

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.718549  0.342821
2     │ 0.214641  0.886472
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.83139  0.248276

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.685666  0.233384
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.940257
2     │ 0.285327

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0122914
2     │  0.457364
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.372078   0.753294
2     │ 0.0900838   0.298595
1000×1000 Named sparse matrix with 90 Float64 nonzero entries:
	[15791483600865970897,   144428425607543167]  =  0.45409581246829056
	[10109836606734241243, 13789993170142104254]  =  0.5227945913781882
	[11727192159770649882, 17211410618634043162]  =  0.18702365331627346
	[12664953981709537240,  5723128691850249417]  =  0.4940625026372245
	[906960604709401733  ,  6065204439534692180]  =  0.845102284414478
	[9284771721002998782 ,  6065204439534692180]  =  0.9060893487135411
	[13342932250377702532, 15493082059768908559]  =  0.7255466030502504
	[2773759897603617072 ,   281356413667926651]  =  0.22953971531306916
	                                              ⋮
	[5775042309115395854 , 15857670694969494589]  =  0.5184532245133511
	[10685333727101695973, 17718833055079784125]  =  0.05328251422673613
	[15559590888388931697,   372001016642560619]  =  0.18696916271079012
	[9366363589601885315 , 16836080019131185762]  =  0.1261018007517123
	[4100222305550378373 ,  8779884342238752210]  =  0.05361348567034141
	[16427568314583164731, 11527542315164007414]  =  0.6932607971459293
	[17742935406460696265, 12020782256748308824]  =  0.06112732980307323
	[2791304443232646030 ,  3010300210541878305]  =  0.18971436453664658
	[3043368577052145501 ,  6565262192402102057]  =  0.9254639677494707Timing named index: 0.001514154, array index: 0.000980931, named key: 0.131200062
Timing sum large sparse array: 0.013040217, named: 0.036041458
done!
INFO: NamedArrays tests passed

>>> End of log
