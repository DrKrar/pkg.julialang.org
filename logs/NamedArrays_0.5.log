>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (841.25390625 MB free)
Uptime: 5836.0 sec
Load Avg:  0.94970703125  0.990234375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3510 MHz     329012 s       6363 s      37602 s     149598 s         10 s
#2  3510 MHz      90097 s         46 s      16617 s     463664 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.07060974317669455	0.09314177659137646	0.2276347124343563	0.8699051893011425
two	0.7436698290607702	0.058464949680505196	0.12891205399029748	0.6803012570762312
a	48
b	82
c	34
d	17
e	13
f	47
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.89203  0.576364  0.228491
b           │   0.3224  0.701718  0.890092 0.892029542181962 0.892029542181962
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.89203  0.576364  0.228491
b     │   0.3224  0.701718  0.890092
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.89203  0.576364  0.228491
b           │   0.3224  0.701718  0.890092
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.89203  0.576364  0.228491
b     │   0.3224  0.701718  0.890092
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │  0.10144  0.923134  0.304296  0.288859
二              │ 0.597598  0.628014  0.311335  0.324279
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.910787 0.0548412 0.899112 0.855337; 0.491794 0.789208 0.707863 0.522563]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.910787  0.0548412   0.899112   0.855337
two   │  0.491794   0.789208   0.707863   0.5225632×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.910787  0.0548412   0.899112   0.855337
two   │  0.491794   0.789208   0.707863   0.5225632×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.909247   -0.0852014  …    0.0948085     0.484764
2     │   -0.387938     0.155603  …     0.611759       1.53291000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.701791  -0.653226
2     │   1.32843  -0.877019
3     │ -0.297515   -1.81136
4     │   -1.1987   -0.17818
5     │   1.48125   -0.46916
6     │  -0.55806  -0.279452
7     │   1.77958   -1.15138
8     │ -0.865706  -0.595695
9     │  0.351774   0.903075
⋮               ⋮          ⋮
992   │  0.956249    1.63174
993   │  -1.72788  -0.180026
994   │  0.179503   -1.24635
995   │  0.147951  -0.390329
996   │  0.718853    1.16205
997   │  0.602097  -0.880791
998   │ -0.804069  -0.524464
999   │ -0.159342  -0.268079
1000  │   2.34373   -2.062741000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.106775
2    │   0.44244
3    │  0.864932
4    │  -1.50143
5    │  0.208999
6    │  0.591112
7    │   0.50669
8    │ -0.330209
9    │  -1.31484
⋮              ⋮
992  │   1.16441
993  │  0.847566
994  │ -0.650438
995  │ -0.987975
996  │ -0.399627
997  │ -0.733156
998  │  -2.10011
999  │  0.411663
1000 │  0.7426162×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.550079  0.702038
1           │ 0.854726  0.521114

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.933789  0.229082
1           │  0.73474  0.476906
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.957163
2  │ 0.0727232
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.885558  0.900152
2     │ 0.562913  0.699366
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.646976  0.801696
2     │ 0.729838  0.767457

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.758018   0.895395
2     │ 0.0770451   0.545034
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.543187  0.0636688
2     │  0.876974   0.289684

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.924167  0.0840639
2     │  0.200741   0.485193

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.591966   0.114194
2     │ 0.0485095   0.456378

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.461815   0.456217
2     │  0.541606  0.0529361
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.859217    0.80243
2     │  0.757313  0.0858745

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.868019   0.630069
2     │ 0.0394351   0.336934

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.918325   0.845149
2     │  0.805129  0.0508813
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0647503   0.653648

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.876202  0.0771776
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.92847
2     │ 0.309307

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.447643
2     │ 0.145179
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.699863  0.298157
2     │ 0.733472  0.094416
1000×1000 Named sparse matrix with 95 Float64 nonzero entries:
	[12876006501778729182, 14033074738777421392]  =  0.7094369858259184
	[7369566324703660862 ,  1166092285267503990]  =  0.39379039392372284
	[1177457170591155921 ,  8720304024814141479]  =  0.6804736828994438
	[10610022376412481897,  7242692203416363180]  =  0.6149651599881698
	[17383975982595546373,  2001767177420584454]  =  0.7663613573222505
	[5744335047891463768 , 15987302811816728974]  =  0.34430997942583463
	[13096237947071787928, 10684064542878956755]  =  0.4757422545666532
	[14951403058635497631, 15444197186593984072]  =  0.9383307052691887
	                                              ⋮
	[1203336841330469213 , 14774945750507892610]  =  0.05363733580404295
	[841443329012084682  , 16655780295490676025]  =  0.8526871868597905
	[9582646421956613839 , 14027562189529080231]  =  0.8382465339879155
	[15422846019410515149,  7989582431359101293]  =  0.1828120417747856
	[11527542315164007414,  7989582431359101293]  =  0.6716764536084541
	[4227256904035335927 ,  9223427034658990711]  =  0.6540978495977061
	[14276971493366205365,  4047135350800189603]  =  0.8232131201525412
	[11314283927973801071,   427459847123490633]  =  0.5586036347888543
	[14138153537439249859,  9133170895916704973]  =  0.65960825781972Timing named index: 0.001606155, array index: 0.000659976, named key: 0.113998662
Timing sum large sparse array: 0.013137001, named: 0.01587763
done!
INFO: NamedArrays tests passed

>>> End of log
