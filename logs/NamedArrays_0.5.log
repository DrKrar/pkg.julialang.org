>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (765.84765625 MB free)
Uptime: 5742.0 sec
Load Avg:  0.99267578125  0.94873046875  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     329587 s       2968 s      42814 s     140862 s          8 s
#2  3501 MHz      84022 s       3705 s      18420 s     455878 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.40816251419093463	0.7575598855536132	0.8145291165547286	0.1544279287181327
two	0.17521548627130357	0.5554324928021575	0.482686594941542	0.748084244804661
a	7
b	65
c	74
d	86
e	81
f	20
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.547208  0.992081  0.676992
b           │ 0.663127  0.497043  0.321778 0.5472081071417703 0.5472081071417703
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.547208  0.992081  0.676992
b     │ 0.663127  0.497043  0.321778
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.547208  0.992081  0.676992
b           │ 0.663127  0.497043  0.321778
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.547208  0.992081  0.676992
b     │ 0.663127  0.497043  0.321778
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.755918  0.416387  0.974163  0.869822
二              │ 0.144249  0.968979   0.97478  0.736633
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140699848342344
0-element Named Array{Any,1}

[0.53828 0.439199 0.726034 0.304142; 0.0438065 0.314008 0.717652 0.442575]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.53828   0.439199   0.726034   0.304142
two   │ 0.0438065   0.314008   0.717652   0.4425752×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.53828   0.439199   0.726034   0.304142
two   │ 0.0438065   0.314008   0.717652   0.4425752×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.316526      1.02107  …     0.549605     -1.12703
2     │  -0.0167306   0.00457576  …    0.0968302     0.3535321000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.116033   0.739813
2     │  0.842669  -0.993787
3     │  0.298562  -0.288077
4     │  -1.60514    1.72186
5     │  -1.03331      2.146
6     │  -1.77868   -0.01052
7     │  -1.06014  -0.173153
8     │   1.01636   0.114348
9     │ -0.816462   -1.94945
⋮               ⋮          ⋮
992   │ -0.602383  -0.759236
993   │   1.49391   0.436864
994   │  0.307477   0.132191
995   │ -0.220523     1.5227
996   │  0.173701   0.149424
997   │ -0.373256   0.514513
998   │    0.4742  -0.608382
999   │   1.50049   0.332697
1000  │  0.368296   0.2711171000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   1.96627
2    │ -0.373109
3    │  -1.16896
4    │   1.77868
5    │  0.574234
6    │   0.62399
7    │   2.34589
8    │  0.576713
9    │   1.15772
⋮              ⋮
992  │  -2.39419
993  │  0.918904
994  │ -0.500272
995  │  0.048586
996  │ -0.749328
997  │  0.462631
998  │   2.48936
999  │ -0.474678
1000 │ 0.09579792×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.518309  0.188794
1           │ 0.437349  0.133174

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.831867  0.397304
1           │ 0.346013  0.860837
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │   0.48466
2  │ 0.0228148
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.860748   0.986044
2     │  0.566905  0.0490837
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.824732  0.168273
2     │ 0.543766   0.68153

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.716572  0.540252
2     │   0.6617   0.53811
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.778247  0.0379642
2     │  0.808429   0.113769

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.972287  0.915559
2     │ 0.353159  0.416156

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.898514   0.93343
2     │ 0.508086  0.930147

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.816907  0.754837
2     │  0.78073   0.19218
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.962142  0.847117
2     │ 0.330682  0.159263

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0653485   0.289494
2     │  0.958245   0.556763

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.407803  0.129485
2     │ 0.334163  0.425736
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.694396  0.697364

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.707376   0.13855
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0863028
2     │  0.949435

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.475223
2     │ 0.0824546
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.6613  0.486756
2     │ 0.864309  0.939732
1000×1000 Named sparse matrix with 98 Float64 nonzero entries:
	[8514800090035849787 ,  3929618674436644774]  =  0.07348938351942413
	[11660797228701312840, 12419957900638875901]  =  0.643884220110305
	[14117127041272093201, 14343632987770563929]  =  0.1155093874733848
	[10224435857605525989,  8058121953372963805]  =  0.1667639609592042
	[10504931430957650557, 16462243977607957471]  =  0.9969936569652165
	[3501065925215364276 , 14033074738777421392]  =  0.7170552260405625
	[17211410618634043162, 14066869468942639955]  =  0.2956071862622778
	[9666738521404155677 ,  4786699431706339713]  =  0.042296146957367275
	                                              ⋮
	[10086110697249909874,  5089169802387190808]  =  0.5866358614968119
	[1602213502834622003 , 15078133678202242611]  =  0.14669914494985048
	[4174785917342603289 , 13710539999002292266]  =  0.44511166170987804
	[1811302532022619362 , 14340416566338039723]  =  0.18181713275252775
	[8265524791738013937 , 17853331136360781895]  =  0.8499957450405213
	[11394354523540829904, 11641483179283066996]  =  0.2621394636946197
	[18381296046359118750, 15240003619098155971]  =  0.9688811796693715
	[14835807873575694564,  3733926995351842633]  =  0.6128784474478319
	[2849690884155085581 , 14599810768241287016]  =  0.5683347664530833Timing named index: 0.001021232, array index: 0.000609837, named key: 0.112473273
Timing sum large sparse array: 0.008251114, named: 0.015013241
done!
INFO: NamedArrays tests passed

>>> End of log
