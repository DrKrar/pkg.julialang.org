>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (856.5078125 MB free)
Uptime: 6041.0 sec
Load Avg:  0.875  0.9228515625  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     325515 s       5418 s      47428 s     164590 s          6 s
#2  3499 MHz      90400 s       1263 s      22390 s     476678 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.02374496634915202	0.26101025247996956	0.7629973635524956	0.802001644689402
two	0.38658862827239293	0.841908075982382	0.8361322486103235	0.7589287171309522
a	17
b	62
c	32
d	44
e	69
f	41
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.497631  0.703349  0.454063
b           │  0.69034  0.452848  0.298218 0.49763071365304157 0.49763071365304157
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.497631  0.703349  0.454063
b     │  0.69034  0.452848  0.298218
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.497631  0.703349  0.454063
b           │  0.69034  0.452848  0.298218
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.497631  0.703349  0.454063
b     │  0.69034  0.452848  0.298218
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │         一          二          三          四
────────────────┼───────────────────────────────────────────
一              │   0.311879  0.00589911    0.703356    0.481368
二              │   0.674777    0.186464    0.314581    0.957874
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.567361 0.887498 0.579663 0.127832; 0.47028 0.74588 0.471937 0.767691]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.567361  0.887498  0.579663  0.127832
two   │  0.47028   0.74588  0.471937  0.7676912×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.567361  0.887498  0.579663  0.127832
two   │  0.47028   0.74588  0.471937  0.7676912×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      1.22581       0.95686  …       1.41321      -1.19975
2     │    -0.309263       1.31881  …     -0.335155      -0.293261000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.18999     2.12637
2     │  -0.389524  -0.0503514
3     │    1.08616   -0.139596
4     │   -0.67156    -0.48328
5     │  -0.543122   -0.371361
6     │  -0.923576    0.363661
7     │    -2.3912   -0.303094
8     │  -0.845573     0.24715
9     │   -2.59546     0.52175
⋮                ⋮           ⋮
992   │   0.319929    -2.49345
993   │   -1.56675    -1.18584
994   │  -0.621289     -0.4016
995   │   -0.32156     1.50009
996   │ -0.0614073   -0.113011
997   │  0.0538773    -0.85639
998   │   0.114644   -0.297894
999   │   -1.82438   -0.471461
1000  │  -0.316133    0.5862661000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.922001
2    │  -2.47137
3    │  0.503769
4    │  0.418112
5    │    1.0665
6    │   1.63259
7    │ -0.116781
8    │ -0.678875
9    │  0.522526
⋮              ⋮
992  │  -1.02813
993  │  0.945635
994  │   1.14216
995  │ -0.332779
996  │  -2.23364
997  │  0.449122
998  │  0.531868
999  │  0.277736
1000 │ -0.6611812×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.635991  0.647735
1           │ 0.149153  0.334683

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.912112  0.214075
1           │ 0.667508  0.296974
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.733401
2  │ 0.0444256
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.339344  0.034003
2     │ 0.873424  0.588961
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.245938   0.88682
2     │   0.5983  0.358412

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.169705  0.00735929
2     │   0.528596    0.956274
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.552304  0.317493
2     │ 0.752386  0.727217

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.328996  0.608678
2     │ 0.175319  0.819774

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.873848  0.360389
2     │  0.25323  0.204923

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.432533  0.350208
2     │ 0.215526  0.252313
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.855745  0.371195
2     │ 0.294047  0.846012

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.893565  0.155763
2     │ 0.613594   0.95516

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.584516  0.586883
2     │  0.16498  0.919541
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.811693  0.623952

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.446459  0.506527
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.184813
2     │ 0.138585

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0972386
2     │  0.816288
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.979656  0.427983
2     │ 0.236618  0.450202
1000×1000 Named sparse matrix with 111 Float64 nonzero entries:
	[18238638934550427920,  3929618674436644774]  =  0.09578738843660806
	[9474715557068018910 ,  5004131969199419793]  =  0.01647023141577164
	[4682100877033407764 , 14517667374310463124]  =  0.3873597001107594
	[16221828541365357577, 18443816037252674910]  =  0.8759520406784389
	[2695040152261095162 , 16246598853062742192]  =  0.04541305506603721
	[18320751966872690453,  3566943156706603705]  =  0.9312102803477689
	[9991688889456918816 ,  3501065925215364276]  =  0.7579848327645666
	[5607123224040969390 ,   584064394420725980]  =  0.3823829008566215
	                                              ⋮
	[13882698648709482562, 10663619072362037589]  =  0.05417445084077466
	[11565746237708632912,  7989582431359101293]  =  0.5266692073114483
	[1085996354551843550 ,  8779884342238752210]  =  0.5758652725838422
	[15884119711317434855,  1523061068178304284]  =  0.17387861880499744
	[7242692203416363180 , 13970367575607681105]  =  0.12042845912554068
	[12405273559266350440,  1861743268047760089]  =  0.6112403822987811
	[1987182164192973075 , 11527542315164007414]  =  0.9434164926678785
	[4047135350800189603 , 12020782256748308824]  =  0.4509184901846657
	[6046649976662626325 ,  3010300210541878305]  =  0.41598684725087254Timing named index: 0.001443985, array index: 0.000554046, named key: 0.132000697
Timing sum large sparse array: 0.014357758, named: 0.037112921
done!
INFO: NamedArrays tests passed

>>> End of log
