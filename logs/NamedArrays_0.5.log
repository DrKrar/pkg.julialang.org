>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (851.265625 MB free)
Uptime: 7227.0 sec
Load Avg:  0.96728515625  0.9755859375  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     402505 s         60 s      44765 s     194779 s         14 s
#2  3499 MHz      94574 s         93 s      19644 s     594415 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.8424740001130762	0.6343663908023103	0.5040524453035404	0.5912705266478147
two	0.8926082873251278	0.361082169800387	0.6192033768465433	0.6486916378936025
a	69
b	47
c	64
d	43
e	35
f	44
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.130658  0.949917  0.185415
b           │ 0.712955  0.605731  0.031426 0.13065788674135592 0.13065788674135592
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.130658  0.949917  0.185415
b     │ 0.712955  0.605731  0.031426
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.130658  0.949917  0.185415
b           │ 0.712955  0.605731  0.031426
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.130658  0.949917  0.185415
b     │ 0.712955  0.605731  0.031426
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.729691   0.748106   0.176435   0.905263
二              │ 0.0499595   0.845959   0.293211     0.1914
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140152917528096
0-element Named Array{Any,1}

[0.55446 0.10272 0.911866 0.838133; 0.208813 0.932418 0.317852 0.0575117]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.55446    0.10272   0.911866   0.838133
two   │  0.208813   0.932418   0.317852  0.05751172×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.55446    0.10272   0.911866   0.838133
two   │  0.208813   0.932418   0.317852  0.05751172×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │       1.4485      -1.24437  …      0.200129      -1.11162
2     │     0.704576     0.0365777  …     -0.943618       1.210651000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │   -0.215573     -1.06295
2     │    -1.49272    -0.853915
3     │   -0.109453     -1.27462
4     │   -0.684476      1.04586
5     │    0.301326      1.29431
6     │    0.223458   -0.0813223
7     │     1.19288     -1.56072
8     │   -0.357607     0.986502
9     │    -1.12964     -0.36047
⋮                 ⋮            ⋮
992   │    0.994075    -0.132286
993   │    0.267379    -0.220225
994   │   -0.485201    -0.353596
995   │   -0.304818       1.1251
996   │     2.21304  0.000464639
997   │   -0.827411     0.986185
998   │    0.527996    -0.231254
999   │   -0.547344     -1.31076
1000  │    0.507569     0.5220581000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.139122
2    │  -1.43196
3    │  -1.39427
4    │  0.719322
5    │ -0.420311
6    │ -0.807153
7    │  -0.11792
8    │ 0.0337135
9    │  0.806887
⋮              ⋮
992  │  -0.41301
993  │   1.91848
994  │   -0.2319
995  │  0.514447
996  │ -0.428068
997  │   0.72534
998  │  -1.33565
999  │ -0.283786
1000 │ -0.4863262×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.367179  0.522006
1           │ 0.888594  0.183288

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0611581   0.196966
1           │  0.403969   0.469024
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.800081
2  │ 0.169688
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.773269  0.805571
2     │ 0.337794  0.558621
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.8274  0.067134
2     │ 0.846221  0.175612

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.336116  0.291759
2     │ 0.662254  0.567399
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.3986  0.755869
2     │ 0.437033  0.272191

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.334001  0.863674
2     │  0.11302  0.274367

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.986812  0.683029
2     │ 0.512832  0.115733

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.144189  0.0521199
2     │  0.899682   0.851667
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.66886   0.931129
2     │  0.372809  0.0555371

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.342789  0.563664
2     │  0.82781  0.373122

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.448841  0.369461
2     │ 0.694777  0.947372
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.963802  0.810871

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.812577  0.608311
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0200862
2     │  0.791238

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.496728
2     │ 0.870065
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.670044  0.607148
2     │ 0.917767  0.768516
1000×1000 Named sparse matrix with 104 Float64 nonzero entries:
	[8644598584148197739 , 14343632987770563929]  =  0.8658274417769081
	[11707210785935603289,  6806539949965918083]  =  0.6882398845078315
	[4398365516710837200 ,  2849690884155085581]  =  0.3483696906074365
	[13268306687392746585, 18443816037252674910]  =  0.30145877154114964
	[8093556638929719178 , 18443816037252674910]  =  0.35207957264467904
	[281356413667926651  , 14995138918287078531]  =  0.641564271201869
	[1085996354551843550 , 12295598998729798629]  =  0.6869909443525504
	[17813916387369881   ,  5723128691850249417]  =  0.08434345723323333
	                                              ⋮
	[15408733635197285348, 16267926292325351807]  =  0.6813656525752265
	[14343632987770563929,  2344064818992981444]  =  0.2636826563123862
	[5515248425081783923 , 11641483179283066996]  =  0.8821315379718646
	[13706965959382047777,  4182991028086505933]  =  0.9142860454773414
	[8219611685618320698 , 11993454575275700781]  =  0.3243043645211523
	[7242692203416363180 , 10370911177498520402]  =  0.19909797110346172
	[13440552775821083551, 16202651256804923129]  =  0.7247105790741659
	[12532053171191892965,   427459847123490633]  =  0.08993651600727803
	[5093524509719114539 ,  7519919299137062942]  =  0.514488637130986Timing named index: 0.001502698, array index: 0.000990868, named key: 0.113180565
Timing sum large sparse array: 0.02487294, named: 0.027382595
done!
INFO: NamedArrays tests passed

>>> End of log
