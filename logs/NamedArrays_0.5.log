>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (856.08203125 MB free)
Uptime: 5674.0 sec
Load Avg:  1.07568359375  0.99267578125  1.041015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     324495 s         54 s      35878 s     143448 s          8 s
#2  3499 MHz      78910 s         93 s      13905 s     464047 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.821419044424252	0.7496156637037086	0.5594067218332761	0.6209869888450421
two	0.5958044975508943	0.5211284145790154	0.008291555286913832	0.5028812441883503
a	93
b	57
c	65
d	58
e	89
f	59
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0248334   0.834852   0.109121
b           │   0.39906   0.213819  0.0713873 0.0248333579961173 0.0248333579961173
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0248334   0.834852   0.109121
b     │   0.39906   0.213819  0.0713873
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0248334   0.834852   0.109121
b           │   0.39906   0.213819  0.0713873
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0248334   0.834852   0.109121
b     │   0.39906   0.213819  0.0713873
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │  0.53029  0.274544  0.147479  0.858633
二              │  0.40503  0.678313  0.316878  0.130225
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.298277 0.817091 0.47296 0.271641; 0.00423165 0.399698 0.543231 0.722195]
2×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.298277    0.817091     0.47296    0.271641
two   │ 0.00423165    0.399698    0.543231    0.7221952×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.298277    0.817091     0.47296    0.271641
two   │ 0.00423165    0.399698    0.543231    0.7221952×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.299762      1.01685  …    -0.738093     0.267615
2     │     1.21446   -0.0263657  …     -1.92825     0.6635091000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │   0.0631736     0.485945
2     │   -0.797956     -1.42161
3     │    -1.26533      0.19934
4     │    0.835374    -0.859456
5     │    -1.53724     0.358501
6     │    -1.17914     0.192707
7     │     1.20202    -0.882748
8     │   -0.841835    -0.777998
9     │   -0.191897   -0.0403604
⋮                 ⋮            ⋮
992   │    0.917315     0.645154
993   │    -1.19512     0.728367
994   │    -1.15225    0.0949355
995   │   -0.323823    -0.100898
996   │ -0.00226552       1.8149
997   │    0.142661    -0.976389
998   │    -1.92135      1.56803
999   │    0.255009     0.249372
1000  │     -0.3544     -1.298331000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    1.00118
2    │    1.40712
3    │   -1.86864
4    │ -0.0400081
5    │   0.688541
6    │     1.0378
7    │  -0.422674
8    │  0.0387994
9    │   0.783126
⋮               ⋮
992  │  -0.828226
993  │   0.604884
994  │   0.941925
995  │   0.118166
996  │  -0.246738
997  │   0.146216
998  │    1.62235
999  │  -0.594175
1000 │    1.828892×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.905554  0.564855
1           │ 0.829409  0.582901

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.957842  0.307611
1           │ 0.722705  0.193861
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.171022
2  │ 0.0881512
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.430595  0.0121239
2     │  0.527086   0.657049
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.378103  0.793407
2     │ 0.680096  0.455658

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.174223   0.314344
2     │ 0.0358645    0.72843
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.937004    0.446312
2     │   0.970739  0.00815235

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.931769  0.831797
2     │  0.75657  0.343938

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.514391  0.0696264
2     │  0.369313   0.243686

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.753523  0.723714
2     │ 0.461346   0.82284
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.629042  0.736162
2     │ 0.446715  0.739094

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.871004  0.751225
2     │ 0.664249  0.628706

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0366121     0.3808
2     │  0.790088    0.42874
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.667688  0.650237

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.724134  0.578486
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1
──────┼───────────
1     │ 0.00844568
2     │   0.399601

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.570376
2     │ 0.396261
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.56967  0.475308
2     │ 0.349598  0.616239
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[14138153537439249859,  3929618674436644774]  =  0.23699136432518464
	[4174785917342603289 ,  4913249781191789579]  =  0.6533858011501879
	[2267379803219259174 ,  5312631360709731698]  =  0.6607092237567058
	[17795748529514954214, 17095493447719212504]  =  0.9737553970796138
	[3876656510653276382 , 14066869468942639955]  =  0.44686709985677875
	[13576140399322980841,  2849690884155085581]  =  0.4290016644974548
	[3753583410179171704 , 14995138918287078531]  =  0.8805668289683466
	[1443935710653492582 ,  4394159825732135742]  =  0.3663409424205606
	                                              ⋮
	[4981387750669837953 ,  2318046236442875673]  =  0.5915349810640413
	[17467549359930456931,  2520040687452014961]  =  0.428351258725431
	[7736497953838160897 , 18148906667482527649]  =  0.26135008082719335
	[7401388003796389189 ,  9526342322394325946]  =  0.11580341182401344
	[12376285854513575894,  1526691723863411160]  =  0.0659812606723893
	[4005702914804719925 ,  7989582431359101293]  =  0.5808691972507836
	[2050037547392292084 ,  7989582431359101293]  =  0.7130999434438599
	[6101516501032416524 , 11527542315164007414]  =  0.7480236920486549
	[1811302532022619362 , 16840404209865735426]  =  0.2882912474316772Timing named index: 0.001814215, array index: 0.000679094, named key: 0.112092878
Timing sum large sparse array: 0.020197319, named: 0.023046215
done!
INFO: NamedArrays tests passed

>>> End of log
