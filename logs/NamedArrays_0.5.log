>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (749.46484375 MB free)
Uptime: 8518.0 sec
Load Avg:  0.94775390625  1.03955078125  1.05859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     449119 s       5799 s      37524 s     258090 s         18 s
#2  3502 MHz     121160 s         37 s      18805 s     692246 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.8696374946193008	0.0006698400626290457	0.4621547648835673	0.7712104352974287
two	0.29071091327256404	0.08923440822254047	0.4488963986139607	0.4717646997436702
a	44
b	11
c	77
d	89
e	71
f	95
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.776042  0.603526   0.54935
b           │  0.54562  0.833455  0.692031 0.7760415103229903 0.7760415103229903
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.776042  0.603526   0.54935
b     │  0.54562  0.833455  0.692031
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.776042  0.603526   0.54935
b           │  0.54562  0.833455  0.692031
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.776042  0.603526   0.54935
b     │  0.54562  0.833455  0.692031
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.389214   0.164964  0.0891303    0.27865
二              │  0.742534  0.0963365   0.743415   0.844112
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139680128069120
0-element Named Array{Any,1}

[0.844457 0.546154 0.753725 0.0854126; 0.952557 0.701393 0.796683 0.514333]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.844457   0.546154   0.753725  0.0854126
two   │  0.952557   0.701393   0.796683   0.5143332×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.844457   0.546154   0.753725  0.0854126
two   │  0.952557   0.701393   0.796683   0.5143332×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.391857     -0.149109  …     -0.414603       1.53643
2     │     -1.36682       0.34073  …      0.104837    -0.03852051000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.212904     1.69035
2     │    1.31464    0.804957
3     │  -0.511883    -1.87224
4     │   -1.52731     1.34475
5     │   0.284727      1.8118
6     │   0.380154    0.230975
7     │   0.726477    0.255501
8     │  -0.385641    -1.18589
9     │  -0.211977   -0.421351
⋮                ⋮           ⋮
992   │ -0.0852645    0.681153
993   │   0.602324   -0.393622
994   │   -1.07634    -1.52505
995   │  -0.771649    0.198294
996   │    1.44842    0.863331
997   │    0.43644     1.88189
998   │   0.667945   -0.647264
999   │   0.478777     -1.6154
1000  │  -0.956015     1.084751000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    1.77399
2    │   -1.00659
3    │  -0.690272
4    │   -1.39454
5    │   0.661354
6    │  -0.127112
7    │   0.162087
8    │  -0.553426
9    │   -1.18224
⋮               ⋮
992  │ 0.00701463
993  │   0.720373
994  │  -0.518141
995  │   -0.30416
996  │    0.51601
997  │  0.0551241
998  │   0.269314
999  │  -0.631992
1000 │   -0.425562×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.999118  0.582489
1           │ 0.476734   0.20571

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.091037   0.980889
1           │  0.299075  0.0785385
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.332052
2  │ 0.579554
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.850696   0.845332
2     │  0.578048  0.0521658
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.601971  0.313723
2     │ 0.890599  0.122515

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.652992   0.376495
2     │  0.638324  0.0467353
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.94097  0.0760921
2     │  0.700998   0.551289

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.688476  0.795798
2     │ 0.934001  0.320336

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.995209  0.843077
2     │ 0.176408  0.519676

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.116762  0.270438
2     │ 0.109392  0.827974
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.806234  0.0656281
2     │  0.862035  0.0950123

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.443489  0.751799
2     │ 0.831781  0.409714

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.275653   0.282059
2     │ 0.0966569   0.144487
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.702949  0.561853

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.362876  0.360298
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.143001
2     │ 0.925504

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.991499
2     │ 0.144171
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.195731  0.0997943
2     │  0.465449   0.864588
1000×1000 Named sparse matrix with 93 Float64 nonzero entries:
	[11394354523540829904,  6134978669850253296]  =  0.2009206656174516
	[7026046704018437269 ,   592365234179887848]  =  0.09718814303159307
	[16583690740438463922,  2849690884155085581]  =  0.5915455514182917
	[16320645429046908531,  4394159825732135742]  =  0.5170897116045625
	[9870978712100122380 ,  8725235013359650451]  =  0.1504703117442694
	[1703847331300677320 ,  5723128691850249417]  =  0.48429050299386667
	[13593351659750487469,  4329451781928897369]  =  0.8143710002111628
	[12372524185508789598, 10596751188013898940]  =  0.5466613348873004
	                                              ⋮
	[2050037547392292084 , 16267926292325351807]  =  0.4856758163564987
	[1085996354551843550 , 11732026533134275955]  =  0.6617916889060043
	[12901330087571726961, 10924666096879366607]  =  0.49650973813633126
	[11197161442816233100,  2318046236442875673]  =  0.8893269029511912
	[16091998848339026335,  4788923618671962983]  =  0.3243601051550158
	[7010853231609596680 ,  4214085865611670439]  =  0.6267706953066852
	[12459420750016908814,   372001016642560619]  =  0.2107055128713835
	[12023328037222515112, 10370911177498520402]  =  0.4961461512055181
	[4623749630185680030 , 16836080019131185762]  =  0.7483868614495903Timing named index: 0.000938148, array index: 0.000476018, named key: 0.072619892
Timing sum large sparse array: 0.022663577, named: 0.026872473
done!
INFO: NamedArrays tests passed

>>> End of log
