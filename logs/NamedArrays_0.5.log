>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1002.93359375 MB free)
Uptime: 8732.0 sec
Load Avg:  0.95263671875  0.95654296875  1.0126953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     469851 s       3482 s      42241 s     256243 s         22 s
#2  3499 MHz     120347 s       3797 s      20588 s     708132 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.19.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.3475915386196655	0.641676965848742	0.6252772722065505	0.29126470556543405
two	0.8581298285562566	0.203765839938588	0.3617535372603071	0.3556236598226057
a	40
b	72
c	51
d	76
e	23
f	11
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.306534  0.306914  0.958269
b           │  0.91997  0.147567  0.110214 0.3065339713020414 0.3065339713020414
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.306534  0.306914  0.958269
b     │  0.91997  0.147567  0.110214
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.306534  0.306914  0.958269
b           │  0.91997  0.147567  0.110214
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.306534  0.306914  0.958269
b     │  0.91997  0.147567  0.110214
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.757285  0.411662  0.790726  0.809896
二              │  0.19994  0.105219  0.335711  0.728901
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139712778522736
0-element Named Array{Any,1}

[0.582722 0.0448885 0.52441 0.470096; 0.11941 0.861653 0.489053 0.21454]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.582722  0.0448885    0.52441   0.470096
two   │   0.11941   0.861653   0.489053    0.214542×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.582722  0.0448885    0.52441   0.470096
two   │   0.11941   0.861653   0.489053    0.214542×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.761425    -0.262559  …    -0.153159    -0.567669
2     │  -0.0339587     0.760308  …     0.219697    -0.3979481000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.247097    -1.21449
2     │   0.236456   -0.527787
3     │   0.830077   -0.439054
4     │  -0.431466    -1.44287
5     │    1.72818     1.14478
6     │   0.452821    0.666159
7     │   0.166855    0.391809
8     │   0.704834     0.12883
9     │  0.0974746    -0.33344
⋮                ⋮           ⋮
992   │  -0.402893    0.351209
993   │   0.359301    -1.75041
994   │  -0.409978     1.70941
995   │   -0.51707    0.202858
996   │    -1.4232     1.67778
997   │  -0.164817  -0.0772379
998   │ -0.0959092    -1.33757
999   │    1.02332    0.991259
1000  │   -0.71948    0.2751431000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.362981
2    │   0.752986
3    │  -0.163193
4    │    1.57997
5    │  -0.131285
6    │   0.164713
7    │  -0.924964
8    │     1.8469
9    │ 0.00403009
⋮               ⋮
992  │   -0.64305
993  │  -0.299487
994  │  -0.301474
995  │  -0.448924
996  │   0.551462
997  │   0.901656
998  │    2.25929
999  │  -0.579385
1000 │  -0.9543692×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.455402  0.0982096
1           │ 0.0617679   0.599003

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.612381  0.996345
1           │ 0.989197  0.910973
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.847442
2  │ 0.388652
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.628966  0.340877
2     │ 0.196884  0.766902
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.830187   0.62782
2     │  0.30144  0.409686

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.767137   0.37582
2     │ 0.617336  0.447927
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.646162  0.921014
2     │ 0.332396  0.895253

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.656312  0.546551
2     │ 0.191884  0.367602

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0128838   0.561192
2     │   0.36413   0.293477

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.406111  0.618001
2     │  0.73497  0.991707
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.315965   0.70474
2     │ 0.797279  0.254625

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.118921  0.292626
2     │ 0.170895  0.963377

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0975152   0.701939
2     │  0.751044      0.114
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.431047  0.688563

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0451653   0.204245
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0783968
2     │  0.177662

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.670057
2     │  0.47702
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.664955  0.824011
2     │ 0.219539  0.602274
1000×1000 Named sparse matrix with 119 Float64 nonzero entries:
	[7736497953838160897 ,   144428425607543167]  =  0.8030590170989564
	[7989582431359101293 ,  5647414292592918739]  =  0.7738677111426446
	[911145219565420452  , 17095493447719212504]  =  0.3207447879096357
	[1692321568384860970 ,  6134978669850253296]  =  0.4561455657460045
	[12997264836858618812,  8069307267129313135]  =  0.9395430911586358
	[592365234179887848  ,  3039451196773527828]  =  0.17738044986150214
	[5515248425081783923 , 16246598853062742192]  =  0.7690328810085718
	[3159188428204763267 , 16408863325498676967]  =  0.989848702393046
	                                              ⋮
	[12590458817397224361, 11382910810432795234]  =  0.42168598297590987
	[8185803203023614208 ,  4788923618671962983]  =  0.20498239459800938
	[16243515418520287792,  9526342322394325946]  =  0.9583764513019779
	[1861743268047760089 , 16069635275006911712]  =  0.8006734883994557
	[5004131969199419793 ,  1523061068178304284]  =  0.9419492718664608
	[1473175892488538621 ,  1203336841330469213]  =  0.6095721527383053
	[17207488849817960156,  2758171916068192631]  =  0.583119226722798
	[447754687212557937  ,  9133170895916704973]  =  0.3815421264226455
	[1177457170591155921 ,  2588469222286953884]  =  0.9019843525512408Timing named index: 0.001744628, array index: 0.000727441, named key: 0.12641634
Timing sum large sparse array: 0.014766836, named: 0.037568947
done!
INFO: NamedArrays tests passed

>>> End of log
