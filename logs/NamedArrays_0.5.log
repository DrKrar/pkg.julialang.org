>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (966.73046875 MB free)
Uptime: 7565.0 sec
Load Avg:  1.0498046875  0.984375  1.0322265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     432913 s       7249 s      40590 s     179223 s         16 s
#2  3499 MHz      98847 s        150 s      19825 s     620462 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.19.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.3416913614261632	0.41985255188502846	0.7032190846534461	0.42877619140312917
two	0.28821585605899647	0.9038095353223241	0.508422245540407	0.1346825117877415
a	47
b	85
c	56
d	51
e	100
f	18
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.198558  0.247579  0.374289
b           │ 0.813013  0.396266  0.914399 0.19855823082028468 0.19855823082028468
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.198558  0.247579  0.374289
b     │ 0.813013  0.396266  0.914399
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.198558  0.247579  0.374289
b           │ 0.813013  0.396266  0.914399
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.198558  0.247579  0.374289
b     │ 0.813013  0.396266  0.914399
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.565887   0.610875   0.675692   0.889553
二              │   0.73418  0.0306809   0.469632   0.315438
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140010893553008
0-element Named Array{Any,1}

[0.72327 0.538629 0.522685 0.00279326; 0.0502158 0.0416227 0.459606 0.0126728]
2×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │    0.72327    0.538629    0.522685  0.00279326
two   │  0.0502158   0.0416227    0.459606   0.01267282×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │    0.72327    0.538629    0.522685  0.00279326
two   │  0.0502158   0.0416227    0.459606   0.01267282×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      0.25475      -1.50997  …     -0.704176     -0.593269
2     │     -2.99726     -0.450597  …      0.769397      0.1032821000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  -2.04077   0.375694
2     │ -0.229018  -0.200755
3     │ -0.127302   0.104105
4     │ -0.125256    0.28425
5     │   2.26191    2.54142
6     │  -1.13309  -0.655929
7     │ -0.259895   -1.97133
8     │    0.1386  -0.757385
9     │   0.24326  -0.669629
⋮               ⋮          ⋮
992   │ -0.467715    1.33824
993   │  -1.75636  -0.761342
994   │  0.143362  -0.318346
995   │  -1.42142    1.25797
996   │  0.421036  -0.841606
997   │  0.656058  0.0754159
998   │   2.08916   -1.54894
999   │  0.366311  -0.687287
1000  │ -0.230997  -0.6380481000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    1.30044
2    │   0.559645
3    │  -0.559652
4    │ 0.00869966
5    │   0.198309
6    │   0.835638
7    │   -1.92054
8    │ -0.0457754
9    │   0.716112
⋮               ⋮
992  │  -0.562888
993  │    2.45832
994  │    -1.0899
995  │     1.3612
996  │   0.940884
997  │   0.559964
998  │    1.36232
999  │     1.5887
1000 │  -0.4839162×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.779143  0.813459
1           │ 0.346809  0.416759

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.49986  0.795918
1           │ 0.824374  0.420522
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │   0.83395
2  │ 0.0898252
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.071158  0.834502
2     │ 0.342572  0.168402
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.779263   0.38677
2     │  0.37677  0.953402

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.806861  0.0757465
2     │  0.442623    0.67164
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.909873  0.583396
2     │ 0.777574  0.983054

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.224306  0.894646
2     │ 0.636468  0.249869

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.212862  0.227245
2     │ 0.280857  0.443679

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.311718   0.47524
2     │ 0.597533  0.363569
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.458187  0.948148
2     │ 0.177085  0.229247

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0766291   0.955202
2     │   0.23211   0.922933

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.020545  0.217221
2     │ 0.973931   0.33854
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.4678  0.450874

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.433843   0.52324
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.635357
2     │ 0.546873

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.733568
2     │ 0.930659
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0724689   0.438106
2     │  0.356078   0.438793
1000×1000 Named sparse matrix with 105 Float64 nonzero entries:
	[8030317335019090683 ,  5647414292592918739]  =  0.26449184762286015
	[5490184849613505398 ,  5312631360709731698]  =  0.26214528991295327
	[2597121609202981640 ,   113574861176001527]  =  0.28393198087229976
	[7984327074154710040 , 18168544338330653462]  =  0.38673616361543584
	[18403132107547063335,  4329451781928897369]  =  0.9316219312680603
	[53689838181604040   , 16408863325498676967]  =  0.08257153702672548
	[9151636479057027417 , 13342932250377702532]  =  0.10573279062879593
	[18381296046359118750,   906960604709401733]  =  0.11084772012030775
	                                              ⋮
	[4041377447322807123 ,  1082833487325258643]  =  0.41174808525988604
	[14690927514111304489,  1082833487325258643]  =  0.7996802760012547
	[770286245341647776  ,  2107242561845671563]  =  0.2026097257017101
	[5392016834065508343 ,  5597731276780160114]  =  0.9249871127567968
	[1811302532022619362 , 17737936919457265947]  =  0.7336627207463651
	[15537134230127387587, 17737936919457265947]  =  0.45213490779951937
	[8088697103424080731 ,  1861743268047760089]  =  0.38586039614910805
	[971859988095984883  ,  7957587899775749890]  =  0.4375087429966773
	[2194332839417359044 , 13690505415342562739]  =  0.9930271961784127Timing named index: 0.001173004, array index: 0.000353756, named key: 0.081743823
Timing sum large sparse array: 0.013385435, named: 0.041375985
done!
INFO: NamedArrays tests passed

>>> End of log
