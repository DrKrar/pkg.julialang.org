>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (990.15625 MB free)
Uptime: 8584.0 sec
Load Avg:  1.07275390625  0.9853515625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     468141 s       6242 s      47886 s     231941 s         13 s
#2  3496 MHz     124069 s        235 s      21190 s     694365 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.19.0
 - DataStructures                0.5.2
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.9134271284130766	0.11171390346334387	0.5802252060253141	0.5994468156053026
two	0.49199597269971873	0.13438186116328432	0.3990306109034891	0.5201407810558041
a	46
b	92
c	31
d	92
e	3
f	19
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.84029  0.881721  0.970724
b           │ 0.351269  0.620774  0.142682 0.8402895681465237 0.8402895681465237
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.84029  0.881721  0.970724
b     │ 0.351269  0.620774  0.142682
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.84029  0.881721  0.970724
b           │ 0.351269  0.620774  0.142682
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.84029  0.881721  0.970724
b     │ 0.351269  0.620774  0.142682
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.836883   0.725822  0.0796626   0.126276
二              │  0.668797   0.206184   0.607832   0.591772
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139831613060816
0-element Named Array{Any,1}

[0.152918 0.0744064 0.590264 0.159252; 0.771483 0.469268 0.359805 0.723863]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.152918  0.0744064   0.590264   0.159252
two   │  0.771483   0.469268   0.359805   0.7238632×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.152918  0.0744064   0.590264   0.159252
two   │  0.771483   0.469268   0.359805   0.7238632×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.522575      -1.37249  …      0.859757      -1.24006
2     │     -1.25053      0.476636  …      0.209163     -0.5969561000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.979088   -0.306392
2     │ -0.0758689    -1.24547
3     │  -0.290398    0.397522
4     │ -0.0527492  0.00219182
5     │  -0.501781     1.11424
6     │   0.182679     2.23288
7     │ -0.0233066    -1.20726
8     │   -1.30672     1.43807
9     │  -0.597432    0.508148
⋮                ⋮           ⋮
992   │   -1.55707    0.195028
993   │   0.391941    -1.22609
994   │   -1.68666   -0.418926
995   │   0.206475   -0.521116
996   │   0.387555   -0.254878
997   │  -0.848665     1.07704
998   │    1.11012    -0.29828
999   │    0.38068    0.964298
1000  │    0.51928   -0.2559161000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.719898
2    │ -0.0977807
3    │  -0.794542
4    │   0.589719
5    │   0.218375
6    │   0.295293
7    │  0.0692301
8    │    0.96948
9    │  -0.938103
⋮               ⋮
992  │  -0.299809
993  │  -0.219312
994  │    1.10523
995  │  -0.668665
996  │ -0.0227175
997  │    1.58952
998  │  -0.913416
999  │  -0.334963
1000 │  -0.2702952×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.708399  0.612808
1           │ 0.904939  0.802403

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.537948  0.500718
1           │ 0.135189  0.590103
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.482503
2  │ 0.347164
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.910566  0.396323
2     │ 0.416583  0.984257
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.062173  0.0100037
2     │  0.397585   0.982423

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.613596   0.22007
2     │ 0.491378  0.217939
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.199115  0.684071
2     │ 0.757445  0.623058

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.161217  0.848842
2     │  0.78334  0.267088

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0822745   0.434852
2     │   0.41292   0.795516

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.947683  0.110791
2     │ 0.612901  0.614314
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.705424  0.0377255
2     │  0.229517   0.418154

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.951279  0.639926
2     │ 0.596909  0.059307

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.135481  0.730397
2     │ 0.835726   0.55215
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.206146  0.733504

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0522727   0.437423
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.400091
2     │ 0.683947

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.267297
2     │ 0.470288
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.780929  0.650538
2     │ 0.675656  0.535358
1000×1000 Named sparse matrix with 103 Float64 nonzero entries:
	[9283096199793891681 ,   592365234179887848]  =  0.2369935322425778
	[17448184880248178237, 14517667374310463124]  =  0.38492437908590293
	[9833052444289127168 , 17822619313291261357]  =  0.505610118981336
	[17795748529514954214, 18443816037252674910]  =  0.2760119645287942
	[2886272574986834222 ,  5839463014734961202]  =  0.8427520418778072
	[9440739376838893158 ,  5839463014734961202]  =  0.6883798909447645
	[4207351995360724518 ,   281356413667926651]  =  0.38999958712031546
	[3822203247414266444 , 10684064542878956755]  =  0.2407230899359789
	                                              ⋮
	[3082239157947279921 ,  2344064818992981444]  =  0.7588656384056887
	[10338346681654797567, 10361974346531339474]  =  0.6797175986735466
	[849947749456312673  , 17718833055079784125]  =  0.6738003040175897
	[875267146556840949  , 16836080019131185762]  =  0.5494312367138041
	[7401919267257527897 , 10663619072362037589]  =  0.8469836556544097
	[13096237947071787928,  9223427034658990711]  =  0.999206445332341
	[5071406905266041170 ,  7957587899775749890]  =  0.29574998139935293
	[15465980046630820984, 13690505415342562739]  =  0.13902745899448465
	[16157048171714034010,  2588469222286953884]  =  0.43901794987549025Timing named index: 0.001560463, array index: 0.000785893, named key: 0.126415642
Timing sum large sparse array: 0.013092326, named: 0.035735967
done!
INFO: NamedArrays tests passed

>>> End of log
