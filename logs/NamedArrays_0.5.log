>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (838.546875 MB free)
Uptime: 6865.0 sec
Load Avg:  0.96142578125  0.9580078125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     387034 s       6623 s      48715 s     171997 s         14 s
#2  3499 MHz     110845 s         81 s      22080 s     536892 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.7954354191954878	0.19775878553517456	0.5603608886086313	0.14540648634393816
two	0.805229277612004	0.4950352213671778	0.6305095875198248	0.3825888217816067
a	73
b	27
c	47
d	14
e	26
f	28
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.90353  0.870702  0.698887
b           │ 0.166249  0.133239  0.751921 0.9035304113972549 0.9035304113972549
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.90353  0.870702  0.698887
b     │ 0.166249  0.133239  0.751921
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.90353  0.870702  0.698887
b           │ 0.166249  0.133239  0.751921
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.90353  0.870702  0.698887
b     │ 0.166249  0.133239  0.751921
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.375709   0.370551   0.566242     0.7782
二              │ 0.0800837   0.280429   0.873931   0.995936
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.668119 0.594314 0.0219938 0.350086; 0.0634687 0.835513 0.980085 0.22311]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.668119   0.594314  0.0219938   0.350086
two   │ 0.0634687   0.835513   0.980085    0.223112×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.668119   0.594314  0.0219938   0.350086
two   │ 0.0634687   0.835513   0.980085    0.223112×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.766177      0.423357  …       1.44409       2.65726
2     │     0.799101     -0.639072  …       1.02715       0.511471000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.430318  -0.558186
2     │   1.17062   0.713817
3     │  0.563313  -0.294476
4     │   0.09717     0.2423
5     │  -1.87673  -0.254393
6     │ -0.375722    0.32483
7     │  -1.23713   -1.03661
8     │  0.747809  -0.391371
9     │ 0.0700739  -0.885483
⋮               ⋮          ⋮
992   │ -0.176378   -1.05188
993   │  0.602223    1.20862
994   │  0.473713  -0.426544
995   │  0.910142    1.00773
996   │  0.834407    1.34849
997   │  0.642189   0.268717
998   │  -1.29732    1.15786
999   │ -0.266189   -1.24269
1000  │   1.10926   0.5194821000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.181966
2    │  0.451635
3    │   1.69127
4    │ -0.123142
5    │ -0.734449
6    │    0.2739
7    │ -0.284984
8    │ 0.0259236
9    │ 0.0568362
⋮              ⋮
992  │  -1.28384
993  │  0.305596
994  │  0.795557
995  │  0.568602
996  │  -1.16976
997  │ -0.944058
998  │ -0.931901
999  │  0.303969
1000 │  0.4532492×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.434896  0.831853
1           │ 0.761915   0.98606

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.25832  0.446708
1           │ 0.468115  0.826284
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.144848
2  │ 0.289706
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.266017  0.956294
2     │ 0.858902  0.256472
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0757368   0.495481
2     │  0.955784   0.590363

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.628725  0.130624
2     │ 0.377394  0.695981
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.474975    0.21739
2     │ 0.0853167   0.926914

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.451918  0.809797
2     │ 0.595228  0.284135

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.108162  0.327557
2     │   0.6198  0.467804

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.200216  0.889655
2     │ 0.329877  0.486395
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.34977  0.697885
2     │ 0.873796   0.61793

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.569977   0.850114
2     │  0.345331  0.0382052

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.391663  0.854545
2     │ 0.785637  0.436125
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.999753  0.601409

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.120887  0.521444
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.143729
2     │ 0.753123

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.600879
2     │ 0.260673
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.548391   0.81283
2     │ 0.708672  0.290389
1000×1000 Named sparse matrix with 91 Float64 nonzero entries:
	[3701904739816180802 , 12419957900638875901]  =  0.6439149536441999
	[11711005111088208244, 13888991764943741743]  =  0.154299114941717
	[4329451781928897369 ,   592365234179887848]  =  0.4203246170358719
	[11146485517283900572,   592365234179887848]  =  0.7799353795748989
	[14766805435251878341,   592365234179887848]  =  0.4209004291917544
	[5392016834065508343 ,   273396578563598247]  =  0.5058169990097601
	[8097707444526576530 ,  6947860236989419941]  =  0.7112650777087555
	[6828122599267262902 ,  6081406087827180005]  =  0.8891129146308818
	                                              ⋮
	[16031689834122954645, 18148906667482527649]  =  0.9177459269743924
	[10642981429583964626,  8090338657268802519]  =  0.34710190112681083
	[3159188428204763267 ,  8090338657268802519]  =  0.20265049413805425
	[11170631332889122227,   372001016642560619]  =  0.1720030569303268
	[16252401167029097910, 10370911177498520402]  =  0.8963351979761349
	[11355399569336610079, 14057278280866812536]  =  0.3034428453898257
	[4394159825732135742 ,  7989582431359101293]  =  0.9658044194103732
	[13517292640990875502,  9223427034658990711]  =  0.28648037164785345
	[7989582431359101293 , 15240003619098155971]  =  0.8744204889807756Timing named index: 0.000943694, array index: 0.000474367, named key: 0.072692084
Timing sum large sparse array: 0.007467678, named: 0.014803694
done!
INFO: NamedArrays tests passed

>>> End of log
