>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (843.37109375 MB free)
Uptime: 5634.0 sec
Load Avg:  0.98193359375  0.998046875  1.06591796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     326332 s         72 s      46362 s     121168 s          3 s
#2  3500 MHz      62668 s         70 s      14518 s     475804 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.353569  0.0672602   0.883487
b           │  0.636066   0.199778   0.354905 0.3535692214354771 0.3535692214354771
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.353569  0.0672602   0.883487
b     │  0.636066   0.199778   0.354905
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.353569  0.0672602   0.883487
b           │  0.636066   0.199778   0.354905
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.353569  0.0672602   0.883487
b     │  0.636066   0.199778   0.354905
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.102877  0.984023  0.289478  0.314793
two   │ 0.285969  0.548139  0.344479   0.95015
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.524034   0.245018
1           │  0.277212  0.0973888

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.672128  0.744366
1           │ 0.786227  0.828607
2-element Named Array{Float64,1}
A │ 
──┼──────────
1 │ 0.0792504
2 │  0.810636
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.954735  0.987761
2     │ 0.209914  0.132171
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.133693  0.552578
2     │ 0.337096  0.881685

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.940692  0.409543
2     │ 0.589606  0.354685
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.381294  0.544177
2     │  0.31498  0.214473

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.872883  0.512953
2     │ 0.134648  0.975224

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.663751   0.399052
2     │  0.592873  0.0837347

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.391281  0.649134
2     │ 0.210498  0.364262
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.181292  0.0152049
2     │  0.333157   0.425956

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.243996  0.311059
2     │ 0.291825   0.47688

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.94031  0.954625
2     │ 0.148603  0.858576

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.709223  0.508456
2     │ 0.602551   0.10446

[:, :, C=1, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.487286   0.983784
2     │ 0.0196833   0.328403

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.754268  0.095911
2     │ 0.331158  0.890471

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.503372  0.516879
2     │ 0.586178  0.338852

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.98832  0.881322
2     │ 0.516364  0.554867
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.547401  0.792501

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.677061  0.407306
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.858028
2     │ 0.898854

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.836885
2     │ 0.695782
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.404262    0.433829
2     │ 0.00494686    0.239974
done!
Timing named index: 0.001344888, array index: 0.000790017, named key: 0.112216005
Timing sum large sparse array: 0.008044519, named: 0.015549795
INFO: NamedArrays tests passed

>>> End of log
