>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (854.60546875 MB free)
Uptime: 6042.0 sec
Load Avg:  1.0087890625  0.96875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     358428 s        103 s      38493 s     139621 s         18 s
#2  3500 MHz      82974 s       6748 s      18454 s     481541 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.3811667032115591	0.661268822277054	0.4965094583719085	0.676912648225821
two	0.5925622102683445	0.36744629473651824	0.5363501601471665	0.6642753031891973
a	55
b	45
c	91
d	14
e	9
f	35
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.591588    0.481812    0.430976
b           │ 0.00676849    0.402445    0.561368 0.5915883662521566 0.5915883662521566
2×3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.591588    0.481812    0.430976
b     │ 0.00676849    0.402445    0.561368
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.591588    0.481812    0.430976
b           │ 0.00676849    0.402445    0.561368
2×3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.591588    0.481812    0.430976
b     │ 0.00676849    0.402445    0.561368
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.342753   0.687958   0.671008   0.625393
二              │  0.656117  0.0141028    0.68183   0.149999
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.982307 0.401642 0.901882 0.110902; 0.160171 0.230815 0.268062 0.748114]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.982307  0.401642  0.901882  0.110902
two   │ 0.160171  0.230815  0.268062  0.7481142×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.982307  0.401642  0.901882  0.110902
two   │ 0.160171  0.230815  0.268062  0.7481142×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.03677      0.751361  …     -0.799863      -1.03453
2     │    -0.532696     -0.856309  …     -0.012778      -1.298671000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │     2.1039     1.72343
2     │  -0.657217     0.86461
3     │   0.571805   -0.459715
4     │   0.776389   -0.486882
5     │    0.91009    0.701801
6     │    2.08028  -0.0336495
7     │  -0.953161   0.0901846
8     │  -0.747278   -0.678464
9     │   0.501868    -0.89063
⋮                ⋮           ⋮
992   │ -0.0565594   -0.432513
993   │  -0.394414  -0.0541159
994   │   0.854802    -0.13009
995   │  -0.737339     1.01513
996   │  -0.616347   -0.307697
997   │    1.19615     1.02335
998   │   0.743476    0.448293
999   │      1.837   -0.657232
1000  │ -0.0608837     1.782951000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.163707
2    │ -0.301544
3    │  0.528671
4    │   1.38301
5    │ -0.658673
6    │  0.437411
7    │ -0.106835
8    │  0.350353
9    │  -1.44421
⋮              ⋮
992  │ -0.484352
993  │  -1.34488
994  │  0.583247
995  │ 0.0265667
996  │  0.478736
997  │  0.339566
998  │   1.85728
999  │  0.919876
1000 │  0.3596782×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.863988  0.450883
1           │ 0.459408  0.619066

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.431177  0.467479
1           │ 0.288661  0.869989
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.545291
2  │ 0.750134
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.810336  0.848173
2     │ 0.300572  0.702187
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.431924    0.717492
2     │ 0.00456396    0.474266

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.638481  0.157528
2     │  0.88307  0.220475
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.608685  0.880479
2     │ 0.787071   0.33187

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.834835  0.0687713
2     │  0.893853   0.925579

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.688219  0.256044
2     │ 0.114819  0.727254

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.253263  0.620312
2     │ 0.804003  0.316799
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.139297   0.640225
2     │    0.7113  0.0838461

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.915535  0.286495
2     │ 0.705917  0.579619

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.968725  0.760314
2     │ 0.788366  0.397715
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.452547  0.850779

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.909135  0.789751
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.875868
2     │ 0.741815

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.834258
2     │ 0.658214
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.536509  0.673805
2     │ 0.933992  0.263462
1000×1000 Named sparse matrix with 135 Float64 nonzero entries:
	[4106283031091570395 ,  1703847331300677320]  =  0.4120828308926958
	[1095814029099585013 , 13888991764943741743]  =  0.7712579611653061
	[6046649976662626325 , 16462243977607957471]  =  0.8533271279185848
	[2713027948549010671 , 11080872162023102847]  =  0.18850392764080004
	[13897873635935988725,  4247719799217886270]  =  0.9015685927872756
	[17466052388280872253, 17822619313291261357]  =  0.5806368482449791
	[10469764766191980213, 17678211741433686062]  =  0.5632963290040178
	[4509385789584299296 , 17678211741433686062]  =  0.7991090107388228
	                                              ⋮
	[7002923098712527685 ,  2318046236442875673]  =  0.1344826604753051
	[7957587899775749890 , 10361974346531339474]  =  0.10673780375084974
	[12376285854513575894, 12554874066387155728]  =  0.7199717682765994
	[2362724562918981188 , 15436097664388839821]  =  0.3935818981417487
	[2876475700534992100 , 10370911177498520402]  =  0.8042571225711965
	[15042065790022137782, 11314283927973801071]  =  0.8256082793358008
	[6216214939212987967 , 11527542315164007414]  =  0.7435262265824343
	[8538437388973856756 ,  4047135350800189603]  =  0.41100037047311977
	[9440739376838893158 ,  3279378535085980212]  =  0.15597457008670368Timing named index: 0.001858487, array index: 0.000694532, named key: 0.127194114
Timing sum large sparse array: 0.013587444, named: 0.021997044
done!
INFO: NamedArrays tests passed

>>> End of log
