>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing NamedArrays v0.4.6
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0-dev+1479
Commit 9eb74d4 (2015-11-26 01:21 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing NamedArrays
WARNING: New definition 
    \(AbstractArray{T<:Any, 2}, NamedArrays.NamedArray{T<:Any, 1, AT<:Any, DT<:Any}) at /home/vagrant/.julia/v0.5/NamedArrays/src/arithmetic.jl:112
is ambiguous with: 
    \(Base.LinAlg.Diagonal, AbstractArray{T<:Any, 1}) at linalg/diagonal.jl:173.
To fix, define 
    \(Base.LinAlg.Diagonal, NamedArrays.NamedArray{T<:Any, 1, AT<:Any, DT<:Any})
before the new definition.
WARNING: New definition 
    \(AbstractArray{T<:Any, 2}, NamedArrays.NamedArray{T<:Any, 2, AT<:Any, DT<:Any}) at /home/vagrant/.julia/v0.5/NamedArrays/src/arithmetic.jl:114
is ambiguous with: 
    \(Base.LinAlg.Diagonal, AbstractArray{T<:Any, 2}) at linalg/diagonal.jl:172.
To fix, define 
    \(Base.LinAlg.Diagonal, NamedArrays.NamedArray{T<:Any, 2, AT<:Any, DT<:Any})
before the new definition.
WARNING: New definition 
    \(AbstractArray{T<:Any, 2}, NamedArrays.NamedArray{T<:Any, 1, AT<:Any, DT<:Any}) at /home/vagrant/.julia/v0.5/NamedArrays/src/arithmetic.jl:112
is ambiguous with: 
    \(Base.LinAlg.Diagonal, AbstractArray{T<:Any, 1}) at linalg/diagonal.jl:173.
To fix, define 
    \(Base.LinAlg.Diagonal, NamedArrays.NamedArray{T<:Any, 1, AT<:Any, DT<:Any})
before the new definition.
WARNING: New definition 
    \(AbstractArray{T<:Any, 2}, NamedArrays.NamedArray{T<:Any, 2, AT<:Any, DT<:Any}) at /home/vagrant/.julia/v0.5/NamedArrays/src/arithmetic.jl:114
is ambiguous with: 
    \(Base.LinAlg.Diagonal, AbstractArray{T<:Any, 2}) at linalg/diagonal.jl:172.
To fix, define 
    \(Base.LinAlg.Diagonal, NamedArrays.NamedArray{T<:Any, 2, AT<:Any, DT<:Any})
before the new definition.
Starting test, no assertions should fail... construction, getindex, ERROR: LoadError: LoadError: type Array has no field array
 in include at ./boot.jl:260
 in include_from_node1 at ./loading.jl:392
 in include at ./boot.jl:260
 in include_from_node1 at ./loading.jl:392
 in process_options at ./client.jl:277
 in _start at ./client.jl:377
while loading /home/vagrant/.julia/v0.5/NamedArrays/test/test.jl, in expression starting on line 31
while loading /home/vagrant/.julia/v0.5/NamedArrays/test/runtests.jl, in expression starting on line 4
=============================[ ERROR: NamedArrays ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/NamedArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("NamedArrays had test errors")
 [inlined code] from iostream.jl:207
 in __test#370__ at pkg/entry.jl:671
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:47
 in cd at pkg/dir.jl:31
 in test at pkg.jl:55
 in eval at ./boot.jl:263
 [inlined code] from ./sysimg.jl:14
 in process_options at ./client.jl:254
 in _start at ./client.jl:377

>>> End of log
