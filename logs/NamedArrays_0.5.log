>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (847.93359375 MB free)
Uptime: 5777.0 sec
Load Avg:  0.98583984375  0.9443359375  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     321063 s        115 s      39009 s     152914 s          9 s
#2  3500 MHz      79578 s         47 s      17150 s     469168 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.8067763693641088	0.004436135393848906	0.6665993905943577	0.990783614790834
two	0.45458543526138717	0.9928595587588358	0.775180775043717	0.7688212367223157
a	8
b	2
c	88
d	70
e	38
f	71
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0341667   0.488635   0.285721
b           │  0.898737   0.805293   0.117815 0.034166740970126286 0.034166740970126286
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0341667   0.488635   0.285721
b     │  0.898737   0.805293   0.117815
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0341667   0.488635   0.285721
b           │  0.898737   0.805293   0.117815
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0341667   0.488635   0.285721
b     │  0.898737   0.805293   0.117815
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.390865  0.0178998   0.736314  0.0733776
二              │  0.839099    0.66593   0.125811   0.980508
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140578917720752
0-element Named Array{Any,1}

[0.83385 0.457306 0.377078 0.796882; 0.713627 0.763962 0.106498 0.902541]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.83385  0.457306  0.377078  0.796882
two   │ 0.713627  0.763962  0.106498  0.9025412×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.83385  0.457306  0.377078  0.796882
two   │ 0.713627  0.763962  0.106498  0.9025412×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.535885     -0.119149  …       2.51882      -1.15838
2     │     -2.48712     -0.741441  …      -0.30091     -0.3732271000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.484802     1.81525
2     │  -0.269015     1.41523
3     │   -1.48149     1.16009
4     │   -0.35392    -1.25783
5     │   -1.33007   -0.426952
6     │   -1.33615    0.673437
7     │  -0.880189   -0.696331
8     │   0.141014     1.08586
9     │   0.288158   0.0290685
⋮                ⋮           ⋮
992   │ -0.0795676   -0.152524
993   │   0.368183    0.321845
994   │   -1.13744   -0.356716
995   │  -0.514295    -1.46999
996   │   0.494826    0.806116
997   │  -0.741535   -0.376559
998   │    1.70288    0.287041
999   │     1.0889    -1.38998
1000  │    1.47116    0.4526051000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.118931
2    │ -0.0884073
3    │    1.38014
4    │  -0.327169
5    │   0.225228
6    │ 0.00225516
7    │  -0.717603
8    │   0.563516
9    │   0.631964
⋮               ⋮
992  │    0.25878
993  │   -1.32922
994  │   -2.30657
995  │  -0.403435
996  │   -1.11737
997  │    1.60117
998  │   -1.26325
999  │    1.13217
1000 │   0.3636512×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.72123  0.523729
1           │ 0.227491  0.876356

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.430015  0.202323
1           │ 0.896841  0.915381
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │     0.52
2  │ 0.995022
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.863558   0.761047
2     │  0.111406  0.0944597
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.200699  0.473975
2     │ 0.545495  0.180605

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.942598   0.137225
2     │ 0.0468749   0.397322
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.698793  0.0165369
2     │  0.127149   0.125729

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.581736  0.173885
2     │  0.71249  0.910126

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0719903    0.68257
2     │  0.467548   0.514389

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.871485   0.537092
2     │ 0.0182392   0.836934
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.297275  0.485227
2     │  0.96473  0.554922

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.627475  0.065318
2     │ 0.461174   0.37494

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.309627   0.47494
2     │ 0.736185  0.162497
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.762135  0.611482

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.381026  0.970448
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.108977
2     │ 0.781575

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.219781
2     │ 0.227067
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.429172  0.0844694
2     │  0.713387  0.0737344
1000×1000 Named sparse matrix with 99 Float64 nonzero entries:
	[16031689834122954645,  4400785119912308702]  =  0.6411991082254203
	[7011600752848376140 ,  5004131969199419793]  =  0.3974613189299747
	[17383975982595546373, 13888991764943741743]  =  0.5434575682982263
	[4400785119912308702 , 14033074738777421392]  =  0.7675185201069739
	[5323866148561809738 , 14066869468942639955]  =  0.13936366788306298
	[18343873927949696366, 11496001657944805140]  =  0.19752460756073598
	[10596751188013898940,  8265524791738013937]  =  0.5141500994258976
	[12815275876572971981,  8097707444526576530]  =  0.9802262699627466
	                                              ⋮
	[17418510937611012500,  4682100877033407764]  =  0.5456543971601071
	[8030317335019090683 , 11033897610157224162]  =  0.025418252131555574
	[918962486075492040  , 11382910810432795234]  =  0.7356639692289608
	[7379076729609959571 , 14027562189529080231]  =  0.8686060275579244
	[10195714700097307537,  6468689935112619700]  =  0.8129982015494532
	[2764549293755475861 , 10361974346531339474]  =  0.7343389285645225
	[14353884801171805892, 11711005111088208244]  =  0.6470773599019146
	[12881399881645621208,  1861743268047760089]  =  0.5558281467386101
	[9526342322394325946 , 13950575499123628905]  =  0.18842067857881317Timing named index: 0.001540077, array index: 0.000638364, named key: 0.139904129
Timing sum large sparse array: 0.023337412, named: 0.024977929
done!
INFO: NamedArrays tests passed

>>> End of log
