>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (836.1171875 MB free)
Uptime: 5729.0 sec
Load Avg:  1.04345703125  1.06591796875  1.09912109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     327671 s         66 s      35271 s     146258 s         11 s
#2  3500 MHz      78176 s       6784 s      16346 s     459116 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.8035558281667596	0.5418079082637204	0.3636286015367509	0.9745285895359779
two	0.26745379183874696	0.868097058998677	0.17572948343542816	0.802246613027811
a	50
b	15
c	68
d	36
e	78
f	40
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.169924  0.396788  0.446755
b           │ 0.817217  0.950432  0.626853 0.1699237073849671 0.1699237073849671
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.169924  0.396788  0.446755
b     │ 0.817217  0.950432  0.626853
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.169924  0.396788  0.446755
b           │ 0.817217  0.950432  0.626853
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.169924  0.396788  0.446755
b     │ 0.817217  0.950432  0.626853
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │   0.11544   0.554811   0.114026  0.0133101
二              │  0.266289   0.114186   0.162863   0.824785
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.0443192 0.356924 0.0514772 0.318617; 0.0368361 0.676755 0.737923 0.657021]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0443192   0.356924  0.0514772   0.318617
two   │ 0.0368361   0.676755   0.737923   0.6570212×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0443192   0.356924  0.0514772   0.318617
two   │ 0.0368361   0.676755   0.737923   0.6570212×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -0.23886   0.00274024  …     0.522337    -0.665768
2     │   -0.444598     -1.22659  …    -0.355338     0.9549311000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.743442   -2.27217
2     │ -0.978266   0.647241
3     │ -0.935564   0.330739
4     │  -1.17707  -0.656538
5     │ -0.533506   0.927157
6     │  0.758385   -1.26198
7     │   1.06237    0.17244
8     │  0.540749   -1.75834
9     │  0.327512  -0.735014
⋮               ⋮          ⋮
992   │  0.618781    1.26932
993   │  0.494827  -0.234968
994   │  0.602727  0.0908342
995   │   1.38709   -1.94216
996   │  0.107686   0.820028
997   │  0.508958    0.53004
998   │  0.340074   -2.52568
999   │ -0.701501   -1.28038
1000  │ 0.0400945    1.907351000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  0.0951853
2    │    -1.0882
3    │   -1.39838
4    │   -0.51412
5    │  -0.887689
6    │   -1.54215
7    │   -1.98455
8    │   0.790345
9    │    -2.1772
⋮               ⋮
992  │   -2.52448
993  │   -1.20618
994  │  -0.793585
995  │  -0.167718
996  │    0.85464
997  │   -1.03507
998  │  -0.839032
999  │ -0.0930818
1000 │    -1.90122×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.575551  0.452366
1           │ 0.406889  0.373967

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.501434   0.10607
1           │ 0.255586  0.833855
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.605737
2  │ 0.748215
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.730399  0.904311
2     │ 0.337459  0.834478
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.159031   0.34881
2     │ 0.224055  0.832305

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.603311  0.857717
2     │ 0.263227  0.110206
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.517609   0.715699
2     │  0.726498  0.0292461

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.528716  0.612741
2     │ 0.433422  0.592307

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.490886  0.169128
2     │ 0.301463  0.641418

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.381963  0.506856
2     │ 0.447733  0.422892
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.277847  0.587545
2     │ 0.335448  0.564526

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.603888  0.776484
2     │ 0.802428  0.617678

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.74633   0.726364
2     │  0.425038  0.0972553
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │       1        2
──────┼─────────────────
1     │ 0.51029  0.33555

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.808571   0.30362
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.454121
2     │ 0.572843

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.699838
2     │  0.44545
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.407859  0.0445672
2     │  0.754885    0.47783
1000×1000 Named sparse matrix with 90 Float64 nonzero entries:
	[2792481481398066916 ,  8699333159457747740]  =  0.21825847473743587
	[11170631332889122227,   113574861176001527]  =  0.9722415316179678
	[12020782256748308824,  5062864901616737721]  =  0.9531217822990665
	[4882987618343239453 , 17676219393380616284]  =  0.36623377913385236
	[12459814376862134316, 17211410618634043162]  =  0.6360445670524855
	[16909640532418341430,  4329451781928897369]  =  0.7504654467128884
	[10698461782340713109, 11907679469289587679]  =  0.6965558386010611
	[8037924722734667669 , 11907679469289587679]  =  0.6361892686955368
	                                              ⋮
	[2515209571418144671 , 14276971493366205365]  =  0.8014654299022166
	[7608520278977511969 , 16077859356318100249]  =  0.13512369638964739
	[16249180486228562427, 16221828541365357577]  =  0.6099481056381446
	[5647414292592918739 ,  2344064818992981444]  =  0.5839812340378117
	[14340416566338039723,  2318046236442875673]  =  0.5000287012688351
	[17095493447719212504, 12554874066387155728]  =  0.25794251431319437
	[12621324006550133948,  8090338657268802519]  =  0.8197900139388394
	[2807702713668942919 ,  6738482027934271349]  =  0.6852625879864445
	[10195714700097307537, 14835807873575694564]  =  0.4777850292778094Timing named index: 0.00155487, array index: 0.000695967, named key: 0.131947474
Timing sum large sparse array: 0.013827393, named: 0.173431157
done!
INFO: NamedArrays tests passed

>>> End of log
