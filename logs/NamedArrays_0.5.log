>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (842.58984375 MB free)
Uptime: 5725.0 sec
Load Avg:  0.947265625  0.92138671875  1.00830078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     319422 s        382 s      45868 s     140145 s         40 s
#2  3499 MHz      89164 s       6623 s      21921 s     435068 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.9566705051078372	0.3233488409556007	0.7704899439822006	0.19509311271999663
two	0.7377005276942825	0.7621476881516815	0.3675552724219462	0.008474795321607331
a	69
b	83
c	49
d	26
e	99
f	66
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0759216   0.510773   0.433461
b           │  0.507746  0.0604073   0.434573 0.07592162539037539 0.07592162539037539
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0759216   0.510773   0.433461
b     │  0.507746  0.0604073   0.434573
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0759216   0.510773   0.433461
b           │  0.507746  0.0604073   0.434573
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0759216   0.510773   0.433461
b     │  0.507746  0.0604073   0.434573
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.374765  0.750431  0.697539  0.512193
二              │ 0.517603  0.632913  0.974864  0.902495
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139740652998224
0-element Named Array{Any,1}

[0.107383 0.96859 0.681432 0.582862; 0.701115 0.630031 0.818214 0.0914974]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.107383    0.96859   0.681432   0.582862
two   │  0.701115   0.630031   0.818214  0.09149742×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.107383    0.96859   0.681432   0.582862
two   │  0.701115   0.630031   0.818214  0.09149742×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.550894        1.0135  …      0.998386      -1.65875
2     │    -0.528087     -0.244311  …      0.656874       1.042011000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.427533  0.0629786
2     │  0.269445   0.748739
3     │ -0.717719   0.126669
4     │ -0.765401   0.573463
5     │   0.47924   0.134072
6     │  0.457461   -1.82522
7     │ -0.948475   0.236376
8     │  0.775108   0.976821
9     │   1.39616   0.249516
⋮               ⋮          ⋮
992   │ 0.0539683   0.720535
993   │  0.222097   0.357854
994   │ -0.316441  -0.175347
995   │  0.178544  -0.546006
996   │   1.24322   0.223606
997   │ -0.792224   0.350274
998   │   1.49154    1.57722
999   │   1.02115   -1.71526
1000  │  -1.12809    -0.30621000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.62935
2    │  0.518988
3    │   1.59443
4    │ -0.822368
5    │  0.620618
6    │  0.745657
7    │  -1.36011
8    │  -1.38444
9    │  -0.60907
⋮              ⋮
992  │ -0.843914
993  │  -1.02399
994  │  0.800285
995  │  0.769721
996  │  0.709793
997  │   1.03612
998  │  0.788661
999  │  -1.46919
1000 │ -0.0949522×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.731283  0.969857
1           │ 0.448189  0.983765

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.772462  0.136196
1           │ 0.716612  0.422542
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.771605
2  │ 0.942667
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.491588  0.985612
2     │ 0.372445  0.477229
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.835116  0.169879
2     │ 0.750127  0.200255

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.478542  0.306171
2     │ 0.469449  0.296016
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.226458   0.37458
2     │ 0.905626  0.907223

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.470798  0.941831
2     │ 0.394597  0.241873

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.974052   0.236498
2     │ 0.0687807    0.34475

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.109308  0.934719
2     │ 0.857694  0.943079
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.536982  0.997836
2     │ 0.308865  0.378504

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.973981  0.894107
2     │ 0.973759  0.359228

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.587375  0.603276
2     │ 0.557996  0.262331
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.904037  0.730494

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.977985  0.358117
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0497466
2     │  0.256662

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.268209
2     │ 0.657378
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.848098  0.0490409
2     │  0.356894   0.725382
1000×1000 Named sparse matrix with 93 Float64 nonzero entries:
	[10642981429583964626,  5004131969199419793]  =  0.1364139851942463
	[3468941480894322836 , 12809965746239821631]  =  0.9162465645488718
	[16564731551779441726,  4247719799217886270]  =  0.26493823374101755
	[16267926292325351807, 10106592262940987645]  =  0.8344380087958598
	[1831003761424276165 ,  8069307267129313135]  =  0.43021267314810285
	[14542831684510380172, 10601912832305821454]  =  0.610674617702673
	[12405273559266350440, 17676219393380616284]  =  0.6061309638391954
	[8194749162452730241 ,   273396578563598247]  =  0.43208049122874903
	                                              ⋮
	[3805326236553509133 , 11382910810432795234]  =  0.43544134274864965
	[17207488849817960156, 15436097664388839821]  =  0.4712402912643108
	[2971581029604614559 , 12169815624147734794]  =  0.7251029991342919
	[12680114143357042360, 17737936919457265947]  =  0.4952062457522626
	[10870775571180810126, 14057278280866812536]  =  0.6343106779771959
	[9510369508347309199 ,  1861743268047760089]  =  0.7573158041976589
	[15537134230127387587,  4047135350800189603]  =  0.6981994026740652
	[8032225585955793928 , 16840404209865735426]  =  0.4171938449841808
	[18443722453013281811, 14599810768241287016]  =  0.6924025062876793Timing named index: 0.001494023, array index: 0.000731043, named key: 0.129697479
Timing sum large sparse array: 0.012754243, named: 0.02565761
done!
INFO: NamedArrays tests passed

>>> End of log
