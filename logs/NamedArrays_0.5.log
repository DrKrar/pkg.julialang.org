>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (852.078125 MB free)
Uptime: 6222.0 sec
Load Avg:  0.9833984375  0.958984375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     330614 s         46 s      47732 s     184438 s         15 s
#2  3500 MHz      89922 s       7006 s      18834 s     492793 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.12826234775501044	0.45755353740820204	0.8156516155280991	0.15413780117266196
two	0.8249517849780132	0.8216574881473129	0.6540572324251583	0.4702409164173895
a	66
b	89
c	73
d	12
e	51
f	55
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.288155   0.101051    0.31991
b           │ 0.0678473  0.0146819   0.417741 0.28815487066771706 0.28815487066771706
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.288155   0.101051    0.31991
b     │ 0.0678473  0.0146819   0.417741
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.288155   0.101051    0.31991
b           │ 0.0678473  0.0146819   0.417741
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.288155   0.101051    0.31991
b     │ 0.0678473  0.0146819   0.417741
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.599934  0.333962  0.782293  0.538129
二              │ 0.111132  0.556237  0.716215  0.451665
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140393067657728
0-element Named Array{Any,1}

[0.650165 0.126389 0.449053 0.110272; 0.67771 0.0779734 0.508666 0.30494]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.650165   0.126389   0.449053   0.110272
two   │   0.67771  0.0779734   0.508666    0.304942×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.650165   0.126389   0.449053   0.110272
two   │   0.67771  0.0779734   0.508666    0.304942×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     1.05623     0.115578  …     -1.12166     0.635939
2     │   -0.101872    -0.501601  …     0.190669     0.1470971000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.411493  -0.348656
2     │  0.209737   0.970007
3     │   2.03481  -0.648708
4     │ -0.999287     1.4104
5     │  0.498447   -1.24025
6     │  0.650161   0.087726
7     │  0.961717   0.628977
8     │ 0.0150304   0.947027
9     │  -1.57333   -1.21555
⋮               ⋮          ⋮
992   │ -0.681581  -0.140089
993   │   -1.4602   -1.68021
994   │   2.51648  -0.900713
995   │  -1.61622    1.84475
996   │   3.21631  -0.856578
997   │ -0.125534   -1.69632
998   │   0.13464   -1.27874
999   │ -0.624633   0.444103
1000  │  0.624782   0.7126571000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │ -0.0190951
2    │   -1.24341
3    │   0.515942
4    │  -0.233944
5    │  -0.291779
6    │   0.384768
7    │  -0.453915
8    │   0.768843
9    │  -0.700479
⋮               ⋮
992  │   -2.04695
993  │  -0.948755
994  │   0.155221
995  │   0.583574
996  │   -1.30659
997  │   0.245149
998  │   0.944572
999  │  -0.164607
1000 │    1.620332×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │   0.61534   0.393871
1           │  0.506641  0.0615069

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │   0.68509   0.682031
1           │  0.767385  0.0341616
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.450743
2  │ 0.0673601
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.213299  0.905101
2     │ 0.173072  0.191427
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.524417  0.966741
2     │ 0.452511   0.87165

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.230563  0.432599
2     │  0.70131   0.18437
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.66412  0.661861
2     │ 0.300811  0.145788

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0179717   0.963899
2     │  0.302659    0.16106

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.556684  0.365623
2     │  0.44807  0.546031

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0904398   0.479435
2     │  0.635063   0.210854
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0719336    0.42834
2     │ 0.0215205   0.786134

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.51816  0.840953
2     │   0.3607  0.695431

[:, :, C=1, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.294133  0.00565728
2     │   0.146785    0.319583
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.556162  0.746829

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.267491  0.888583
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.631185
2     │ 0.224355

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0225413
2     │  0.498152
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.239652  0.176809
2     │ 0.985989  0.522103
1000×1000 Named sparse matrix with 123 Float64 nonzero entries:
	[971859988095984883  , 17822619313291261357]  =  0.5513717303769587
	[14353884801171805892, 14995138918287078531]  =  0.8888162568008577
	[15589056775630200950, 17678211741433686062]  =  0.024908419063856213
	[11373711686711023476, 17678211741433686062]  =  0.6013233500425574
	[9991688889456918816 ,  4976045735032000325]  =  0.8767773440079256
	[1051961026643939454 ,  7242692203416363180]  =  0.8530416644114112
	[281356413667926651  , 16112569381171233070]  =  0.21632317878321516
	[3004739544949339451 ,  2836200141957565154]  =  0.6751591262978864
	                                              ⋮
	[17795748529514954214, 10361974346531339474]  =  0.03073468178504113
	[99445198107514719   , 11993454575275700781]  =  0.1602865039176682
	[4302721723742542942 , 16069635275006911712]  =  0.234680705061044
	[16112569381171233070, 17737936919457265947]  =  0.3628426278702517
	[16946861163327142185,  1203336841330469213]  =  0.8352995861499031
	[53689838181604040   , 16365943061271568709]  =  0.3812282447250426
	[15507769097532104225, 16031689834122954645]  =  0.948018556841079
	[16408863325498676967,  5122894113285174381]  =  0.0492254962084242
	[11496001657944805140,  3010300210541878305]  =  0.06689215633969914Timing named index: 0.00081694, array index: 0.000422549, named key: 0.073405069
Timing sum large sparse array: 0.01592739, named: 0.014458542
done!
INFO: NamedArrays tests passed

>>> End of log
