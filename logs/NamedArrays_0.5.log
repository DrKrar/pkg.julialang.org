>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (857.94140625 MB free)
Uptime: 6390.0 sec
Load Avg:  1.17041015625  1.044921875  1.0546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     381046 s         62 s      44904 s     139375 s          9 s
#2  3503 MHz      77580 s        102 s      17632 s     532673 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.8378248376466364	0.6919160119339833	0.7230458773058912	0.9022484140900933
two	0.9126736756747964	0.19331995783231748	0.9589949949244398	0.777724749583852
a	15
b	85
c	25
d	5
e	49
f	99
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.613616  0.868415  0.721459
b           │  0.13882  0.215698  0.696297 0.6136161381662226 0.6136161381662226
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.613616  0.868415  0.721459
b     │  0.13882  0.215698  0.696297
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.613616  0.868415  0.721459
b           │  0.13882  0.215698  0.696297
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.613616  0.868415  0.721459
b     │  0.13882  0.215698  0.696297
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.758701   0.176753   0.374928   0.734549
二              │  0.138457  0.0404709    0.75668   0.798738
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.268513 0.445073 0.996482 0.776044; 0.626978 0.638325 0.679268 0.789076]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.268513  0.445073  0.996482  0.776044
two   │ 0.626978  0.638325  0.679268  0.7890762×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.268513  0.445073  0.996482  0.776044
two   │ 0.626978  0.638325  0.679268  0.7890762×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │      1.5771      1.99709  …     0.396732     -1.13085
2     │    -0.47263     0.548705  …      0.84351      1.365461000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.855139    0.361305
2     │   0.402649     1.95562
3     │   0.392097    -2.43212
4     │  -0.643464    0.110108
5     │   0.737714    0.127718
6     │  -0.267499    -1.35169
7     │   -1.18176    -1.95709
8     │    2.07075    0.535962
9     │ -0.0987252     1.81366
⋮                ⋮           ⋮
992   │  -0.878476    0.533657
993   │   -1.66119   -0.130584
994   │   -1.16066    -2.74494
995   │   0.477575   -0.523035
996   │  -0.783603    -1.22614
997   │    1.00811   -0.732708
998   │   -1.71749    -1.21949
999   │   -0.17027     1.42781
1000  │  -0.717324    0.7453461000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.312487
2    │ -0.427792
3    │  -1.39788
4    │   2.09103
5    │   1.39212
6    │ -0.388195
7    │ 0.0902157
8    │  0.190477
9    │  -1.60411
⋮              ⋮
992  │ -0.160831
993  │  0.560852
994  │ -0.984204
995  │ 0.0589958
996  │  0.133382
997  │ -0.899897
998  │ -0.855029
999  │  0.861146
1000 │  0.1995162×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.438074  0.445164
1           │ 0.396893  0.779208

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.787116  0.994263
1           │ 0.483066  0.999525
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.275434
2  │ 0.778035
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.372721  0.371975
2     │ 0.147318  0.999403
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.852967  0.528618
2     │ 0.886384   0.93427

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0140406   0.306129
2     │  0.924839   0.678088
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.763355  0.268185
2     │ 0.154512  0.763776

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.410275  0.712578
2     │ 0.735597  0.415925

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.634189  0.511118
2     │ 0.309042  0.461263

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.612682   0.198807
2     │ 0.0857877   0.980494
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.215388  0.753892
2     │ 0.601623  0.131535

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.896684  0.0286935
2     │  0.314029   0.142336

[:, :, C=1, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.733413    0.363197
2     │  0.0301619  0.00445651
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.372785  0.172513

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.775419  0.573392
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.668992
2     │ 0.490185

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.929775
2     │ 0.823563
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.565928  0.708057
2     │ 0.474046  0.498114
1000×1000 Named sparse matrix with 108 Float64 nonzero entries:
	[1388406624826958703 ,   144428425607543167]  =  0.6746503454752841
	[7026046704018437269 ,  4913249781191789579]  =  0.543496521620163
	[14499706018088212885, 13789993170142104254]  =  0.07169430412292255
	[17287069299322624247, 14343632987770563929]  =  0.03242013668797772
	[8340722336334766600 , 12809965746239821631]  =  0.7353353671394589
	[8173039252081255984 , 15422846019410515149]  =  0.09497140081399613
	[7858978801757346079 ,  8058121953372963805]  =  0.35072976627232477
	[13576140399322980841,  8058121953372963805]  =  0.2187641638552027
	                                              ⋮
	[5237071378972726705 , 12901330087571726961]  =  0.277493286915351
	[14024883472771630530, 17329041886349039120]  =  0.04526677727289785
	[1021084771360465309 ,  7608520278977511969]  =  0.6386689583996756
	[6736866286121987098 ,  8779884342238752210]  =  0.3756764793829164
	[195441584546642058  , 16365943061271568709]  =  0.10483660899842606
	[14278035825230678864, 14835807873575694564]  =  0.3318975209561592
	[14066869468942639955, 12020782256748308824]  =  0.7050396781298398
	[15518036295308090568,  3733926995351842633]  =  0.8895829510776836
	[3043368577052145501 ,  9133170895916704973]  =  0.7108148053589083Timing named index: 0.001529662, array index: 0.000743279, named key: 0.125896633
Timing sum large sparse array: 0.007470382, named: 0.013728107
done!
INFO: NamedArrays tests passed

>>> End of log
