>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (972.98828125 MB free)
Uptime: 8485.0 sec
Load Avg:  0.94677734375  0.9072265625  0.9755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     449374 s        128 s      39234 s     248025 s         18 s
#2  3499 MHz     105574 s         39 s      18681 s     702463 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.051080127762826555	0.9149598790624223	0.24718710960602963	0.3023210688086917
two	0.2564261829599743	0.07469387541853423	0.7584813199746405	0.6060786568766401
a	23
b	69
c	6
d	11
e	83
f	69
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.920341  0.0146487   0.199698
b           │  0.235654   0.718413  0.0338025 0.9203413886171281 0.9203413886171281
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.920341  0.0146487   0.199698
b     │  0.235654   0.718413  0.0338025
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.920341  0.0146487   0.199698
b           │  0.235654   0.718413  0.0338025
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.920341  0.0146487   0.199698
b     │  0.235654   0.718413  0.0338025
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.971164  0.0769147   0.619749   0.919616
二              │  0.820674  0.0909611   0.732751   0.374941
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140322627189584
0-element Named Array{Any,1}

[0.840077 0.547124 0.990807 0.532251; 0.503863 0.756184 0.182673 0.890487]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.840077  0.547124  0.990807  0.532251
two   │ 0.503863  0.756184  0.182673  0.8904872×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.840077  0.547124  0.990807  0.532251
two   │ 0.503863  0.756184  0.182673  0.8904872×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.246255     -0.525003  …     -0.644363       2.24837
2     │    -0.831253       1.06793  …       1.23086      0.7295141000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.101078      1.2298
2     │  -0.150266    0.394737
3     │    2.02154    -1.36266
4     │  -0.556644    0.650149
5     │   0.876596    -1.25931
6     │    0.70128   -0.908363
7     │    1.11497    0.509466
8     │   -1.31471     2.38808
9     │   0.219236     1.79174
⋮                ⋮           ⋮
992   │   0.398348     1.30511
993   │  -0.199955     2.02626
994   │   0.531707   -0.919187
995   │   -1.55167    0.621021
996   │    2.44976    0.490778
997   │    1.46869    -0.93665
998   │  -0.247665   -0.435201
999   │   0.433159  -0.0411573
1000  │   0.716919   -0.2162231000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   -1.32206
2    │  0.0723305
3    │    1.83636
4    │ -0.0648926
5    │   -2.99179
6    │  -0.793901
7    │     1.8218
8    │ -0.0398216
9    │   -0.60961
⋮               ⋮
992  │     1.4738
993  │    1.70189
994  │  -0.266451
995  │   0.697191
996  │    1.04887
997  │   -1.29838
998  │  -0.398677
999  │  -0.357866
1000 │  -0.2492912×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0389465   0.798972
1           │  0.751279   0.229481

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.547121  0.391632
1           │ 0.979755  0.876511
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0186652
2  │  0.335116
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.973677  0.798467
2     │ 0.201429   0.34215
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.503464  0.106825
2     │ 0.102544  0.509464

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.722801  0.619185
2     │ 0.439892  0.593528
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.169039  0.048498
2     │ 0.375013  0.386865

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.782015  0.0537539
2     │   0.60911  0.0949061

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.228411  0.556243
2     │ 0.066839  0.473129

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.40534  0.896463
2     │ 0.121224  0.722975
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0545827   0.691322
2     │ 0.0490521   0.305872

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.253949  0.898036
2     │ 0.174204  0.156862

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.758486  0.990967
2     │ 0.499276  0.460079
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.34379  0.549995

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.62091  0.921135
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.463206
2     │   0.4933

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.751477
2     │ 0.109952
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0890147   0.315095
2     │  0.403318   0.464385
1000×1000 Named sparse matrix with 113 Float64 nonzero entries:
	[10923390679270416228, 12809965746239821631]  =  0.7531282160712909
	[212886737595870541  , 16462243977607957471]  =  0.9824947899719072
	[7842570643883840414 , 16462243977607957471]  =  0.3496186002524375
	[9283096199793891681 , 16544335554558850098]  =  0.6613928525675812
	[9191039320899596764 , 17822619313291261357]  =  0.7995160970637398
	[2057797465169484997 ,  4981387750669837953]  =  0.4091798016441224
	[16583690740438463922,  8097707444526576530]  =  0.8633852805888584
	[11907679469289587679, 15493082059768908559]  =  0.9228344862272153
	                                              ⋮
	[4247719799217886270 ,  2344064818992981444]  =  0.1948004473007252
	[1348625733340586    ,  2344064818992981444]  =  0.5567457395076529
	[17609421066205025733,  8471876845144429043]  =  0.9790662649856974
	[14680060904445900148, 16655780295490676025]  =  0.370017938683312
	[12378274853958980878,  7608520278977511969]  =  0.561002285313319
	[3215182586804062522 ,  2117445326293199079]  =  0.5595777760262841
	[1861743268047760089 ,  2318046236442875673]  =  0.45267075511110777
	[10923390679270416228,  9526342322394325946]  =  0.5610667740298112
	[3753583410179171704 ,  1861743268047760089]  =  0.37464501343412016Timing named index: 0.001576692, array index: 0.000821499, named key: 0.117498118
Timing sum large sparse array: 0.01419082, named: 0.028224419
done!
INFO: NamedArrays tests passed

>>> End of log
