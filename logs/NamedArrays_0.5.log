>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.4
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (968.0 MB free)
Uptime: 8110.0 sec
Load Avg:  0.9833984375  0.98046875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     464837 s         50 s      55630 s     190971 s         15 s
#2  3499 MHz      93845 s         91 s      21055 s     679143 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.4
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.5824484591663801	0.0030413609079640302	0.9331459377721913	0.22583169407509573
two	0.9176227492496865	0.4396490955963708	0.7408869458405669	0.42327826830720605
a	82
b	99
c	24
d	68
e	45
f	52
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0852935   0.540233   0.801777
b           │  0.190333   0.287723   0.253079 0.08529349152837606 0.08529349152837606
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0852935   0.540233   0.801777
b     │  0.190333   0.287723   0.253079
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0852935   0.540233   0.801777
b           │  0.190333   0.287723   0.253079
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0852935   0.540233   0.801777
b     │  0.190333   0.287723   0.253079
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │ 0.0607349   0.577034   0.912672     0.4206
二              │  0.261399  0.0754898   0.256406   0.719372
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139726755546512
0-element Named Array{Any,1}

[0.470085 0.0756574 0.560327 0.655645; 0.935931 0.306542 0.965708 0.479151]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.470085  0.0756574   0.560327   0.655645
two   │  0.935931   0.306542   0.965708   0.4791512×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.470085  0.0756574   0.560327   0.655645
two   │  0.935931   0.306542   0.965708   0.4791512×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.649333     -0.806278  …       1.53134     -0.309651
2     │     0.705352      0.376195  …     -0.322946      0.2942381000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.291595   -0.490766
2     │  -0.156963     1.21946
3     │   0.379487   -0.771466
4     │    1.59924    -1.07428
5     │  -0.635695    0.649028
6     │   -1.22154   -0.190386
7     │    1.86173      1.8674
8     │   0.326976     1.01125
9     │   0.483402   -0.377135
⋮                ⋮           ⋮
992   │  0.0695082   -0.335698
993   │  -0.418774    -1.55744
994   │   0.175798    0.134379
995   │   0.423165    0.607749
996   │   -1.06262    -0.45113
997   │    0.54768     1.60204
998   │  -0.656539    0.194109
999   │   0.464836  -0.0388046
1000  │   -1.29944    -1.280051000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.328651
2    │  0.332838
3    │ -0.977248
4    │  0.615543
5    │   2.20453
6    │   3.27735
7    │ -0.712783
8    │  0.300406
9    │ -0.161216
⋮              ⋮
992  │   -1.4078
993  │   1.00105
994  │   1.23226
995  │ -0.258066
996  │ -0.145582
997  │   1.66631
998  │   -1.1038
999  │  -1.78943
1000 │  0.8442022×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.232763  0.0198969
1           │   0.13867   0.570558

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.211559  0.165086
1           │ 0.287025  0.332767
2-element Named Array{Float64,1}
A  │ 
───┼───────────
1  │   0.667974
2  │ 0.00641161
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.390982  0.600115
2     │ 0.448984  0.747044
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.532013  0.274055
2     │ 0.835043  0.839186

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.542262  0.494211
2     │ 0.568509  0.093936
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.59671  0.805237
2     │  0.21561  0.159289

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.538273  0.0625203
2     │ 0.0452197   0.933694

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.149074   0.588915
2     │ 0.0841916   0.910285

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.685324   0.209106
2     │ 0.0352038   0.900559
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.838209   0.757336
2     │  0.940379  0.0814575

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.137657  0.869788
2     │ 0.753261  0.975116

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.600365  0.482053
2     │ 0.630468  0.775243
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.603331  0.711982

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.148284   0.47095
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.549268
2     │ 0.777301

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.833343
2     │ 0.502207
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.78065  0.181821
2     │ 0.663499  0.684997
1000×1000 Named sparse matrix with 89 Float64 nonzero entries:
	[12405273559266350440,   144428425607543167]  =  0.8190352995713548
	[113574861176001527  ,  3929618674436644774]  =  0.8176705065286145
	[12881399881645621208,  6134978669850253296]  =  0.8854683731807311
	[4192294285141828730 ,   113574861176001527]  =  0.1726424466599894
	[14033074738777421392, 11080872162023102847]  =  0.878555783034124
	[7011600752848376140 , 14995138918287078531]  =  0.7994209603735289
	[5733714698188263838 , 12295598998729798629]  =  0.5062387663409613
	[3648183837903989091 ,  4981387750669837953]  =  0.25276503793146476
	                                              ⋮
	[7858978801757346079 , 15624079346807366426]  =  0.47989947313876624
	[303867652033633124  , 16300844420296039097]  =  0.7516503203704432
	[2713027948549010671 , 16221828541365357577]  =  0.7796801667438407
	[7519919299137062942 , 14340416566338039723]  =  0.6846881120949404
	[17678211741433686062, 14774945750507892610]  =  0.08243674603816853
	[1811302532022619362 ,  2117445326293199079]  =  0.5230644177399237
	[16840404209865735426,  8779884342238752210]  =  0.8803637569421274
	[8588666550667973691 ,  6565262192402102057]  =  0.5341532005248173
	[12452104047290745507, 13690505415342562739]  =  0.17818304496398474Timing named index: 0.000937952, array index: 0.000424492, named key: 0.073872437
Timing sum large sparse array: 0.016007084, named: 0.014942391
done!
INFO: NamedArrays tests passed

>>> End of log
