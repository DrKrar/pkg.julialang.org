>>> 'Pkg.add("CUDAdrv")' log
INFO: Cloning cache of CUDAdrv from https://github.com/JuliaGPU/CUDAdrv.jl.git
INFO: Installing CUDAdrv v0.1.0
INFO: Package database updated

>>> 'Pkg.test("CUDAdrv")' log
Julia Version 0.5.0-dev+5260
Commit f8d67f7* (2016-07-10 01:41 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing CUDAdrv
ERROR: LoadError: InitError: Could not load CUDA (or any compatible) library
 in load_library() at /home/vagrant/.julia/v0.5/CUDAdrv/src/base.jl:17
 in __init_base__() at /home/vagrant/.julia/v0.5/CUDAdrv/src/base.jl:77
 in __init__() at /home/vagrant/.julia/v0.5/CUDAdrv/src/CUDAdrv.jl:30
 in _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:174
 in require(::Symbol) at ./loading.jl:365
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
during initialization of module CUDAdrv
while loading /home/vagrant/.julia/v0.5/CUDAdrv/test/runtests.jl, in expression starting on line 1
===============================[ ERROR: CUDAdrv ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/CUDAdrv/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: CUDAdrv had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
