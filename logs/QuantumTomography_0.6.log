>>> 'Pkg.add("QuantumTomography")' log
INFO: Cloning cache of QuantumTomography from https://github.com/BBN-Q/QuantumTomography.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing Cliffords v0.3.0
INFO: Installing Convex v0.4.0
INFO: Installing DataStructures v0.4.6
INFO: Installing Distributions v0.11.0
INFO: Installing Iterators v0.2.0
INFO: Installing MathProgBase v0.5.7
INFO: Installing PDMats v0.5.0
INFO: Installing QuantumInfo v0.0.2
INFO: Installing QuantumTomography v0.0.2
INFO: Installing Rmath v0.1.4
INFO: Installing SCS v0.2.7
INFO: Installing SHA v0.2.1
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing URIParser v0.1.6
INFO: Building Rmath
INFO: Building SCS
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of QuantumTomography
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("QuantumTomography")' log
Julia Version 0.6.0-dev.1131
Commit 4523ba9 (2016-10-27 01:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (585.12109375 MB free)
Uptime: 14993.0 sec
Load Avg:  1.0458984375  1.0380859375  0.99365234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     840740 s       7478 s     103010 s     386453 s         30 s
#2  3500 MHz     264788 s       1010 s      52647 s    1145934 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - QuantumTomography             0.0.2
17 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Cliffords                     0.3.0
 - Compat                        0.9.3
 - Convex                        0.4.0
 - DataStructures                0.4.6
 - Distributions                 0.11.0
 - Iterators                     0.2.0
 - MathProgBase                  0.5.7
 - PDMats                        0.5.0
 - QuantumInfo                   0.0.2
 - Rmath                         0.1.4
 - SCS                           0.2.7
 - SHA                           0.2.1
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
INFO: Computing test dependencies for QuantumTomography...
INFO: Cloning cache of RandomQuantum from https://github.com/BBN-Q/RandomQuantum.jl.git
INFO: Cloning cache of SchattenNorms from https://github.com/BBN-Q/SchattenNorms.jl.git
INFO: Installing RandomQuantum v0.0.1
INFO: Installing SchattenNorms v0.0.2
INFO: Building SCS
INFO: Testing QuantumTomography
WARNING: Method definition norm(Convex.AbstractExpr, Symbol) in module Convex at /home/vagrant/.julia/v0.6/Convex/src/atoms/second_order_cone/norm.jl:45 overwritten at deprecated.jl:49.
WARNING: Module Convex with uuid 15003726691305 is missing from the cache.
This may mean module Convex does not support precompilation but is imported by a module that does.
ERROR: LoadError: LoadError: Declaring __precompile__(false) is not allowed in files that are being precompiled.
 in require(::Symbol) at ./loading.jl:416
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SchattenNorms/src/dnorm.jl, in expression starting on line 15
while loading /home/vagrant/.julia/v0.6/SchattenNorms/src/SchattenNorms.jl, in expression starting on line 62
ERROR: LoadError: Failed to precompile SchattenNorms to /home/vagrant/.julia/lib/v0.6/SchattenNorms.ji.
 in compilecache(::String) at ./loading.jl:672
 in require(::Symbol) at ./loading.jl:453
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/QuantumTomography/test/runtests.jl, in expression starting on line 1
==========================[ ERROR: QuantumTomography ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/QuantumTomography/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing RandomQuantum v0.0.1
INFO: Removing SchattenNorms v0.0.2
ERROR: QuantumTomography had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
