>>> 'Pkg.add("JuliaParser")' log
INFO: Installing AbstractTrees v0.0.3
INFO: Installing JuliaParser v0.7.3
INFO: Package database updated

>>> 'Pkg.test("JuliaParser")' log
Julia Version 0.5.0-dev+5186
Commit a8bca12* (2016-07-07 02:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for JuliaParser...
INFO: Installing FactCheck v0.4.3
INFO: Testing JuliaParser
test skip to end of line
  > no line break in buffer
  > empty buffer
7 facts verified.
test read operator
1268 facts verified.
test string_to_number
  > NaN
  > Inf
  > float64
  > float32
  > integers
160 facts verified.
test is char hex
23 facts verified.
test is char oct
9 facts verified.
test is char bin
3 facts verified.
test uint neg
2 facts verified.
test sized uint literal
  > hexadecimal
  > octal
  > binary
60 facts verified.
test accum_digits
6 facts verified.
test compare num strings
3 facts verified.
test is oct within uint 128
3 facts verified.
test is within int128
4 facts verified.
test readnumber
  > signed integer
  > decimal
  > floating point exponent
  > leading dot
  > floating point hex
  > binary
  > hex
  > bigint
44 facts verified.
test skipwhitespace
5 facts verified.
test skip comment
  > must start with a comment symbol
5 facts verified.
test skip multiline comment
10 facts verified.
test skip ws and comment
5 facts verified.
test TokenStream constructor
1 fact verified.
test set_token! / last_token
4 facts verified.
test put_back!
2 facts verified.
test peek_token
4 facts verified.
test take_token
4 facts verified.
test require_token
3 facts verified.
test next_token
17 facts verified.
test utf8sizeof
5 facts verified.
test windows style newline
1 fact verified.
WARNING: Method definition tokens(JuliaParser.Lexer.TokenStream) in module Main at /home/vagrant/.julia/v0.5/JuliaParser/test/lexer.jl:683 overwritten at /home/vagrant/.julia/v0.5/JuliaParser/test/parser.jl:9.
WARNING: Method definition tokens(AbstractString) in module Main at /home/vagrant/.julia/v0.5/JuliaParser/test/lexer.jl:690 overwritten at /home/vagrant/.julia/v0.5/JuliaParser/test/parser.jl:16.
test parse IOBuffer
1 fact verified.
test parse IOStream
1 fact verified.
test parse string
1 fact verified.
test special case all whitespace
8 facts verified.
test simple expressions/operators
275 facts verified.
test assignment expressions
4 facts verified.
test parse single operator
601 facts verified.
test tuple expressions
17 facts verified.
test parse block
3 facts verified.
test range expressions
9 facts verified.
parse symbol / expression quote
3 facts verified.
parse misplaced (=)
1 fact verified.
test char literal expression
5 facts verified.
test string literal expression
1 fact verified.
test prefixed string literals
3 facts verified.
test cell expressions
9 facts verified.
test cat expressions
9 facts verified.
test generator expressions
2 facts verified.
test macrocall expression
3 facts verified.
test backquote (cmd) expression
3 facts verified.
test quote/begin expression
4 facts verified.
test while expression
2 facts verified.
test for loop expression
4 facts verified.
test if condtion expression
4 facts verified.
test let expression
3 facts verified.
test global/local reserved words
7 facts verified.
test function expressions
6 facts verified.
test function return tuple
2 facts verified.
test array ref
1 fact verified.
test macro expressions
4 facts verified.
test abstract type expression
5 facts verified.
test unary operator expressions
11 facts verified.
test multiply expressions
4 facts verified.
test type assertions
4 facts verified.
test type / immutable expression
16 facts verified.
test try, catch, finally expression
5 facts verified.
test ternary operator
2 facts verified.
test return expression
2 facts verified.
test break / continue expression
4 facts verified.
test const expression
4 facts verified.
test module expressions
5 facts verified.
test export expression
3 facts verified.
test import / using / importall expressions
24 facts verified.
test bitstype expression
2 facts verified.
test typealias expression
3 facts verified.
test ccall expression
2 facts verified.
test string interpolation
4 facts verified.
test parse do
3 facts verified.
test parse formula
3 facts verified.
parse argument list
11 facts verified.
parse test functions
2 facts verified.
parse test module
2 facts verified.
parser failures
15 facts verified.
misc errors
  > disallow dot error
2 facts verified.
incorrect parsing of hex floats
1 fact verified.
interpolate var in cache block
  Failure :: (line:272) :: fact was false
    Expression: Parser.parse(src) |> norm_ast --> Base.parse(src) |> norm_ast
      Expected: :(try 
    catch $(Expr(:$, :x)) # none, line 3:
    end)
      Occurred: :(try 
    catch $(Expr(:$, :x))
    end)
Out of 1 total fact:
  Failed:   1
parse two statements
2 facts verified.
misc syntax changes
3 facts verified.
ERROR: LoadError: FactCheck finished with 1 non-successful tests.
 in exitstatus() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:568
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/JuliaParser/test/runtests.jl, in expression starting on line 11
=============================[ ERROR: JuliaParser ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/JuliaParser/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: JuliaParser had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
