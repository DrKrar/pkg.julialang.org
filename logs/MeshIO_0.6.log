>>> 'Pkg.add("MeshIO")' log
INFO: Installing ColorTypes v0.2.12
INFO: Installing FileIO v0.2.0
INFO: Installing FixedPointNumbers v0.2.1
INFO: Installing FixedSizeArrays v0.2.5
INFO: Installing GeometryTypes v0.2.1
INFO: Installing Iterators v0.2.0
INFO: Installing MeshIO v0.0.6
INFO: Package database updated

>>> 'Pkg.test("MeshIO")' log
Julia Version 0.6.0-dev.1297
Commit 416f5f2 (2016-11-23 13:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (648.47265625 MB free)
Uptime: 2245.0 sec
Load Avg:  0.98583984375  0.9873046875  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     125102 s         51 s      17624 s      59642 s          4 s
#2  3499 MHz      38078 s         95 s       9161 s     172839 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - MeshIO                        0.0.6
7 additional packages:
 - ColorTypes                    0.2.12
 - Compat                        0.9.4
 - FileIO                        0.2.0
 - FixedPointNumbers             0.2.1
 - FixedSizeArrays               0.2.5
 - GeometryTypes                 0.2.1
 - Iterators                     0.2.0
INFO: Computing test dependencies for MeshIO...
INFO: Installing FactCheck v0.4.3
INFO: Testing MeshIO
MeshIO
  > load save 2dm
  > load save off
  > PLY ascii and binary
  > STL ascii and binary
  > Real world files
    > STL
    > PLY
    > OFF
    > OBJ
Error encountered while loading "/home/vagrant/.julia/v0.6/MeshIO/test/testfiles/test.obj".
Fatal error:
ERROR: LoadError: MethodError: no method matching isvalid(::SubString{String})
Closest candidates are:
  isvalid(::SubString{T<:AbstractString}, !Matched::Integer) at strings/types.jl:65
  isvalid(::AbstractString, !Matched::Integer) at strings/basic.jl:174
  isvalid(!Matched::Char) at strings/utf8proc.jl:20
  ...
 in load(::FileIO.Stream{FileIO.DataFormat{:OBJ},IOStream}, ::Type{GeometryTypes.HomogenousMesh{FixedSizeArrays.Point{3,Float32},GeometryTypes.Face{3,UInt32,-1},GeometryTypes.Normal{3,Float32},Void,Void,Void,Void}}) at /home/vagrant/.julia/v0.6/MeshIO/src/io/obj.jl:17
 in open(::MeshIO.##7#8{DataType}, ::FileIO.File{FileIO.DataFormat{:OBJ}}) at ./iostream.jl:152
 in load(::FileIO.File{FileIO.DataFormat{:OBJ}}) at /home/vagrant/.julia/v0.6/MeshIO/src/MeshIO.jl:20
 in #load#17(::Array{Any,1}, ::Function, ::FileIO.File{FileIO.DataFormat{:OBJ}}) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:85
 in load(::FileIO.File{FileIO.DataFormat{:OBJ}}) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:73
 in #load#13(::Array{Any,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:45
 in load(::String) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:45
 in (::##87#193)() at /home/vagrant/.julia/v0.6/MeshIO/test/runtests.jl:111
 in context(::##87#193, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::##10#116)() at /home/vagrant/.julia/v0.6/MeshIO/test/runtests.jl:110
 in context(::##10#116, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::##1#107)() at /home/vagrant/.julia/v0.6/MeshIO/test/runtests.jl:38
 in facts(::##1#107, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/MeshIO/test/runtests.jl, in expression starting on line 5
===============================[ ERROR: MeshIO ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/MeshIO/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: MeshIO had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
