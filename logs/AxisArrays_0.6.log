>>> 'Pkg.add("AxisArrays")' log
INFO: Installing AxisArrays v0.0.4
INFO: Installing IntervalSets v0.0.3
INFO: Installing Iterators v0.3.0
INFO: Installing RangeArrays v0.1.2
INFO: Package database updated

>>> 'Pkg.test("AxisArrays")' log
Julia Version 0.6.0-pre.alpha.33
Commit be03a06 (2017-03-03 04:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (681.8828125 MB free)
Uptime: 4022.0 sec
Load Avg:  0.90625  0.9287109375  0.8876953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3488 MHz     168584 s         78 s      20668 s     178817 s          4 s
#2  3488 MHz      65588 s         66 s      11691 s     315573 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - AxisArrays                    0.0.4
 - JSON                          0.8.3
4 additional packages:
 - Compat                        0.19.0
 - IntervalSets                  0.0.3
 - Iterators                     0.3.0
 - RangeArrays                   0.1.2
INFO: Computing test dependencies for AxisArrays...
INFO: Installing OffsetArrays v0.2.14
INFO: Installing Ranges v0.0.1
INFO: Installing Unitful v0.1.2
INFO: Testing AxisArrays
INFO: partial linear indexing deprecation warning is expected
WARNING: Partial linear indexing is deprecated. Use `reshape` to make the dimensionality of the array match the number of indices.
Stacktrace:
 [1] partial_linear_indexing_warning_lookup(::Int64) at ./deprecated.jl:1048
 [2] checkbounds_linear_indices at ./abstractarray.jl:412 [inlined]
 [3] checkbounds_indices at ./abstractarray.jl:395 [inlined]
 [4] checkbounds_indices at ./abstractarray.jl:381 [inlined]
 [5] checkbounds at ./abstractarray.jl:334 [inlined]
 [6] checkbounds at ./abstractarray.jl:354 [inlined]
 [7] macro expansion at ./multidimensional.jl:430 [inlined]
 [8] _getindex at ./multidimensional.jl:427 [inlined]
 [9] getindex at ./abstractarray.jl:864 [inlined]
 [10] getindex(::AxisArrays.AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{AxisArrays.Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},AxisArrays.Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},AxisArrays.Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}, ::UnitRange{Int64}, ::Colon) at /home/vagrant/.julia/v0.6/AxisArrays/src/indexing.jl:60
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AxisArrays/test/indexing.jl, in expression starting on line 42
WARNING: Partial linear indexing is deprecated. Use `reshape` to make the dimensionality of the array match the number of indices.
Stacktrace:
 [1] partial_linear_indexing_warning_lookup(::Int64) at ./deprecated.jl:1048
 [2] checkbounds_linear_indices at ./abstractarray.jl:402 [inlined]
 [3] checkbounds_indices at ./abstractarray.jl:395 [inlined]
 [4] checkbounds_indices at ./abstractarray.jl:381 [inlined]
 [5] checkbounds at ./abstractarray.jl:334 [inlined]
 [6] checkbounds at ./abstractarray.jl:354 [inlined]
 [7] getindex at ./reshapedarray.jl:191 [inlined]
 [8] macro expansion at ./multidimensional.jl:463 [inlined]
 [9] macro expansion at ./cartesian.jl:62 [inlined]
 [10] macro expansion at ./multidimensional.jl:460 [inlined]
 [11] _unsafe_getindex! at ./multidimensional.jl:455 [inlined]
 [12] macro expansion at ./multidimensional.jl:449 [inlined]
 [13] _unsafe_getindex(::IndexLinear, ::Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}}, ::UnitRange{Int64}, ::Base.Slice{Base.OneTo{Int64}}) at ./multidimensional.jl:442
 [14] macro expansion at ./multidimensional.jl:431 [inlined]
 [15] _getindex at ./multidimensional.jl:427 [inlined]
 [16] getindex at ./abstractarray.jl:864 [inlined]
 [17] getindex(::AxisArrays.AxisArray{Int64,3,Base.ReshapedArray{Int64,3,UnitRange{Int64},Tuple{}},Tuple{AxisArrays.Axis{:row,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},AxisArrays.Axis{:col,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}},AxisArrays.Axis{:page,StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}}}}, ::UnitRange{Int64}, ::Colon) at /home/vagrant/.julia/v0.6/AxisArrays/src/indexing.jl:60
 [18] include_from_node1(::String) at ./loading.jl:539
 [19] include(::String) at ./sysimg.jl:14
 [20] include_from_node1(::String) at ./loading.jl:539
 [21] include(::String) at ./sysimg.jl:14
 [22] process_options(::Base.JLOptions) at ./client.jl:305
 [23] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AxisArrays/test/indexing.jl, in expression starting on line 42
INFO: AxisArrays tests passed
INFO: Removing OffsetArrays v0.2.14
INFO: Removing Ranges v0.0.1
INFO: Removing Unitful v0.1.2

>>> End of log
