>>> 'Pkg.add("HyperDualNumbers")' log
INFO: Cloning cache of HyperDualNumbers from https://github.com/JuliaDiff/HyperDualNumbers.jl.git
INFO: Installing HyperDualNumbers v1.0.0
INFO: Package database updated

>>> 'Pkg.test("HyperDualNumbers")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (476.68359375 MB free)
Uptime: 31227.0 sec
Load Avg:  0.97216796875  1.02685546875  1.3408203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1887006 s        101 s     252748 s     648954 s        105 s
#2  3500 MHz     769890 s       6412 s     135477 s    2068422 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - HyperDualNumbers              1.0.0
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.9.2
INFO: Testing HyperDualNumbers
Running tests:
  * test_basics.jl *
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/HyperDualNumbers/test/runtests.jl:9 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/HyperDualNumbers/src/hyperdual.jl, in expression starting on line 61

Examples of show() for hyperdual numbers with NaN:

hdNaN = NaN + 0.0ϵ1 + 0.0ϵ2 + 0.0ϵ1ϵ2
hdNaN + hd4 = NaN + 4.0ϵ1 + 3.0ϵ2 + 4.0ϵ1ϵ2

Testing includes Tim Holy's division performance improvement.
Testing includes ngedwin98's fixes for asin, acos and atan.



  * test_TimHoly_example.jl *
8//25 - 8//5ϵ1 - 8//5ϵ2 + 144//25ϵ1ϵ2



  * test_Paper_example.jl *

"THE" example
f(1.5) = 4.497780053946162

t0 = 1.5 + 1.0ϵ1 + 1.0ϵ2 + 0.0ϵ1ϵ2
t1 = 4.4816890703380645 + 4.4816890703380645ϵ1 + 4.4816890703380645ϵ2 + 4.4816890703380645ϵ1ϵ2
t2 = 0.9974949866040544 + 0.0707372016677029ϵ1 + 0.0707372016677029ϵ2 - 0.9974949866040544ϵ1ϵ2
t3 = 0.9925037693693151 + 0.21114975082386195ϵ1 + 0.21114975082386195ϵ2 - 2.947564004699509ϵ1ϵ2
t4 = 0.0707372016677029 - 0.9974949866040544ϵ1 - 0.9974949866040544ϵ2 - 0.0707372016677029ϵ1ϵ2
t5 = 0.000353951393082256 - 0.014973651704218029ϵ1 - 0.014973651704218029ϵ2 + 0.42123764746847714ϵ1ϵ2
t5a = 0.000353951393082256 - 0.014973651704218029ϵ1 - 0.014973651704218029ϵ2 + 0.42123764746847714ϵ1ϵ2
t6 = 0.9928577207623973 + 0.19617609911964393ϵ1 + 0.19617609911964393ϵ2 - 2.526326357231032ϵ1ϵ2
t7 = 1.0035903837494204 - 0.0991483686337086ϵ1 - 0.0991483686337086ϵ2 + 1.3062034995890381ϵ1ϵ2
t8 = 4.497780053946162 + 4.053427893898621ϵ1 + 4.053427893898621ϵ2 + 9.463073681596603ϵ1ϵ2

f(t0) = 4.497780053946162 + 4.05342789389862ϵ1 + 4.05342789389862ϵ2 + 9.463073681596601ϵ1ϵ2



INFO: HyperDualNumbers tests passed

>>> End of log
